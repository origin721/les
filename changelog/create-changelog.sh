#!/run/current-system/sw/bin/bash
##!/bin/bash

# üìù –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ changelog —Ñ–∞–π–ª–∞
# –ê–≤—Ç–æ—Ä: –°–∏—Å—Ç–µ–º–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ les.scripton.app
# –í–µ—Ä—Å–∏—è: 1.0

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ü–≤–µ—Ç–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
print_color() {
    printf "${1}${2}${NC}\n"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã
get_current_date() {
    date +"%Y_%m_%d"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ DD.MM.YYYY
get_display_date() {
    date +"%d.%m.%Y"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –≥–æ–¥–∞
get_current_year() {
    date +"%Y"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤–µ—Ä—Å–∏–∏
validate_version() {
    if [[ ! $1 =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
        print_color $RED "‚ùå –û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–µ—Ä—Å–∏–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç vX.X.X (–Ω–∞–ø—Ä–∏–º–µ—Ä, v0.1.2)"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç–∏–ø–∞ —Ä–µ–ª–∏–∑–∞
validate_release_type() {
    local valid_types=("Feature" "Bugfix" "Improvement" "Security" "Documentation" "Architecture")
    local type=$1
    
    for valid_type in "${valid_types[@]}"; do
        if [[ "$type" == "$valid_type" ]]; then
            return 0
        fi
    done
    
    print_color $RED "‚ùå –û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø —Ä–µ–ª–∏–∑–∞. –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∏–ø—ã:"
    printf "   - Feature\n   - Bugfix\n   - Improvement\n   - Security\n   - Documentation\n   - Architecture\n"
    exit 1
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–∞ changelog
create_changelog_template() {
    local version=$1
    local date_file=$2
    local date_display=$3
    local release_type=$4
    local description=$5
    local author=$6
    
    cat << EOF
# Changelog $version - $date_display

## üéØ –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞

$description

## üîß [$release_type]

### ‚úÖ [–ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è]
- **–ü—Ä–æ–±–ª–µ–º–∞:** –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –∏–ª–∏ –∑–∞–¥–∞—á–∏
- **–†–µ—à–µ–Ω–∏–µ:** –û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≥–æ, –∫–∞–∫ –±—ã–ª–∞ —Ä–µ—à–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞
- **–†–µ–∑—É–ª—å—Ç–∞—Ç:** –ß—Ç–æ –ø–æ–ª—É—á–∏–ª–æ—Å—å –≤ –∏—Ç–æ–≥–µ

### üöÄ [–î—Ä—É–≥–∞—è –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è]
- –û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
- –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
- –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è (–ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)

## üîç –î–µ—Ç–∞–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)

### –î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:

#### \`path/to/file.js\`
\`\`\`javascript
// –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞
export function example() {
  return "Hello World";
}
\`\`\`

## üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç

### ‚úÖ –ß—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:
- –°–ø–∏—Å–æ–∫ —Ä–∞–±–æ—Ç–∞—é—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π
- –£—Å–ø–µ—à–Ω—ã–µ —Ç–µ—Å—Ç—ã
- –ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏

### ‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è (–Ω–µ –∫—Ä–∏—Ç–∏—á–Ω—ã–µ):
- –°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
- Deprecated —Ñ—É–Ω–∫—Ü–∏–∏
- –ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è

## üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)

### –û–∫—Ä—É–∂–µ–Ω–∏–µ:
- **–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è:** –≤–µ—Ä—Å–∏—è
- **–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:** —Å–ø–∏—Å–æ–∫
- **–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:** –Ω–∞—Å—Ç—Ä–æ–π–∫–∏

### –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞:
- –û–ø–∏—Å–∞–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
- –ù–æ–≤—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
- –†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥

---

**–í–µ—Ä—Å–∏—è:** $version  
**–î–∞—Ç–∞:** $date_display  
**–¢–∏–ø:** $release_type  
**–ê–≤—Ç–æ—Ä:** $author  
**–¢–µ–≥–∏:** #category #component #technology
EOF
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    print_color $BLUE "üìù –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ changelog —Ñ–∞–π–ª–∞"
    print_color $BLUE "=================================="
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏
    if [[ -z "$1" ]]; then
        print_color $YELLOW "–í–≤–µ–¥–∏—Ç–µ –≤–µ—Ä—Å–∏—é (—Ñ–æ—Ä–º–∞—Ç vX.X.X, –Ω–∞–ø—Ä–∏–º–µ—Ä v0.1.2):"
        read -r version
    else
        version=$1
    fi
    
    validate_version "$version"
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–∏–ø–∞ —Ä–µ–ª–∏–∑–∞
    if [[ -z "$2" ]]; then
        print_color $YELLOW "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ä–µ–ª–∏–∑–∞:"
        print_color $YELLOW "1) Feature - –ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏"
        print_color $YELLOW "2) Bugfix - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫"
        print_color $YELLOW "3) Improvement - –£–ª—É—á—à–µ–Ω–∏—è"
        print_color $YELLOW "4) Security - –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å"
        print_color $YELLOW "5) Documentation - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è"
        print_color $YELLOW "6) Architecture - –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞"
        read -r type_choice
        
        case $type_choice in
            1) release_type="Feature" ;;
            2) release_type="Bugfix" ;;
            3) release_type="Improvement" ;;
            4) release_type="Security" ;;
            5) release_type="Documentation" ;;
            6) release_type="Architecture" ;;
            *) print_color $RED "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"; exit 1 ;;
        esac
    else
        release_type=$2
    fi
    
    validate_release_type "$release_type"
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è
    if [[ -z "$3" ]]; then
        print_color $YELLOW "–í–≤–µ–¥–∏—Ç–µ –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞:"
        read -r description
    else
        description=$3
    fi
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∞
    if [[ -z "$4" ]]; then
        print_color $YELLOW "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∞–≤—Ç–æ—Ä–∞ (–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è '–°–∏—Å—Ç–µ–º–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏'):"
        read -r author
        if [[ -z "$author" ]]; then
            author="–°–∏—Å—Ç–µ–º–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
        fi
    else
        author=$4
    fi
    
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤ –∏ –¥–∞—Ç
    current_date=$(get_current_date)
    display_date=$(get_display_date)
    current_year=$(get_current_year)
    
    filename="${current_date}_changelog_${version}.md"
    filepath="$current_year/$filename"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    if [[ ! -d "$current_year" ]]; then
        print_color $YELLOW "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ $current_year/"
        mkdir -p "$current_year"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
    if [[ -f "$filepath" ]]; then
        print_color $RED "‚ùå –§–∞–π–ª $filepath —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!"
        print_color $YELLOW "–•–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å? (y/N):"
        read -r overwrite
        if [[ "$overwrite" != "y" && "$overwrite" != "Y" ]]; then
            print_color $YELLOW "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞"
            exit 0
        fi
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    print_color $BLUE "üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ $filepath..."
    create_changelog_template "$version" "$current_date" "$display_date" "$release_type" "$description" "$author" > "$filepath"
    
    # –£—Å–ø–µ—à–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
    print_color $GREEN "‚úÖ Changelog —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!"
    print_color $GREEN "üìÑ –§–∞–π–ª: $filepath"
    print_color $GREEN "üìù –í–µ—Ä—Å–∏—è: $version"
    print_color $GREEN "üè∑Ô∏è –¢–∏–ø: $release_type"
    print_color $GREEN "üë§ –ê–≤—Ç–æ—Ä: $author"
    
    print_color $BLUE "\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    print_color $BLUE "1. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª $filepath"
    print_color $BLUE "2. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–µ—Ç–∞–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
    print_color $BLUE "3. –î–æ–±–∞–≤—å—Ç–µ –ø—Ä–∏–º–µ—Ä—ã –∫–æ–¥–∞ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏"
    print_color $BLUE "4. –û–±–Ω–æ–≤–∏—Ç–µ README.md —Ñ–∞–π–ª—ã –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏"
    
    # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª
    print_color $YELLOW "\n–•–æ—Ç–∏—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è? (y/N):"
    read -r open_file
    if [[ "$open_file" == "y" || "$open_file" == "Y" ]]; then
        if command -v code &> /dev/null; then
            code "$filepath"
        elif command -v nano &> /dev/null; then
            nano "$filepath"
        elif command -v vim &> /dev/null; then
            vim "$filepath"
        else
            print_color $YELLOW "–†–µ–¥–∞–∫—Ç–æ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω. –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª –≤—Ä—É—á–Ω—É—é: $filepath"
        fi
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
if [[ "$1" == "--help" || "$1" == "-h" ]]; then
    print_color $BLUE "üìù –°–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω–∏—è changelog —Ñ–∞–π–ª–æ–≤"
    print_color $BLUE "=================================="
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:"
    echo "  $0 [–≤–µ—Ä—Å–∏—è] [—Ç–∏–ø] [–æ–ø–∏—Å–∞–Ω–∏–µ] [–∞–≤—Ç–æ—Ä]"
    echo ""
    echo "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:"
    echo "  –≤–µ—Ä—Å–∏—è     - –í–µ—Ä—Å–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ vX.X.X (–Ω–∞–ø—Ä–∏–º–µ—Ä, v0.1.2)"
    echo "  —Ç–∏–ø        - –¢–∏–ø —Ä–µ–ª–∏–∑–∞: Feature, Bugfix, Improvement, Security, Documentation, Architecture"
    echo "  –æ–ø–∏—Å–∞–Ω–∏–µ   - –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞"
    echo "  –∞–≤—Ç–æ—Ä      - –ò–º—è –∞–≤—Ç–æ—Ä–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: '–°–∏—Å—Ç–µ–º–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏')"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 v0.1.2 Feature \"–î–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è\""
    echo "  $0 v0.0.9 Bugfix \"–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –æ—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞\" \"–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤\""
    echo ""
    echo "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º:"
    echo "  $0"
    exit 0
fi

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
