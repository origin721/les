/**
 * üì¶ –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã Legacy –º–∏–≥—Ä–∞—Ü–∏–π
 * 
 * –≠—Ç–æ—Ç —Ñ–∞–π–ª –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É
 * –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ legacy –º–∏–≥—Ä–∞—Ü–∏–π –≤ —Ä–µ–∞–ª—å–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏—è—Ö.
 */

import { 
  preloadMigrations,
  runSchemaMigrations,
  runDataMigrations,
  getCombinedAvailableMigrations,
  hasCombinedMigration,
  getCurrentDbVersion
} from './migrations';
import { DB_NAMES } from '../../constants';
import { prodInfo } from '../../../core/debug/logger';

/**
 * üéØ –ü—Ä–∏–º–µ—Ä 1: –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –º–∏–≥—Ä–∞—Ü–∏–∏ —Å legacy –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
 */
export async function exampleFullMigrationCycle(): Promise<void> {
  const dbName = DB_NAMES.MAIN_LES_STORE_V1;
  
  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é –ë–î
    const oldVersion = await getCurrentDbVersion(dbName);
    const newVersion = 10; // –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —Ö–æ—Ç–∏–º –æ–±–Ω–æ–≤–∏—Ç—å—Å—è –¥–æ –≤–µ—Ä—Å–∏–∏ 10
    
    prodInfo('üéØ –ü—Ä–∏–º–µ—Ä: –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –º–∏–≥—Ä–∞—Ü–∏–∏', {
      oldVersion,
      newVersion
    });
    
    // 2. –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç –Ω—É–∂–Ω–æ—Å—Ç—å legacy)
    const preloadedMigrations = await preloadMigrations(oldVersion, newVersion);
    
    // 3. –í —Ä–µ–∞–ª—å–Ω–æ–º –∫–æ–¥–µ –∑–¥–µ—Å—å –±—ã–ª–∞ –±—ã —Ä–∞–±–æ—Ç–∞ —Å IndexedDB transaction
    // –ù–æ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞ –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
    prodInfo('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∂–µ–Ω—ã:', {
      count: preloadedMigrations.size,
      versions: Array.from(preloadedMigrations.keys())
    });
    
    // 4. –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –±—ã–ª–æ –±—ã –∑–¥–µ—Å—å:
    // runSchemaMigrations(db, oldVersion, newVersion, preloadedMigrations);
    // await runDataMigrations(db, oldVersion, newVersion, preloadedMigrations, dbName);
    
    prodInfo('üèÅ –ü—Ä–∏–º–µ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –ø—Ä–∏–º–µ—Ä–µ –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
    throw error;
  }
}

/**
 * üîç –ü—Ä–∏–º–µ—Ä 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –º–∏–≥—Ä–∞—Ü–∏–π
 */
export async function exampleCheckMigrationAvailability(): Promise<void> {
  try {
    prodInfo('üîç –ü—Ä–∏–º–µ—Ä: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –º–∏–≥—Ä–∞—Ü–∏–π');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –≤–µ—Ä—Å–∏–∏
    const versions = [0, 1, 5, 7, 10];
    
    for (const version of versions) {
      const available = await hasCombinedMigration(version);
      prodInfo(`–í–µ—Ä—Å–∏—è ${version}: ${available ? '‚úÖ –¥–æ—Å—Ç—É–ø–Ω–∞' : '‚ùå –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞'}`);
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–∏–≥—Ä–∞—Ü–∏–π
    const allMigrations = await getCombinedAvailableMigrations();
    prodInfo('üìã –í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏:', allMigrations);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –ø—Ä–∏–º–µ—Ä–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏:', error);
    throw error;
  }
}

/**
 * ‚ö° –ü—Ä–∏–º–µ—Ä 3: –°—Ü–µ–Ω–∞—Ä–∏–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
 */
export async function exampleOptimizationScenarios(): Promise<void> {
  try {
    prodInfo('‚ö° –ü—Ä–∏–º–µ—Ä: –°—Ü–µ–Ω–∞—Ä–∏–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏');
    
    // –°—Ü–µ–Ω–∞—Ä–∏–π 1: –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (–≤–µ—Ä—Å–∏—è 0 ‚Üí 2)
    prodInfo('üì¶ –°—Ü–µ–Ω–∞—Ä–∏–π 1: –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (–±—ã—Å—Ç—Ä–∞—è –∑–∞–≥—Ä—É–∑–∫–∞)');
    const newUserMigrations = await preloadMigrations(0, 2);
    prodInfo(`–ó–∞–≥—Ä—É–∂–µ–Ω–æ –º–∏–≥—Ä–∞—Ü–∏–π: ${newUserMigrations.size} (—Ç–æ–ª—å–∫–æ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ)`);
    
    // –°—Ü–µ–Ω–∞—Ä–∏–π 2: –°—Ç–∞—Ä—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (–≤–µ—Ä—Å–∏—è 3 ‚Üí 8)  
    // –í–ù–ò–ú–ê–ù–ò–ï: –°–µ–π—á–∞—Å MIN_CURRENT_VERSION = 0, –ø–æ—ç—Ç–æ–º—É legacy –Ω–µ –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è
    // –í —Ä–µ–∞–ª—å–Ω–æ–º —Å—Ü–µ–Ω–∞—Ä–∏–∏ –Ω—É–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å MIN_CURRENT_VERSION = 7
    prodInfo('üì¶ –°—Ü–µ–Ω–∞—Ä–∏–π 2: –°—Ç–∞—Ä—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (—Å legacy)');
    const oldUserMigrations = await preloadMigrations(3, 8);
    prodInfo(`–ó–∞–≥—Ä—É–∂–µ–Ω–æ –º–∏–≥—Ä–∞—Ü–∏–π: ${oldUserMigrations.size} (–≤–∫–ª—é—á–∞—è legacy)`);
    
    // –°—Ü–µ–Ω–∞—Ä–∏–π 3: –ê–∫—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (–≤–µ—Ä—Å–∏—è 7 ‚Üí 10)
    prodInfo('üì¶ –°—Ü–µ–Ω–∞—Ä–∏–π 3: –ê–∫—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (—Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–µ)');
    const currentUserMigrations = await preloadMigrations(7, 10);
    prodInfo(`–ó–∞–≥—Ä—É–∂–µ–Ω–æ –º–∏–≥—Ä–∞—Ü–∏–π: ${currentUserMigrations.size} (—Ç–æ–ª—å–∫–æ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ)`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –ø—Ä–∏–º–µ—Ä–µ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:', error);
    throw error;
  }
}

/**
 * üß™ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö –ø—Ä–∏–º–µ—Ä–æ–≤
 */
export async function runAllLegacyExamples(): Promise<void> {
  try {
    prodInfo('üß™ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ø—Ä–∏–º–µ—Ä–æ–≤ —Å–∏—Å—Ç–µ–º—ã Legacy –º–∏–≥—Ä–∞—Ü–∏–π');
    
    await exampleFullMigrationCycle();
    await exampleCheckMigrationAvailability();
    await exampleOptimizationScenarios();
    
    prodInfo('üéâ –í—Å–µ –ø—Ä–∏–º–µ—Ä—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø—Ä–∏–º–µ—Ä–æ–≤:', error);
    throw error;
  }
}

/**
 * üìä –î–µ–º–æ —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ (–º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –∏–∑ –∫–æ–Ω—Å–æ–ª–∏)
 */
export async function debugLegacySystem(): Promise<void> {
  console.log('üêõ Debug: –°–∏—Å—Ç–µ–º–∞ Legacy –º–∏–≥—Ä–∞—Ü–∏–π');
  
  try {
    // –ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
    const allMigrations = await getCombinedAvailableMigrations();
    console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏:', allMigrations);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–Ω—ã—Ö –≤–µ—Ä—Å–∏–π
    const testVersions = [0, 1, 2, 5, 7, 10, 15];
    for (const version of testVersions) {
      const exists = await hasCombinedMigration(version);
      console.log(`üîç –í–µ—Ä—Å–∏—è ${version}: ${exists ? '‚úÖ' : '‚ùå'}`);
    }
    
    // –¢–µ—Å—Ç –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
    const scenarios = [
      { old: 0, new: 2, name: '–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å' },
      { old: 1, new: 5, name: '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å legacy' },
      { old: 7, new: 10, name: '–¢–æ–ª—å–∫–æ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ' },
    ];
    
    for (const scenario of scenarios) {
      try {
        const migrations = await preloadMigrations(scenario.old, scenario.new);
        console.log(`üéØ ${scenario.name} (${scenario.old}‚Üí${scenario.new}): ${migrations.size} –º–∏–≥—Ä–∞—Ü–∏–π`);
      } catch (error) {
        const errorMessage = error instanceof Error ? error.message : String(error);
        console.log(`‚ùå ${scenario.name}: –û—à–∏–±–∫–∞ - ${errorMessage}`);
      }
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ debug —Ñ—É–Ω–∫—Ü–∏–∏:', error);
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞
if (typeof window !== 'undefined') {
  (window as any).debugLegacySystem = debugLegacySystem;
  (window as any).runAllLegacyExamples = runAllLegacyExamples;
}
