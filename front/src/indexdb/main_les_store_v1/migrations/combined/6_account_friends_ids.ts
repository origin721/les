import {
  prodInfo,
  prodError,
  devMigration,
  devDB,
} from "../../../../core/debug/logger";
import {
  decrypt_curve25519_from_pass,
  encrypt_curve25519_from_pass,
} from "../../../../core/crypt";
import type { MigrationContext } from "../../../db_state_manager_v1/constants";
import { TABLE_NAMES } from "../../entities/constats/TABLE_NAMES";

export const migrationInfo = {
  version: 5,
  name: "account_friends_ids",
  description:
    "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π —Å–≤—è–∑–∏ –ø–æ–ª–µ–π —Å –¥—Ä—É–∑—å—è–º–∏ –∏ –∞–∫–∞—É–Ω—Ç–∞–º–∏",
  fileName: "6_account_friends_ids.ts",
};

export function migrationScheme(db: IDBDatabase): void {
  prodInfo("üì¶ –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é —Å—Ö–µ–º—ã 5: –°—Ö–µ–º–∞ –Ω–µ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è");
  // –°—Ö–µ–º–∞ –æ—Å—Ç–∞–µ—Ç—Å—è —Ç–æ–π –∂–µ, –∏–∑–º–µ–Ω—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã–µ
  prodInfo("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —Å—Ö–µ–º—ã 5 –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ");

  if (!db.objectStoreNames.contains(TABLE_NAMES.friends_ids)) {
    db.createObjectStore(TABLE_NAMES.friends_ids, { keyPath: 'id' });
    devDB(`‚úÖ –•—Ä–∞–Ω–∏–ª–∏—â–µ ${TABLE_NAMES.friends_ids} —Å–æ–∑–¥–∞–Ω–æ`);
  }
}

export async function migrationData(context: MigrationContext): Promise<void> {
  return;

}
