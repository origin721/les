import { prodInfo, devDB } from '../../../../core/debug/logger';
import type { MigrationInfo, MigrationFunction } from '../types';
import type { MigrationContext } from '../../../db_state_manager_v1/constants';
import { TABLE_NAMES } from '../../entities/constats/TABLE_NAMES';

/**
 * –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∏–≥—Ä–∞—Ü–∏–∏
 */
export const migrationInfo = {
  version: 0,
  name: 'initialization',
  description: '–°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö —Ö—Ä–∞–Ω–∏–ª–∏—â accounts, friends, rooms',
  fileName: '0_initialization.ts'
};

/**
 * –ú–∏–≥—Ä–∞—Ü–∏—è —Å—Ö–µ–º—ã: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å –±–∞–∑–æ–≤—ã–º–∏ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞–º–∏
 * –°–æ–∑–¥–∞–µ—Ç –Ω–∞—á–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ë–î —Å accounts, friends –∏ rooms
 */
export function migrationScheme(db: IDBDatabase): void {
  prodInfo('üì¶ –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é —Å—Ö–µ–º—ã 0: –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö —Ö—Ä–∞–Ω–∏–ª–∏—â');
  
  // –°–æ–∑–¥–∞–Ω–∏–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ accounts
  if (!db.objectStoreNames.contains('accounts')) {
    db.createObjectStore('accounts', { keyPath: 'id' });
    devDB('‚úÖ –•—Ä–∞–Ω–∏–ª–∏—â–µ accounts —Å–æ–∑–¥–∞–Ω–æ');
  }
  
  // –°–æ–∑–¥–∞–Ω–∏–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ friends  
  if (!db.objectStoreNames.contains('friends')) {
    db.createObjectStore('friends', { keyPath: 'id' });
    devDB('‚úÖ –•—Ä–∞–Ω–∏–ª–∏—â–µ friends —Å–æ–∑–¥–∞–Ω–æ');
  }

  if (!db.objectStoreNames.contains(TABLE_NAMES.friends_ids)) {
    db.createObjectStore(TABLE_NAMES.friends_ids, { keyPath: 'id' });
    devDB(`‚úÖ –•—Ä–∞–Ω–∏–ª–∏—â–µ ${TABLE_NAMES.friends_ids} —Å–æ–∑–¥–∞–Ω–æ`);
  }
  
  // –°–æ–∑–¥–∞–Ω–∏–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ rooms
  if (!db.objectStoreNames.contains('rooms')) {
    db.createObjectStore('rooms', { keyPath: 'id' });
    devDB('‚úÖ –•—Ä–∞–Ω–∏–ª–∏—â–µ rooms —Å–æ–∑–¥–∞–Ω–æ');
  }

  
  prodInfo('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —Å—Ö–µ–º—ã 0 –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
}

/**
 * –ú–∏–≥—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è - –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏
 */
export async function migrationData(context: MigrationContext): Promise<void> {
  const { currentUser } = context;
  prodInfo(`üì¶ –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö 0 –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${currentUser.id}`);
  
  // –ü—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏
  prodInfo(`‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö 0 –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${currentUser.id} (–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏)`);
}
