import { prodInfo, prodError, devMigration } from '../../../../core/debug/logger';

/**
 * –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∏–≥—Ä–∞—Ü–∏–∏
 */
export const migrationInfo = {
  version: 1,
  name: 'accounts_friends',
  description: '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ –∏ –º–∏–≥—Ä–∞—Ü–∏—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –¥–ª—è –ø–æ–ª—è friendsByIds',
  fileName: '1_accounts_friends.ts'
};

/**
 * –ú–∏–≥—Ä–∞—Ü–∏—è —Å—Ö–µ–º—ã: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ –∏ —É–ª—É—á—à–µ–Ω–∏–π —Å—Ö–µ–º—ã
 */
export function migrationScheme(db: IDBDatabase): void {
  prodInfo('üì¶ –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é —Å—Ö–µ–º—ã 1: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤');
  
  // –ü—Ä–∏–º–µ—Ä –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–Ω–¥–µ–∫—Å–æ–≤ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º —Ö—Ä–∞–Ω–∏–ª–∏—â–∞–º
  // –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ —Å—Ö–µ–º–∞ —É–∂–µ —Å–æ–∑–¥–∞–Ω–∞ –≤ –≤–µ—Ä—Å–∏–∏ 0, —Ç–∞–∫ —á—Ç–æ –∏–Ω–¥–µ–∫—Å—ã –º–æ–∂–Ω–æ –Ω–µ –¥–æ–±–∞–≤–ª—è—Ç—å
  // –ù–æ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ, —Ç–æ –∫–æ–¥ –±—ã–ª –±—ã —Ç–∞–∫–æ–π:
  
  // if (db.objectStoreNames.contains('accounts')) {
  //   const accountsStore = transaction.objectStore('accounts');
  //   if (!accountsStore.indexNames.contains('byEmail')) {
  //     accountsStore.createIndex('byEmail', 'email', { unique: true });
  //   }
  // }
  
  prodInfo('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —Å—Ö–µ–º—ã 1 –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
}

/**
 * –ú–∏–≥—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è friendsByIds –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∞–∫–∫–∞—É–Ω—Ç–∞–º
 */
export async function migrationData(db: IDBDatabase): Promise<void> {
  prodInfo('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—è friendsByIds');
  
  return new Promise<void>((resolve, reject) => {
    try {
      const transaction = db.transaction(["accounts"], "readwrite");
      const store = transaction.objectStore("accounts");
      const getAllRequest = store.getAll();

      getAllRequest.onsuccess = function() {
        const accountRecords = getAllRequest.result;
        
        if (accountRecords.length === 0) {
          prodInfo('‚úÖ –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏');
          resolve();
          return;
        }
        
        prodInfo(`üìã –ù–∞–π–¥–µ–Ω–æ ${accountRecords.length} –∑–∞–ø–∏—Å–µ–π –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–∏–≥—Ä–∞—Ü–∏–∏`);
        
        // –î–ª—è —ç—Ç–æ–π –ø—Ä–æ—Å—Ç–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Å—Ç–æ –∑–∞–≤–µ—Ä—à–∞–µ–º —É—Å–ø–µ—à–Ω–æ
        // –í —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ –∑–¥–µ—Å—å –±—ã–ª–∞ –±—ã –ª–æ–≥–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        prodInfo('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ (–ø–æ–∫–∞ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)');
        resolve();
      };
      
      getAllRequest.onerror = function() {
        prodError("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏:", getAllRequest.error);
        reject(getAllRequest.error);
      };

    } catch (error) {
      prodError('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ migrationData:', error);
      reject(error);
    }
  })
}
