import{z as s,P as a,Y as r,K as n}from"./index-DmpxSw00.js";const o={async getList(){return await s.fetch({path:a.GET_FRIENDS})},async getByAccountId(t){return await s.fetch({path:a.GET_FRIENDS_BY_ACCOUNT_ID,body:{myAccId:t}})},async getById(t){return await s.fetch({path:a.GET_FRIEND_BY_ID,body:{friendId:t}})},async add(t){r("🌐 API friends.add СТАРТ:",t);const c=Date.now();try{let e;Array.isArray(t)?(e={path:a.ADD_FRIENDS,body:{list:t}},r("🌐 API friends.add: используем старый формат (массив)")):(e={path:a.ADD_FRIENDS,body:{list:t.friends,myAccId:t.myAccId}},r("🌐 API friends.add: используем новый формат с myAccId:",t.myAccId)),r("🌐 API friends.add: вызываем shared_worker_store.fetch с параметрами:",e);const d=await s.fetch(e);return r("✅ API friends.add УСПЕХ за",Date.now()-c,"мс, результат:",d),d}catch(e){throw n("❌ API friends.add ОШИБКА за",Date.now()-c,"мс:",e),r("❌ API friends.add полная ошибка:",e==null?void 0:e.stack),e}},async delete(t){await s.fetch({path:a.DELETE_FRIENDS,body:{ids:t}})},async put(t){await s.fetch({path:a.PUT_FRIENDS,body:{list:t}})}},i={async login(t){await s.fetch({path:a.LOGIN,body:{pass:t}})},async getList(){return await s.fetch({path:a.GET_ACCOUNTS})}},h={subscribeActiveTabsCount(t){return s.subscribeWorker({reqParam:{path:a.GET_ACTIVE_TABS_COUNT},utils:{callback:c=>t(c.count)}})}},y={friends:o,accounts:i,tabs:h};export{y as s};
