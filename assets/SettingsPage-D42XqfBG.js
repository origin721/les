const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/-1_tmp_test-BAKPz2P1.js","assets/index-233eToPH.js","assets/index-D6sU3GtJ.css","assets/0_initialization-DxSrEKGu.js","assets/1_accounts_friends-DDEhIEEx.js","assets/decrypt_curve25519_from_pass-BC-WMFT2.js","assets/2_accounts_versioning-Bh6_vXNF.js","assets/3_rooms_versioning-BC9XapZy.js","assets/4_accounts_room_ids-DGXy-kyV.js","assets/5_entities_version_fields-C0hkdt-V.js"])))=>i.map(i=>d[i]);
var ze=Object.defineProperty;var Ge=(s,t,e)=>t in s?ze(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e;var De=(s,t,e)=>Ge(s,typeof t!="symbol"?t+"":t,e);import{K as I,I as h,M as xe,ay as Me,az as J,aA as We,a as we,f as x,D as Z,x as v,n as D,d as S,l,y as $,S as u,E as d,p as St,a5 as _e,m as Bt,e as yt,Z as ge,N as tt,aB as Fe,t as z,_ as me,w as _,a6 as $e,C as Lt,aC as He,a0 as Ve,O as Ae,a7 as Ye,R as fe,a4 as Qe,j as C,aD as Te,s as it,k as kt,L as Ie,i as Oe,ad as ce,z as Ke,o as Ze}from"./index-233eToPH.js";import{B as Je}from"./BasePage-Bt-SxZ-j.js";import{s as Ue}from"./index-C67-MMLD.js";const qt={0:"0_initialization",1:"1_accounts_friends",2:"2_accounts_versioning",3:"3_rooms_versioning",4:"4_accounts_room_ids",5:"5_entities_version_fields"},Re=0,ue={MAIN_LES_STORE_V1:"main_les_store_v1",DB_STATE_MANAGER_V1:"db_state_manager_v1",ENTITY_VERSIONS_V1:"entity_versions_v1"},Tt={IDLE:"idle",UPDATE_STARTED:"update_started",UPDATE_SUCCESS:"update_success",UPDATE_FAILED:"update_failed",CORRUPTED:"corrupted"},Xe=1;function Ee(){return new Promise((s,t)=>{const e=indexedDB.open(ue.DB_STATE_MANAGER_V1,Xe);e.onupgradeneeded=r=>{const o=e.result;o.objectStoreNames.contains("db_states")||(o.createObjectStore("db_states",{keyPath:"id"}),h("✅ Создано хранилище db_states"))},e.onsuccess=()=>{s(e.result)},e.onerror=()=>{I("❌ Ошибка открытия базы состояний:",e.error),t(e.error)}})}async function _t(s){try{const t=await Ee();return new Promise((e,r)=>{const o=t.transaction(["db_states"],"readonly"),a=o.objectStore("db_states").get(s);a.onsuccess=()=>{e(a.result||null)},a.onerror=()=>{r(a.error)},o.oncomplete=()=>{t.close()}})}catch(t){return I("❌ Ошибка получения состояния БД:",t),null}}async function se(s){try{const t=await Ee();return new Promise((e,r)=>{const o=t.transaction(["db_states"],"readwrite"),i=o.objectStore("db_states");s.lastUpdated=Date.now();const a=i.put(s);a.onsuccess=()=>{h("✅ Состояние БД обновлено:",{dbName:s.dbName,version:s.version,status:s.status}),e()},a.onerror=()=>{I("❌ Ошибка обновления состояния БД:",a.error),r(a.error)},o.oncomplete=()=>{t.close()}})}catch(t){throw I("❌ Критическая ошибка обновления состояния БД:",t),t}}async function re(s,t,e,r,o){try{let i=await _t(s);i?(i.status=t,e!==void 0&&(i.version=e),r!==void 0&&(i.targetVersion=r),o!==void 0&&(i.errorMessage=o)):i={id:s,dbName:s,version:e||0,status:t,lastUpdated:Date.now()},await se(i)}catch(i){throw I("❌ Ошибка установки статуса обновления:",i),i}}async function ke(s){const t=await _t(s);return(t==null?void 0:t.version)||0}async function Pe(s){const t=await _t(s);return t?t.status!==Tt.UPDATE_STARTED:!0}async function de(){try{const s=await Ee();return new Promise((t,e)=>{const r=s.transaction(["db_states"],"readonly"),i=r.objectStore("db_states").getAll();i.onsuccess=()=>{t(i.result)},i.onerror=()=>{e(i.error)},r.oncomplete=()=>{s.close()}})}catch(s){return I("❌ Ошибка получения всех состояний БД:",s),[]}}async function Ce(s,t,e){try{let r=await _t(s);r||(r={id:s,dbName:s,version:t,status:Tt.UPDATE_STARTED,lastUpdated:Date.now()}),r.migrationStartTime=Date.now(),r.targetVersion=e,r.executedMigrations=[],r.migratedTables=[],await se(r),h("⏱️ Начат таймер миграции:",{dbName:s,fromVersion:t,toVersion:e})}catch(r){throw I("❌ Ошибка записи начала миграции:",r),r}}async function Ne(s){try{const t=await _t(s);if(!t||!t.migrationStartTime){I("❌ Не найдено начало миграции для расчета времени:",s);return}const e=Date.now();t.migrationEndTime=e,t.migrationDurationMs=e-t.migrationStartTime,await se(t),h("✅ Завершен таймер миграции:",{dbName:s,durationMs:t.migrationDurationMs,durationSec:Math.round(t.migrationDurationMs/1e3)})}catch(t){throw I("❌ Ошибка записи окончания миграции:",t),t}}async function Pt(s){try{const t=await _t(s);if(!t||t.status!==Tt.UPDATE_STARTED)return!1;const e=10*60*1e3,r=Date.now(),o=t.migrationStartTime?r-t.migrationStartTime:r-t.lastUpdated,i=o>e;return i&&h("⚠️ Обнаружена зависшая миграция:",{dbName:s,ageMinutes:Math.round(o/6e4),lastUpdated:new Date(t.lastUpdated).toISOString()}),i}catch(t){return I("❌ Ошибка проверки зависших миграций:",t),!1}}async function Ct(s){try{const t=await _t(s);if(!t){h("ℹ️ Состояние БД не найдено, сброс не требуется:",s);return}t.status=Tt.IDLE,t.errorMessage="Миграция была сброшена из-за зависания",delete t.migrationStartTime,delete t.migrationEndTime,delete t.migrationDurationMs,delete t.targetVersion,await se(t),h("🔄 Сброшена зависшая миграция:",s)}catch(t){throw I("❌ Ошибка сброса зависшей миграции:",t),t}}async function je(s){try{const t=await _t(s);return t?{totalDuration:t.migrationDurationMs||0,lastMigrationDate:t.migrationEndTime?new Date(t.migrationEndTime):null,executedMigrations:t.executedMigrations||[]}:{totalDuration:0,lastMigrationDate:null,executedMigrations:[]}}catch(t){return I("❌ Ошибка получения статистики миграций:",t),{totalDuration:0,lastMigrationDate:null,executedMigrations:[]}}}const tr=Object.freeze(Object.defineProperty({__proto__:null,canStartUpdate:Pe,detectStuckMigrations:Pt,endMigrationTimer:Ne,getAllDbStates:de,getDbState:_t,getMigrationStats:je,getPreviousDbVersion:ke,resetStuckMigration:Ct,setUpdateStatus:re,startMigrationTimer:Ce,updateDbState:se},Symbol.toStringTag,{value:"Module"}));class er{static async addVersionToAllRecords(t,e,r){return new Promise((o,i)=>{try{h(`🔄 Добавление версии ${r} ко всем записям в ${e}...`);const a=t.transaction([e],"readwrite"),n=a.objectStore(e);let g=0,f=0;const m=n.getAll();m.onsuccess=()=>{const y=m.result;if(g=y.length,y.length===0){h(`✅ Store ${e} пуст, версионирование не требуется`),o();return}let p=0;y.forEach(w=>{if(!w.hasOwnProperty("version")){w.version=r,p++;const b=n.put(w);b.onsuccess=()=>{f++,p--,p===0&&(h(`✅ Версионирование ${e} завершено:`,{processed:g,updated:f,version:r}),o())},b.onerror=()=>{I(`❌ Ошибка обновления записи в ${e}:`,b.error),i(b.error)}}}),p===0&&(h(`✅ Все записи в ${e} уже имеют версию`),o())},m.onerror=()=>{I(`❌ Ошибка получения записей из ${e}:`,m.error),i(m.error)},a.onerror=()=>{I(`❌ Ошибка транзакции версионирования ${e}:`,a.error),i(a.error)}}catch(a){I(`❌ Критическая ошибка версионирования ${e}:`,a),i(a)}})}static async validateRecordVersions(t,e){try{h(`🔍 Проверка версий записей, ожидаемая версия: ${e}`);const r=Array.from(t.objectStoreNames);let o=!0;const i=[];for(const a of r){const n=await this.validateStoreVersions(t,a,e);i.push(n),n.isValid||(o=!1)}return o?h("✅ Все записи имеют корректные версии"):h("⚠️ Обнаружены записи с некорректными версиями:",i),o}catch(r){return I("❌ Ошибка проверки версий записей:",r),!1}}static async validateStoreVersions(t,e,r){return new Promise((o,i)=>{try{const g=t.transaction([e],"readonly").objectStore(e).getAll();g.onsuccess=()=>{const f=g.result;let m=0,y=0;f.forEach(w=>{w.hasOwnProperty("version")?w.version<r&&y++:m++});const p=m===0&&y===0;o({storeName:e,totalRecords:f.length,recordsWithoutVersion:m,recordsWithOldVersion:y,isValid:p})},g.onerror=()=>{i(g.error)}}catch(a){i(a)}})}static async updateAllStoresVersions(t,e,r){try{const o=r||Array.from(t.objectStoreNames);h(`🔄 Массовое обновление версий до ${e} в stores:`,o);for(const i of o)await this.addVersionToAllRecords(t,i,e);h(`✅ Массовое обновление версий завершено для ${o.length} stores`)}catch(o){throw I("❌ Ошибка массового обновления версий:",o),o}}static async getVersionStats(t){try{const e=Array.from(t.objectStoreNames),r=[];let o=0,i=0;for(const a of e){const n=await this.getStoreVersionStats(t,a);r.push(n),o+=n.totalRecords,i+=n.recordsWithoutVersion}return{stores:r,summary:{totalStores:e.length,totalRecords:o,totalWithoutVersion:i}}}catch(e){return I("❌ Ошибка получения статистики версий:",e),{stores:[],summary:{totalStores:0,totalRecords:0,totalWithoutVersion:0}}}}static async getStoreVersionStats(t,e){return new Promise((r,o)=>{try{const n=t.transaction([e],"readonly").objectStore(e).getAll();n.onsuccess=()=>{const g=n.result,f={};let m=0;g.forEach(y=>{if(!y.hasOwnProperty("version"))m++;else{const p=String(y.version);f[p]=(f[p]||0)+1}}),r({name:e,totalRecords:g.length,versionsDistribution:f,recordsWithoutVersion:m})},n.onerror=()=>{o(n.error)}}catch(i){o(i)}})}static async removeVersionFromAllRecords(t,e){return new Promise((r,o)=>{try{h(`🔄 Удаление поля version из всех записей в ${e}...`);const a=t.transaction([e],"readwrite").objectStore(e),n=a.getAll();n.onsuccess=()=>{const g=n.result;let f=0,m=0;if(g.length===0){h(`✅ Store ${e} пуст`),r();return}g.forEach(y=>{if(y.hasOwnProperty("version")){delete y.version;const p=a.put(y);p.onsuccess=()=>{m++,f++,f===g.length&&(h(`✅ Удаление версий из ${e} завершено:`,{updated:m}),r())},p.onerror=()=>{o(p.error)}}else f++,f===g.length&&r()})},n.onerror=()=>{o(n.error)}}catch(i){o(i)}})}}const Be=Object.freeze(["accounts","friends","rooms"]),rr=Object.freeze(Object.defineProperty({__proto__:null,REQUIRED_STORES:Be},Symbol.toStringTag,{value:"Module"}));async function sr(){try{xe("🔄 Загружаем legacy реестр миграций...");const s=await J(()=>import("./LEGASY_MIGRATIONS_REGISTRY-D-EDVjfO.js"),[]);if(!s.LEGACY_MIGRATIONS_REGISTRY)throw new Error("Legacy реестр не содержит LEGACY_MIGRATIONS_REGISTRY");return h("✅ Legacy реестр миграций загружен успешно"),s.LEGACY_MIGRATIONS_REGISTRY}catch(s){throw I("❌ Ошибка загрузки legacy реестра миграций:",s),s}}async function or(s,t){if(!(s<Re))return h("🚀 Используем только основной реестр миграций (legacy не требуется)"),{...qt};h("📦 Требуются legacy миграции, загружаем объединенный реестр:",{oldVersion:s,newVersion:t,minCurrentVersion:Re});const r=await sr(),o={...r,...qt};return h("✅ Объединенный реестр создан:",{legacyCount:Object.keys(r).length,currentCount:Object.keys(qt).length,totalCount:Object.keys(o).length}),o}async function le(s){return new Promise((t,e)=>{try{const r=indexedDB.open(s);r.onsuccess=()=>{const o=r.result.version;r.result.close(),t(o)},r.onerror=()=>{e(r.error)},r.onupgradeneeded=()=>{r.result.close(),t(0)}}catch(r){e(r)}})}async function nr(s,t){const e=t[s];if(!e)throw new Error(`Миграция для версии ${s} не найдена в объединенном реестре`);try{xe(`🔄 Загружаем модуль миграции: ${e}`);const r=await Me(Object.assign({"./combined/-1_tmp_test.ts":()=>J(()=>import("./-1_tmp_test-BAKPz2P1.js"),__vite__mapDeps([0,1,2])),"./combined/0_initialization.ts":()=>J(()=>import("./0_initialization-DxSrEKGu.js"),__vite__mapDeps([3,1,2])),"./combined/1_accounts_friends.ts":()=>J(()=>import("./1_accounts_friends-DDEhIEEx.js"),__vite__mapDeps([4,1,2,5])),"./combined/2_accounts_versioning.ts":()=>J(()=>import("./2_accounts_versioning-Bh6_vXNF.js"),__vite__mapDeps([6,1,2,5])),"./combined/3_rooms_versioning.ts":()=>J(()=>import("./3_rooms_versioning-BC9XapZy.js"),__vite__mapDeps([7,1,2,5])),"./combined/4_accounts_room_ids.ts":()=>J(()=>import("./4_accounts_room_ids-DGXy-kyV.js"),__vite__mapDeps([8,1,2,5])),"./combined/5_entities_version_fields.ts":()=>J(()=>import("./5_entities_version_fields-C0hkdt-V.js"),__vite__mapDeps([9,1,2,5]))}),`./combined/${e}.ts`,3);if(!r.migrationInfo||!r.migrationScheme||!r.migrationData)throw new Error(`Модуль миграции ${e} не содержит необходимые экспорты (migrationInfo, migrationScheme, migrationData)`);return h(`✅ Модуль миграции ${e} загружен успешно`),r}catch(r){throw I(`❌ Ошибка загрузки модуля миграции ${e}:`,r),r}}async function ir(s,t){const e=new Map;h("🔄 Предварительная загрузка модулей миграций:",{oldVersion:s,newVersion:t});try{const r=await or(s,t);for(let o=s;o<t;o++){const i=await nr(o,r);e.set(o,i)}return h(`✅ Предварительно загружено ${e.size} модулей миграций`),e}catch(r){throw I("❌ Ошибка предварительной загрузки миграций:",r),r}}function ve(){const s=Object.keys(qt).map(Number);return s.length>0?Math.max(...s)+1:1}function ar({db:s,realOldVersion:t,newVersion:e}){h("🚨 Экстренное выполнение встроенных миграций схемы");for(let r=0;r<e;r++)r===0&&t<=0&&(h("📦 Экстренная миграция схемы 0: Создание базовых хранилищ"),s.objectStoreNames.contains("accounts")||(s.createObjectStore("accounts",{keyPath:"id"}),h("✅ Хранилище accounts создано")),s.objectStoreNames.contains("friends")||(s.createObjectStore("friends",{keyPath:"id"}),h("✅ Хранилище friends создано")),s.objectStoreNames.contains("rooms")||(s.createObjectStore("rooms",{keyPath:"id"}),h("✅ Хранилище rooms создано")),h("✅ Экстренная миграция схемы 0 завершена")),r===1&&t<=1&&(h("📦 Экстренная миграция схемы 1: Добавление индексов"),h("✅ Экстренная миграция схемы 1 завершена"));h("🔍 Дополнительная проверка наличия критических хранилищ..."),s.objectStoreNames.contains("accounts")||(s.createObjectStore("accounts",{keyPath:"id"}),h("✅ Дополнительно создано хранилище accounts")),s.objectStoreNames.contains("friends")||(s.createObjectStore("friends",{keyPath:"id"}),h("✅ Дополнительно создано хранилище friends")),s.objectStoreNames.contains("rooms")||(s.createObjectStore("rooms",{keyPath:"id"}),h("✅ Дополнительно создано хранилище rooms"))}class cr{static async checkOnAppStart(){try{h("🔍 Проверка состояния баз данных при старте...");const t=await de();for(const e of t)await Pt(e.dbName)?(h("⚠️ Обнаружена зависшая миграция, попытка восстановления:",e.dbName),await this.recoverFromIncompleteUpdate(e.dbName)):await this.validateVersionConsistency(e.dbName);h("✅ Проверка состояния баз данных завершена")}catch(t){I("❌ Ошибка при проверке на старте приложения:",t)}}static async recoverFromIncompleteUpdate(t){try{h("🔄 Начало восстановления после некорректного завершения:",t);const e=await _t(t);if(!e){h("ℹ️ Состояние БД не найдено, восстановление не требуется:",t);return}if(!await Pt(t)){h("ℹ️ Миграция не зависла, восстановление не требуется:",t);return}const o=await le(t);if(h("📊 Сравнение версий для восстановления:",{dbName:t,stateVersion:e.version,realDbVersion:o,targetVersion:e.targetVersion}),e.targetVersion&&o>=e.targetVersion){h("✅ Миграция была завершена успешно, обновляем статус:",t),await Ct(t);return}await Ct(t),h("🔄 Восстановление завершено, миграция сброшена:",t)}catch(e){I("❌ Ошибка при восстановлении после некорректного завершения:",e);try{await Ct(t),h("🔄 Принудительный сброс статуса выполнен:",t)}catch(r){I("❌ Критическая ошибка при принудительном сбросе:",r)}}}static async validateVersionConsistency(t){try{const e=await _t(t);if(!e)return!0;const r=await le(t);return e.version!==r?(h("⚠️ Обнаружено рассогласование версий:",{dbName:t,stateVersion:e.version,realDbVersion:r}),r>e.version&&(e.version=r,await J(async()=>{const{updateDbState:o}=await Promise.resolve().then(()=>tr);return{updateDbState:o}},void 0).then(({updateDbState:o})=>o(e)),h("✅ Версия в состоянии обновлена до реальной:",r)),!1):!0}catch(e){return I("❌ Ошибка проверки согласованности версий:",e),!1}}static async validateDataIntegrity(t){try{h("🔍 Проверка целостности данных БД:",t.name);const{REQUIRED_STORES:e}=await J(async()=>{const{REQUIRED_STORES:i}=await Promise.resolve().then(()=>rr);return{REQUIRED_STORES:i}},void 0),r=e.filter(i=>!t.objectStoreNames.contains(i));if(r.length>0)return I("❌ Отсутствуют обязательные object stores:",r),!1;let o=!0;for(const i of e)try{const g=t.transaction([i],"readonly").objectStore(i).count();await new Promise((f,m)=>{g.onsuccess=()=>f(g.result),g.onerror=()=>m(g.error)})}catch(a){I(`❌ Ошибка доступа к store ${i}:`,a),o=!1}return o?h("✅ Проверка целостности данных пройдена:",t.name):I("❌ Обнаружены проблемы целостности данных:",t.name),o}catch(e){return I("❌ Ошибка при проверке целостности данных:",e),!1}}static async forceResetAllStuckMigrations(){try{h("🚨 Принудительный сброс всех зависших миграций...");const t=await de();let e=0;for(const r of t)await Pt(r.dbName)&&(await Ct(r.dbName),e++);h(`✅ Принудительно сброшено миграций: ${e}`)}catch(t){I("❌ Ошибка при принудительном сбросе всех миграций:",t)}}static async getDiagnosticInfo(){try{const t=await de(),e=[];let r=0,o=0;for(const i of t){const a=await Pt(i.dbName),n=await le(i.dbName),g=i.version===n;a&&r++,g||o++,e.push({name:i.dbName,stateVersion:i.version,realVersion:n,isStuck:a,versionConsistent:g})}return{databases:e,summary:{total:e.length,stuck:r,inconsistent:o}}}catch(t){return I("❌ Ошибка получения диагностической информации:",t),{databases:[],summary:{total:0,stuck:0,inconsistent:0}}}}}const at={DB_NAME:"DB_STATE_MANAGER_V2",STORE_NAME:"user_migration_states",VERSION:1};class nt{static async getDatabase(){return this.dbPromise||(this.dbPromise=new Promise((t,e)=>{const r=indexedDB.open(at.DB_NAME,at.VERSION);r.onupgradeneeded=o=>{const i=o.target.result;if(!i.objectStoreNames.contains(at.STORE_NAME)){const a=i.createObjectStore(at.STORE_NAME,{keyPath:"userId"});a.createIndex("userId","userId",{unique:!0}),a.createIndex("currentVersion","currentVersion",{unique:!1})}},r.onsuccess=()=>t(r.result),r.onerror=()=>e(r.error)})),this.dbPromise}static async getUserState(t){const e=await this.getDatabase();return new Promise((r,o)=>{const n=e.transaction([at.STORE_NAME],"readonly").objectStore(at.STORE_NAME).get(t);n.onsuccess=()=>r(n.result||null),n.onerror=()=>o(n.error)})}static async updateUserState(t,e){const r=await this.getDatabase(),i={...await this.getUserState(t)||{userId:t,currentVersion:0,completedMigrations:[],migrationHistory:[]},...e};return new Promise((a,n)=>{const m=r.transaction([at.STORE_NAME],"readwrite").objectStore(at.STORE_NAME).put(i);m.onsuccess=()=>a(),m.onerror=()=>n(m.error)})}static async getUsersCompletedVersion(t){const e=await this.getDatabase();return new Promise((r,o)=>{const n=e.transaction([at.STORE_NAME],"readonly").objectStore(at.STORE_NAME).getAll();n.onsuccess=()=>{const f=n.result.filter(m=>m.completedMigrations.includes(t)).map(m=>m.userId);r(f)},n.onerror=()=>o(n.error)})}static async getAllSystemUserIds(){const t=await this.getDatabase();return new Promise((e,r)=>{const a=t.transaction([at.STORE_NAME],"readonly").objectStore(at.STORE_NAME).getAllKeys();a.onsuccess=()=>e(a.result),a.onerror=()=>r(a.error)})}}De(nt,"dbPromise",null);class dr{static async loadMigrationModule(t){const e=qt[t];if(!e)throw new Error(`Миграция для версии ${t} не найдена в реестре`);try{console.log(`🔄 Загружаем модуль миграции: ${e}`);const r=await Me(Object.assign({"./migrations/combined/-1_tmp_test.ts":()=>J(()=>import("./-1_tmp_test-BAKPz2P1.js"),__vite__mapDeps([0,1,2])),"./migrations/combined/0_initialization.ts":()=>J(()=>import("./0_initialization-DxSrEKGu.js"),__vite__mapDeps([3,1,2])),"./migrations/combined/1_accounts_friends.ts":()=>J(()=>import("./1_accounts_friends-DDEhIEEx.js"),__vite__mapDeps([4,1,2,5])),"./migrations/combined/2_accounts_versioning.ts":()=>J(()=>import("./2_accounts_versioning-Bh6_vXNF.js"),__vite__mapDeps([6,1,2,5])),"./migrations/combined/3_rooms_versioning.ts":()=>J(()=>import("./3_rooms_versioning-BC9XapZy.js"),__vite__mapDeps([7,1,2,5])),"./migrations/combined/4_accounts_room_ids.ts":()=>J(()=>import("./4_accounts_room_ids-DGXy-kyV.js"),__vite__mapDeps([8,1,2,5])),"./migrations/combined/5_entities_version_fields.ts":()=>J(()=>import("./5_entities_version_fields-C0hkdt-V.js"),__vite__mapDeps([9,1,2,5]))}),`./migrations/combined/${e}.ts`,4);if(!r.migrationInfo)throw new Error(`Модуль миграции ${e} не содержит migrationInfo`);return console.log(`✅ Модуль миграции ${e} загружен успешно`),r}catch(r){throw console.error(`❌ Ошибка загрузки модуля миграции ${e}:`,r),r}}static async getAllMigrations(){const t=[];for(const e of Object.keys(qt).map(Number))try{const r=await this.loadMigrationModule(e);t.push({...r,version:e+1})}catch(r){console.error(`Не удалось загрузить миграцию версии ${e}:`,r)}return t.sort((e,r)=>e.version-r.version)}static async checkUserMigrations(t){var a;const e=await nt.getUserState(t),r=(e==null?void 0:e.currentVersion)||0,o=ve(),i=[];for(let n=r+1;n<=o;n++)(a=e==null?void 0:e.completedMigrations)!=null&&a.includes(n)||i.push(n);return i}static async migrateUser(t){const{currentUser:e,db:r,oldVersion:o,newVersion:i}=t,a=e.id;console.log(`🔄 Начинаем миграцию пользователя ${a} с версии ${o} до ${i}`),await nt.updateUserState(a,{migrationStartTime:Date.now(),currentVersion:o});try{const n=await this.checkUserMigrations(a);for(const g of n){if(g>i)break;await this.executeUserMigration(t,g);const f=await nt.getUserState(a)||{userId:a,currentVersion:o,completedMigrations:[],migrationHistory:[]};await nt.updateUserState(a,{currentVersion:g,completedMigrations:[...f.completedMigrations,g]})}await nt.updateUserState(a,{migrationEndTime:Date.now(),currentVersion:i}),console.log(`✅ Миграция пользователя ${a} завершена успешно`)}catch(n){throw console.error(`❌ Ошибка миграции пользователя ${a}:`,n),await nt.updateUserState(a,{migrationEndTime:Date.now(),errorMessage:n instanceof Error?n.message:"Unknown error"}),n}}static async executeUserMigration(t,e){var m;const{currentUser:r}=t;console.log(`📦 Выполняем миграцию версии ${e} для пользователя ${r.id}`);const o=Date.now(),i=e-1,a=await this.loadMigrationModule(i);if(!a)throw new Error(`Миграция версии ${e} не найдена`);a.migrationData&&await a.migrationData(t);const n=Date.now(),g=n-o;console.log(`✅ Миграция версии ${e} для пользователя ${r.id} завершена за ${g}мс`);const f=await nt.getUserState(r.id);if(f){const y={version:e,fileName:((m=a.migrationInfo)==null?void 0:m.fileName)||`migration_${e}`,schemaDuration:0,dataDuration:g,startTime:o,endTime:n};await nt.updateUserState(r.id,{migrationHistory:[...f.migrationHistory,y]})}}static async allUsersCompletedVersion(t,e){const r=await this.scanAllUserIds(t),o=new Set(await nt.getUsersCompletedVersion(e));return r.size===o.size&&[...r].every(i=>o.has(i))}static async scanAllUserIds(t){return new Promise((e,r)=>{const a=t.transaction(["accounts"],"readonly").objectStore("accounts").getAll();a.onsuccess=()=>{const n=a.result,g=new Set(n.map(f=>f.id));console.log(`📊 Найдено ${g.size} пользователей в системе:`,[...g]),e(g)},a.onerror=()=>{console.error("❌ Ошибка сканирования accounts для получения userIds:",a.error),r(a.error)}})}static async getUserMigrationStats(t){return await nt.getUserState(t)}}class Nt{static async scanAllUserIds(t){return new Promise((e,r)=>{const a=t.transaction(["accounts"],"readonly").objectStore("accounts").getAll();a.onsuccess=()=>{const n=a.result,g=new Set(n.map(f=>f.id));e(g)},a.onerror=()=>r(a.error)})}static async allUsersReady(t,e){try{const r=await this.scanAllUserIds(t),o=new Set(await nt.getUsersCompletedVersion(e)),i=r.size===o.size&&[...r].every(a=>o.has(a));return console.log(`🔍 Проверка готовности всех пользователей для версии ${e}:`),console.log(`   - Всего пользователей в системе: ${r.size}`),console.log(`   - Завершивших миграцию: ${o.size}`),console.log(`   - Результат: ${i?"✅ Все готовы":"⏳ Ожидание"}`),i}catch(r){return console.error("❌ Ошибка при проверке готовности пользователей:",r),!1}}static async getPendingUsers(t,e){const r=await this.scanAllUserIds(t),o=new Set(await nt.getUsersCompletedVersion(e));return[...r].filter(i=>!o.has(i))}static async getUserReadinessStats(t,e){try{const r=await this.scanAllUserIds(t),o=new Set(await nt.getUsersCompletedVersion(e)),i=[...r].filter(m=>!o.has(m)),a=r.size,n=o.size,g=a>0?Math.round(n/a*100):100,f=a===n&&a>0;return{totalUsers:a,completedUsers:n,pendingUsers:i,completionPercentage:g,isReady:f}}catch(r){return console.error("❌ Ошибка получения статистики готовности пользователей:",r),{totalUsers:0,completedUsers:0,pendingUsers:[],completionPercentage:0,isReady:!1}}}}let st=null,vt=null,K=null,ht=!1,pt=0;const lr=5*60*1e3;class It{static async getConnection(){if(await It.checkAndRecoverFromFailures(),st&&!ht)return st;if(vt)return vt;vt=It.createNewConnection();try{const t=await vt;return st=t,It.setupConnectionHandlers(t),t}catch(t){throw vt=null,t}}static async checkAndRecoverFromFailures(){try{const t=ue.MAIN_LES_STORE_V1;await Pt(t)&&(h("🔧 Обнаружена зависшая миграция, выполняем восстановление..."),await It.resetStuckMigration(t)),await cr.checkOnAppStart()}catch(t){I("❌ Ошибка при проверке состояния БД:",t)}}static async resetStuckMigration(t){try{await Ct(t),st&&(st.close(),st=null),vt=null,h("✅ Заблокированная миграция сброшена")}catch(e){throw I("❌ Ошибка сброса заблокированной миграции:",e),e}}static async createNewConnection(){return new Promise(async(t,e)=>{try{const r=ue.MAIN_LES_STORE_V1;if(!await Pe(r))throw new Error("База данных уже обновляется. Дождитесь завершения текущего обновления.");const i=await le(r),a=await ke(r),n=ve();h("📊 Информация о версиях БД:",{currentVersion:i,previousStateVersion:a,targetVersion:n,needsMigration:i<n});const g=Math.max(i,a);g<n&&(await re(r,Tt.UPDATE_STARTED,g,n),await Ce(r,g,n));let f=new Map;if(g<n){const p=Date.now();h("🔄 Предварительная загрузка модулей миграций c версии:",g),f=await ir(g,n);const w=Date.now()-p;h(`✅ Предзагрузка завершена за ${w}мс`)}let m=indexedDB.open(r,n),y=i;m.onupgradeneeded=function(p){const w=m.result,b=p.oldVersion??0,R=p.newVersion??n;if(y=b,h("🔄 IndexDB onupgradeneeded:",{oldVersion:b,newVersion:R,existingStores:Array.from(w.objectStoreNames),detectedCurrentVersion:i,usingRealOldVersion:b}),b!==i&&(h("⚠️ Обнаружена рассинхронизация версий, сбрасываем предзагруженные миграции:",{detectedVersion:i,realVersion:b}),f=new Map),b<R)try{f.size===0?ar({db:w,realOldVersion:b,newVersion:R}):It.runSchemaMigrationsWithTiming(w,b,R,f,r)}catch(L){throw I("Критическая ошибка во время миграции схемы IndexedDB:",L),L}},m.onerror=async function(){var p;I("IndexDB openRequest error:",m.error),await re(r,Tt.UPDATE_FAILED,void 0,void 0,(p=m.error)==null?void 0:p.message),e(m.error)},m.onsuccess=async function(){let p=m.result;h("✅ IndexDB соединение установлено, версия БД:",p.version);try{const w=Be.filter(b=>!p.objectStoreNames.contains(b));if(w.length>0){I("🚨 Обнаружены отсутствующие object stores:",w),h("🔄 Принудительное пересоздание базы данных..."),p.close();const b=indexedDB.deleteDatabase(r);b.onsuccess=()=>{h("✅ Поврежденная база удалена"),setTimeout(()=>{h("🔄 Перезапуск создания базы..."),It.createNewConnection().then(t).catch(e)},100)},b.onerror=()=>{I("❌ Ошибка удаления поврежденной базы:",b.error),e(b.error)};return}h("✅ Миграции схемы выполнены, БД готова к использованию"),h("ℹ️ Миграции данных будут выполнены при авторизации пользователей"),await re(r,Tt.UPDATE_SUCCESS,p.version),await Ne(r),t(p)}catch(w){I("Ошибка при выполнении миграций данных:",w);const b=w instanceof Error?w.message:String(w);await re(r,Tt.UPDATE_FAILED,void 0,void 0,b),p.close(),e(w)}},m.onblocked=function(){We("Database connection blocked"),e(new Error("Database connection blocked"))}}catch(r){I("Ошибка при инициализации IndexDB:",r),e(r)}})}static runSchemaMigrationsWithTiming(t,e,r,o,i){var a,n;h("🚀 Начинаем выполнение миграций схемы IndexedDB:",{oldVersion:e,newVersion:r,existingStores:Array.from(t.objectStoreNames)});try{for(let g=e;g<r;g++){const f=g+1;h(`📋 Выполняем миграцию схемы с версии ${g} до ${f}`);const m=o.get(g);if(!m)throw new Error(`Предварительно загруженная миграция для версии ${g} не найдена`);const y=Date.now();m.migrationScheme(t);const p=Date.now()-y;h(`✅ Миграция схемы ${m.migrationInfo.fileName} выполнена за ${p}мс`);try{m&&typeof m=="object"&&Object.defineProperty(m,"_schemaDuration",{value:p,writable:!0,configurable:!0})}catch(w){const b=w instanceof Error?w.message:String(w);console.warn(`Cannot set _schemaDuration on migration module ${(a=m.migrationInfo)==null?void 0:a.fileName}:`,b),h(`⚠️ Время выполнения схемы ${(n=m.migrationInfo)==null?void 0:n.fileName}: ${p}мс (сохранено только в логах)`)}}h("🏁 Все миграции схемы IndexedDB выполнены успешно. Финальные хранилища:",Array.from(t.objectStoreNames))}catch(g){throw I("❌ Критическая ошибка во время выполнения миграций схемы IndexedDB:",g),g}}static setupConnectionHandlers(t){t.onversionchange=function(){h("🔄 Принудительное закрытие соединения IndexDB (version change)"),K&&(clearTimeout(K),K=null),ht=!0,pt=0,t.close(),st=null,vt=null,ht=!1},t.onclose=function(){h("🔒 Соединение IndexDB закрыто"),K&&(clearTimeout(K),K=null),pt=0,st=null,vt=null,ht=!1}}static incrementActiveRequests(){pt++,K&&(clearTimeout(K),K=null)}static decrementActiveRequests(){pt=Math.max(0,pt-1),pt===0&&It.startCloseTimer()}static startCloseTimer(){K&&clearTimeout(K),K=setTimeout(()=>{st&&!ht&&pt===0&&(h(`🔒 Закрытие соединения IndexDB по таймауту (5 минут после завершения всех запросов). Активных запросов: ${pt}`),ht=!0,st.close(),st=null,vt=null,K=null,ht=!1)},lr)}static forceCloseConnection(){st&&(h("🔒 Принудительное закрытие соединения IndexDB"),K&&(clearTimeout(K),K=null),ht=!0,pt=0,st.close(),st=null,vt=null,ht=!1)}static getConnectionInfo(){return{hasConnection:!!st,isClosing:ht,activeRequestsCount:pt,hasCloseTimer:!!K,connectionPromiseActive:!!vt}}static async checkMigrationReadiness(){try{const t=await this.getConnection(),e=ve(),r=await Nt.allUsersReady(t,e),o=await Nt.getPendingUsers(t,e);return{isReady:r,pendingUsers:o,systemStatus:r?"ready":o.length>0?"partial":"blocked"}}catch(t){return console.error("❌ Ошибка проверки готовности миграций:",t),{isReady:!1,pendingUsers:[],systemStatus:"blocked"}}}static async getUsersMigrationSummary(){try{const t=await this.getConnection(),e=ve(),r=await Nt.getUserReadinessStats(t,e),o=await Nt.scanAllUserIds(t),i=[];for(const a of o){const n=await dr.getUserMigrationStats(a);i.push({userId:a,currentVersion:(n==null?void 0:n.currentVersion)||0,completedMigrations:(n==null?void 0:n.completedMigrations)||[],isReady:(n==null?void 0:n.currentVersion)===e})}return{totalUsers:r.totalUsers,completedUsers:r.completedUsers,pendingUsers:r.pendingUsers,completionPercentage:r.completionPercentage,userDetails:i}}catch(t){return console.error("❌ Ошибка получения статистики пользователей:",t),{totalUsers:0,completedUsers:0,pendingUsers:[],completionPercentage:0,userDetails:[]}}}}const ut={accounts_by_id:{},friends_by_id:{},rooms_by_id:{}};var vr=x('<span class="status-text svelte-4jntj4"> </span>'),ur=x('<div><span class="status-dot svelte-4jntj4"></span> <!></div>');function _r(s,t){let e=we(t,"size",3,"md"),r=we(t,"animated",3,!0),o=we(t,"className",3,"");const i=()=>{let f=["status-indicator",`status-${t.status}`,`size-${e()}`];return r()&&f.push("animated"),o()&&f.push(o()),f.join(" ")};var a=ur(),n=v(l(a),2);{var g=f=>{var m=vr(),y=l(m);D(()=>$(y,t.text)),S(f,m)};Z(n,f=>{t.text&&f(g)})}D(f=>d(a,1,f,"svelte-4jntj4"),[()=>u(i())]),S(s,a)}var gr=x('<div><div class="theme-preview svelte-gyqbuc"><span class="theme-icon svelte-gyqbuc"> </span> <div class="theme-info svelte-gyqbuc"><div class="theme-name svelte-gyqbuc"> </div> <div class="theme-description svelte-gyqbuc"> </div></div></div> <div class="theme-actions svelte-gyqbuc"><!></div></div>'),mr=x('<div class="theme-selector svelte-gyqbuc"><div class="themes-grid svelte-gyqbuc"></div></div>');function fr(s,t){St(t,!1);const[e,r]=ge(),o=()=>me(Ve,"$theme",e),i={cyberpunk:"🌆",watchdogs:"🔍",pixel:"🎮",terminal:"💻",arabic:"🕌"},a={cyberpunk:"Темная киберпанк тема с неоновыми акцентами",watchdogs:"Стиль в духе хакерских фильмов",pixel:"Ретро пиксельная графика",terminal:"Классический терминальный интерфейс",arabic:"Традиционный арабский стиль"};_e();var n=mr(),g=l(n);Bt(g,5,()=>He,Lt,(f,m)=>{var y=gr();let p;var w=l(y),b=l(w),R=l(b),L=v(b,2),et=l(L),G=l(et),A=v(et,2),k=l(A),N=v(w,2),q=l(N);const Y=$e(()=>o()===_(m)?"primary":"outline"),M=$e(()=>o()===_(m));tt(q,{get variant(){return _(Y)},size:"sm",onclick:()=>Fe(_(m)),get disabled(){return _(M)},children:(V,O)=>{var E=z();D(()=>$(E,o()===_(m)?"✓ Активна":"Применить")),S(V,E)},$$slots:{default:!0}}),D((V,O)=>{p=d(y,1,"theme-option svelte-gyqbuc",null,p,V),$(R,i[_(m)]||"🎨"),$(G,O),$(k,a[_(m)])},[()=>({active:o()===_(m)}),()=>_(m).toUpperCase()],$e),S(f,y)}),S(s,n),yt(),r()}const hr="_settingsContainer_1p21f_1",pr="_settingsGrid_1p21f_10",Sr="_settingSection_1p21f_16",yr="_sectionTitle_1p21f_22",wr="_settingItem_1p21f_33",$r="_settingHeader_1p21f_50",br="_settingName_1p21f_57",Ir="_settingIcon_1p21f_66",Er="_settingDescription_1p21f_70",Dr="_settingActions_1p21f_77",Ar="_statusIndicator_1p21f_99",Tr="_statusActive_1p21f_110",Rr="_themeSelector_1p21f_122",xr="_clearOptions_1p21f_126",Mr="_versionResults_1p21f_180",Vr="_userList_1p21f_187",Or="_userItem_1p21f_193",Ur="_statsGrid_1p21f_199",kr="_errorMessage_1p21f_206",Pr="_authRequired_1p21f_214",Cr="_authMessage_1p21f_222",Nr="_authDescription_1p21f_228",jr="_authActions_1p21f_233",Br="_emptyMessage_1p21f_238",Lr="_migrationList_1p21f_245",qr="_migrationItem_1p21f_254",zr="_migrationHeader_1p21f_267",Gr="_migrationDetails_1p21f_274",c={settingsContainer:hr,settingsGrid:pr,settingSection:Sr,sectionTitle:yr,settingItem:wr,settingHeader:$r,settingName:br,settingIcon:Ir,settingDescription:Er,settingActions:Dr,statusIndicator:Ar,statusActive:Tr,themeSelector:Rr,clearOptions:xr,versionResults:Mr,userList:Vr,userItem:Or,statsGrid:Ur,errorMessage:kr,authRequired:Pr,authMessage:Cr,authDescription:Nr,authActions:jr,emptyMessage:Br,migrationList:Lr,migrationItem:qr,migrationHeader:zr,migrationDetails:Gr};var Wr=x("<div><h2>🔧 Системные настройки</h2> <div><div><div><span>🎨</span> Темы интерфейса</div> <!></div> <div>Выберите тему интерфейса для персонализации внешнего вида приложения. Изменения применяются мгновенно.</div> <div><!></div></div> <div><div><div><span>⚡</span> Статус системы</div> <span> </span></div> <div>Система работает в штатном режиме. Все модули функционируют корректно.</div> <div><!></div></div></div>");function Fr(s,t){St(t,!0);const[e,r]=ge(),o=()=>me(Ve,"$theme",e),i=()=>{alert("Диагностика системы будет реализована в следующих версиях")};var a=Wr(),n=l(a),g=v(n,2),f=l(g),m=l(f),y=l(m),p=v(m,2);const w=Ae(()=>o().toUpperCase()),b=Ae(()=>`${c.statusIndicator} ${c.statusActive}`);_r(p,{status:"active",get text(){return _(w)},get className(){return _(b)}});var R=v(f,2),L=v(R,2),et=l(L);fr(et,{});var G=v(g,2),A=l(G),k=l(A),N=l(k),q=v(k,2),Y=l(q),M=v(A,2),V=v(M,2),O=l(V);tt(O,{variant:"outline",size:"sm",onclick:i,children:(E,T)=>{var U=z("🔍 Диагностика");S(E,U)},$$slots:{default:!0}}),D(E=>{d(a,1,u(c.settingSection)),d(n,1,u(c.sectionTitle)),d(g,1,u(c.settingItem)),d(f,1,u(c.settingHeader)),d(m,1,u(c.settingName)),d(y,1,u(c.settingIcon)),d(R,1,u(c.settingDescription)),d(L,1,u(c.themeSelector)),d(G,1,u(c.settingItem)),d(A,1,u(c.settingHeader)),d(k,1,u(c.settingName)),d(N,1,u(c.settingIcon)),d(q,1,`${c.statusIndicator} ${c.statusActive}`),$(Y,`● ${E??""}`),d(M,1,u(c.settingDescription)),d(V,1,u(c.settingActions))},[()=>t.systemStatus.toUpperCase()]),S(s,a),yt(),r()}var Hr=x("<div><h2>🇷🇺 Язык</h2> <div><div><div><span>🌏</span> Изменить язык</div> <span>● ДОСТУПНО</span></div> <div><!></div></div></div>");function Yr(s,t){St(t,!1),_e();var e=Hr(),r=l(e),o=v(r,2),i=l(o),a=l(i),n=l(a),g=v(a,2),f=v(i,2),m=l(f);tt(m,{variant:"outline",size:"sm",onclick:()=>Ye.setPath(fe.SELECT_LANG),children:(y,p)=>{var w=z("Выбрать другой язык");S(y,w)},$$slots:{default:!0}}),D(()=>{d(e,1,u(c.settingSection)),d(r,1,u(c.sectionTitle)),d(o,1,u(c.settingItem)),d(i,1,u(c.settingHeader)),d(a,1,u(c.settingName)),d(n,1,u(c.settingIcon)),d(g,1,`${c.statusIndicator} ${c.statusActive}`),d(f,1,u(c.settingActions))}),S(s,e),yt()}async function Le(){try{if("databases"in indexedDB){const s=await indexedDB.databases();console.log(`Found ${s.length} IndexedDB database(s) to delete`);for(const t of s)if(t.name)try{const e=indexedDB.deleteDatabase(t.name);await new Promise((r,o)=>{e.onsuccess=()=>{console.log(`✓ IndexedDB database deleted: ${t.name}`),r()},e.onerror=i=>{console.error(`Error deleting IndexedDB database: ${t.name}`,i),o(new Error(`Failed to delete database: ${t.name}`))},e.onblocked=()=>{console.warn(`IndexedDB database deletion blocked: ${t.name}`),r()}})}catch(e){console.error(`Error deleting IndexedDB database: ${t.name}`,e)}}else{console.log("Modern databases() API not available, using fallback method");const s=["store_v3","store_v2","store_v1","store"];for(const t of s)try{const e=indexedDB.deleteDatabase(t);await new Promise((r,o)=>{e.onsuccess=()=>{console.log(`✓ IndexedDB database deleted: ${t}`),r()},e.onerror=()=>{console.log(`IndexedDB database not found or already deleted: ${t}`),r()},e.onblocked=()=>{console.warn(`IndexedDB database deletion blocked: ${t}`),r()}})}catch(e){console.error(`Error deleting IndexedDB database: ${t}`,e)}}console.log("✓ IndexedDB databases cleared")}catch(s){throw console.error("Error clearing IndexedDB databases:",s),s}}async function Qr(){try{if(localStorage.clear(),console.log("✓ localStorage cleared"),sessionStorage.clear(),console.log("✓ sessionStorage cleared"),"serviceWorker"in navigator){const s=await navigator.serviceWorker.getRegistrations();if(s.length>0){console.log(`Found ${s.length} service worker(s) to unregister`);for(const t of s)try{await t.unregister(),console.log("✓ Service worker unregistered:",t.scope)}catch(e){console.error("Error unregistering service worker:",e)}}else console.log("No service workers found")}else console.log("Service Workers not supported in this browser");if("indexedDB"in window)try{await Le()}catch(s){console.error("Error clearing IndexedDB:",s)}if("caches"in window)try{const s=await caches.keys();if(s.length>0){console.log(`Found ${s.length} cache(s) to delete`);for(const t of s)await caches.delete(t),console.log("✓ Cache deleted:",t)}else console.log("No caches found")}catch(s){console.error("Error clearing caches:",s)}console.log("🧹 App data clearing completed"),alert("Все данные приложения очищены! Страница будет перезагружена."),window.location.reload()}catch(s){console.error("Error during app data clearing:",s),alert("Ошибка при очистке данных: "+(s instanceof Error?s.message:String(s)))}}async function Kr(){try{if("serviceWorker"in navigator){const s=await navigator.serviceWorker.getRegistrations();if(s.length>0){console.log(`Found ${s.length} service worker(s) to unregister`);for(const t of s)try{await t.unregister(),console.log("✓ Service worker unregistered:",t.scope)}catch(e){console.error("Error unregistering service worker:",e)}alert("Service Workers очищены! Страница будет перезагружена."),window.location.reload()}else alert("Service Workers не найдены")}else alert("Service Workers не поддерживаются в этом браузере")}catch(s){console.error("Error clearing service workers:",s),alert("Ошибка при очистке Service Workers: "+(s instanceof Error?s.message:String(s)))}}function Zr(){try{localStorage.clear(),sessionStorage.clear(),console.log("✓ Storage cleared"),alert("Локальное хранилище очищено!")}catch(s){console.error("Error clearing storage:",s),alert("Ошибка при очистке хранилища: "+(s instanceof Error?s.message:String(s)))}}async function Jr(){try{"indexedDB"in window?(await Le(),alert("IndexedDB базы данных очищены!")):alert("IndexedDB не поддерживается в этом браузере")}catch(s){console.error("Error clearing IndexedDB:",s),alert("Ошибка при очистке IndexedDB: "+(s instanceof Error?s.message:String(s)))}}var Xr=x("<div><!> <!> <!> <!></div>"),ts=x("<div><h2>💾 Управление данными</h2> <div><div><div><span>💽</span> Очистка данных</div> <span>● ДОСТУПНО</span></div> <div>Управление локальными данными приложения, включая настройки, кэш и пользовательские данные.</div> <div><!></div> <!></div></div>");function es(s,t){St(t,!1);let e=Qe(!1);function r(){C(e,!_(e))}async function o(){confirm("Вы уверены, что хотите очистить ВСЕ данные приложения? Это действие нельзя отменить.")&&await Qr()}async function i(){confirm("Очистить только Service Workers?")&&await Kr()}function a(){confirm("Очистить только локальное хранилище?")&&Zr()}async function n(){confirm("Очистить только IndexedDB базы данных?")&&await Jr()}_e();var g=ts(),f=l(g),m=v(f,2),y=l(m),p=l(y),w=l(p),b=v(p,2),R=v(y,2),L=v(R,2),et=l(L);tt(et,{variant:"outline",size:"sm",onclick:r,children:(k,N)=>{var q=z();D(()=>$(q,_(e)?"Скрыть опции":"Показать опции очистки")),S(k,q)},$$slots:{default:!0}});var G=v(L,2);{var A=k=>{var N=Xr(),q=l(N);tt(q,{variant:"danger",size:"sm",onclick:o,children:(O,E)=>{var T=z("🗑️ Очистить все данные");S(O,T)},$$slots:{default:!0}});var Y=v(q,2);tt(Y,{variant:"outline",size:"sm",onclick:i,children:(O,E)=>{var T=z("🔧 Очистить Service Workers");S(O,T)},$$slots:{default:!0}});var M=v(Y,2);tt(M,{variant:"outline",size:"sm",onclick:a,children:(O,E)=>{var T=z("💾 Очистить локальное хранилище");S(O,T)},$$slots:{default:!0}});var V=v(M,2);tt(V,{variant:"outline",size:"sm",onclick:n,children:(O,E)=>{var T=z("🗄️ Очистить IndexedDB");S(O,T)},$$slots:{default:!0}}),D(()=>d(N,1,u(c.clearOptions))),S(k,N)};Z(G,k=>{_(e)&&k(A)})}D(()=>{d(g,1,u(c.settingSection)),d(f,1,u(c.sectionTitle)),d(m,1,u(c.settingItem)),d(y,1,u(c.settingHeader)),d(p,1,u(c.settingName)),d(w,1,u(c.settingIcon)),d(b,1,`${c.statusIndicator} ${c.statusActive}`),d(R,1,u(c.settingDescription)),d(L,1,u(c.settingActions))}),S(s,g),yt()}var rs=x('<div><h2>🗂️ Управление вкладками</h2> <div><div><div><span>📊</span> Мониторинг активных вкладок</div> <span> </span></div> <div>Отслеживание количества активных вкладок приложения в реальном времени через SharedWorker. Счетчик автоматически обновляется при открытии/закрытии вкладок.</div></div> <div><div><div><span>🚪</span> Закрытие вкладок</div> <span>● ДОСТУПНО</span></div> <div>Управление открытыми вкладками приложения через broadcast сообщения. Позволяет закрывать вкладки синхронно через все экземпляры приложения.</div> <div><!> <!></div> <div style="margin-top: 8px; font-size: 0.9em; color: var(--color-text-secondary);">⚠️ "Закрыть остальные вкладки" - закроет все вкладки кроме текущей<br/> ⚠️ "Закрыть все вкладки" - закроет включая текущую вкладку</div></div></div>');function ss(s,t){St(t,!0);function e(){confirm("Закрыть все остальные вкладки приложения? Текущая вкладка останется открытой.")&&Te.closeAllOtherTabs()}function r(){confirm("Закрыть ВСЕ вкладки приложения включая текущую? Это действие закроет все открытые вкладки приложения.")&&Te.closeAllTabsIncludingCurrent()}var o=rs(),i=l(o),a=v(i,2),n=l(a),g=l(n),f=l(g),m=v(g,2),y=l(m),p=v(n,2),w=v(a,2),b=l(w),R=l(b),L=l(R),et=v(R,2),G=v(b,2),A=v(G,2),k=l(A);tt(k,{variant:"outline",size:"sm",onclick:e,children:(Y,M)=>{var V=z("🗂️ Закрыть остальные вкладки");S(Y,V)},$$slots:{default:!0}});var N=v(k,2);tt(N,{variant:"danger",size:"sm",onclick:r,children:(Y,M)=>{var V=z("❌ Закрыть все вкладки");S(Y,V)},$$slots:{default:!0}});var q=v(A,2);D(()=>{d(o,1,u(c.settingSection)),d(i,1,u(c.sectionTitle)),d(a,1,u(c.settingItem)),d(n,1,u(c.settingHeader)),d(g,1,u(c.settingName)),d(f,1,u(c.settingIcon)),d(m,1,`${c.statusIndicator} ${c.statusActive}`),$(y,`● ${t.activeTabsCount??""} АКТИВНЫХ`),d(p,1,u(c.settingDescription)),d(w,1,u(c.settingItem)),d(b,1,u(c.settingHeader)),d(R,1,u(c.settingName)),d(L,1,u(c.settingIcon)),d(et,1,`${c.statusIndicator} ${c.statusActive}`),d(G,1,u(c.settingDescription)),d(A,1,u(c.settingActions)),d(q,1,u(c.settingDescription))}),S(s,o),yt()}var os=x("<div><div><strong> </strong></div> <div><span> </span> <span> </span> <span> </span> <span> </span></div></div>"),ns=x("<h4>🔍 Детализация по миграциям</h4> <div></div>",1),is=x("<div><h4>📋 Общая информация</h4> <div><div><strong>Общее время:</strong> </div> <div><strong>Последняя миграция:</strong> </div> <div><strong>Выполнено миграций:</strong> </div></div> <!></div>"),as=x("<div><h2>⏱️ Статистика миграций</h2> <div><div><div><span>📊</span> Время выполнения миграций</div> <span>● ДОСТУПНО</span></div> <div>Детальная информация о времени выполнения миграций базы данных. Показывает продолжительность каждой миграции и общее время.</div> <div><!></div> <!></div></div>");function cs(s,t){St(t,!0);let e=it(!1),r=it(!1),o=it(null);async function i(){C(r,!0);try{const A=await je(ue.MAIN_LES_STORE_V1);C(o,A,!0),C(e,!0)}catch(A){console.error("Ошибка получения статистики миграций:",A),alert("Не удалось загрузить статистику миграций")}finally{C(r,!1)}}function a(A){return A<1e3?`${A}мс`:A<6e4?`${(A/1e3).toFixed(1)}с`:`${(A/6e4).toFixed(1)}мин`}var n=as(),g=l(n),f=v(g,2),m=l(f),y=l(m),p=l(y),w=v(y,2),b=v(m,2),R=v(b,2),L=l(R);tt(L,{variant:"outline",size:"sm",onclick:i,get disabled(){return _(r)},children:(A,k)=>{var N=z();D(()=>$(N,_(r)?"🔄 Загрузка...":"📈 Показать статистику")),S(A,N)},$$slots:{default:!0}});var et=v(R,2);{var G=A=>{var k=is(),N=v(l(k),2),q=l(N),Y=v(l(q)),M=v(q,2),V=v(l(M)),O=v(M,2),E=v(l(O)),T=v(N,2);{var U=W=>{var X=ns(),ot=v(kt(X),2);Bt(ot,21,()=>_(o).executedMigrations,Lt,(F,j)=>{var P=os(),H=l(P),rt=l(H),zt=l(rt),Mt=v(H,2),gt=l(Mt),Rt=l(gt),Vt=v(gt,2),xt=l(Vt),Ot=v(Vt,2),Ut=l(Ot),Gt=v(Ot,2),Wt=l(Gt);D((Ft,mt,wt,$t)=>{d(P,1,u(c.migrationItem)),d(H,1,u(c.migrationHeader)),$(zt,`v${_(j).version??""} - ${_(j).fileName??""}`),d(Mt,1,u(c.migrationDetails)),$(Rt,`Схема: ${Ft??""}`),$(xt,`Данные: ${mt??""}`),$(Ut,`Общее: ${wt??""}`),$(Wt,`Завершена: ${$t??""}`)},[()=>a(_(j).schemaDuration),()=>a(_(j).dataDuration),()=>a(_(j).schemaDuration+_(j).dataDuration),()=>new Date(_(j).endTime).toLocaleTimeString()]),S(F,P)}),D(()=>d(ot,1,u(c.migrationList))),S(W,X)};Z(T,W=>{_(o).executedMigrations.length>0&&W(U)})}D((W,X)=>{d(k,1,u(c.versionResults)),d(N,1,u(c.statsGrid)),$(Y,` ${W??""}`),$(V,` ${X??""}`),$(E,` ${_(o).executedMigrations.length??""}`)},[()=>a(_(o).totalDuration),()=>_(o).lastMigrationDate?_(o).lastMigrationDate.toLocaleString():"Не выполнялась"]),S(A,k)};Z(et,A=>{_(e)&&_(o)&&A(G)})}D(()=>{d(n,1,u(c.settingSection)),d(g,1,u(c.sectionTitle)),d(f,1,u(c.settingItem)),d(m,1,u(c.settingHeader)),d(y,1,u(c.settingName)),d(p,1,u(c.settingIcon)),d(w,1,`${c.statusIndicator} ${c.statusActive}`),d(b,1,u(c.settingDescription)),d(R,1,u(c.settingActions))}),S(s,n),yt()}var ds=x("<div> </div>"),ls=x("<div><div>🔐 Для просмотра версий необходимо авторизоваться</div> <div>Данные версий зашифрованы и требуют авторизации для доступа.</div> <div><!></div></div>"),vs=x("<div>База данных пуста</div>"),us=x("<div> </div>"),_s=x("<div><h4>👥 Пользователи в системе:</h4> <div><!></div> <h4>📈 Статистика пользователей:</h4> <div><div> </div> <div> </div> <div> </div></div> <h4>👥 Статистика Friends (в памяти):</h4> <div><div> </div> <div> </div> <div> </div> <div> </div></div> <h4>🏠 Статистика Rooms (в памяти):</h4> <div><div> </div> <div> </div> <div> </div> <div> </div></div></div>"),gs=x("<div><h2>🔍 Диагностика версий</h2> <div><div><div><span>📊</span> Проверка версий сущностей</div> <span>● ДОСТУПНО</span></div> <div>Проверка версий всех пользователей и сущностей в базе данных. Показывает ID пользователей и их текущие версии.</div> <div><!></div> <!> <!> <!></div></div>");function ms(s,t){St(t,!0);const[e,r]=ge(),o=()=>me(Oe,"$appAuthStore",e);let i=it(!1),a=it(!1),n=it(null),g=it(null),f=it(!1);async function m(){C(a,!0),C(g,null),C(n,null),C(f,!1);try{const E=o();if(Object.keys(E.byId).length===0){C(f,!0),C(i,!0);return}const U=await It.getConnection(),W=await Nt.getUserReadinessStats(U,2),X=await er.getVersionStats(U),ot=await Nt.scanAllUserIds(U),F=Object.values(ut.friends_by_id),j=Object.values(ut.rooms_by_id),P={total:F.length,withVersion:F.filter(rt=>rt.version!==void 0).length,withoutVersion:F.filter(rt=>rt.version===void 0).length},H={total:j.length,withVersion:j.filter(rt=>rt.version!==void 0).length,withoutVersion:j.filter(rt=>rt.version===void 0).length};C(n,{userStats:W,versionStats:X,allUserIds:Array.from(ot),entitiesStats:{friends:P,rooms:H}},!0),C(i,!0)}catch(E){C(g,E instanceof Error?E.message:String(E),!0)}finally{C(a,!1)}}var y=gs(),p=l(y),w=v(p,2),b=l(w),R=l(b),L=l(R),et=v(R,2),G=v(b,2),A=v(G,2),k=l(A);tt(k,{variant:"outline",size:"sm",onclick:m,get disabled(){return _(a)},children:(E,T)=>{var U=z();D(()=>$(U,_(a)?"⏳ Проверка...":"🔍 Проверить версии")),S(E,U)},$$slots:{default:!0}});var N=v(A,2);{var q=E=>{var T=ds(),U=l(T);D(()=>{d(T,1,u(c.errorMessage)),$(U,`❌ Ошибка: ${_(g)??""}`)}),S(E,T)};Z(N,E=>{_(g)&&E(q)})}var Y=v(N,2);{var M=E=>{var T=ls(),U=l(T),W=v(U,2),X=v(W,2),ot=l(X);Ie(ot,{get href(){return fe.AUTH},children:(F,j)=>{tt(F,{variant:"primary",size:"sm",children:(P,H)=>{var rt=z("Перейти к авторизации");S(P,rt)},$$slots:{default:!0}})},$$slots:{default:!0}}),D(()=>{d(T,1,u(c.authRequired)),d(U,1,u(c.authMessage)),d(W,1,u(c.authDescription)),d(X,1,u(c.authActions))}),S(E,T)};Z(Y,E=>{_(i)&&_(f)&&E(M)})}var V=v(Y,2);{var O=E=>{var T=_s(),U=v(l(T),2),W=l(U);{var X=ft=>{var bt=vs();D(()=>d(bt,1,u(c.emptyMessage))),S(ft,bt)},ot=ft=>{var bt=ce(),Se=kt(bt);Bt(Se,17,()=>_(n).allUserIds,Lt,(ie,ae)=>{var Qt=us(),ye=l(Qt);D(()=>{d(Qt,1,u(c.userItem)),$(ye,`User ID: ${_(ae)??""} | Version: ${_(n).userStats.completedUsers>0?"2":"1"}`)}),S(ie,Qt)}),S(ft,bt)};Z(W,ft=>{_(n).allUserIds.length===0?ft(X):ft(ot,!1)})}var F=v(U,4),j=l(F),P=l(j),H=v(j,2),rt=l(H),zt=v(H,2),Mt=l(zt),gt=v(F,4),Rt=l(gt),Vt=l(Rt),xt=v(Rt,2),Ot=l(xt),Ut=v(xt,2),Gt=l(Ut),Wt=v(Ut,2),Ft=l(Wt),mt=v(gt,4),wt=l(mt),$t=l(wt),Ht=v(wt,2),he=l(Ht),oe=v(Ht,2),pe=l(oe),Yt=v(oe,2),ne=l(Yt);D((ft,bt)=>{d(T,1,u(c.versionResults)),d(U,1,u(c.userList)),d(F,1,u(c.statsGrid)),$(P,`Всего пользователей: ${_(n).userStats.totalUsers??""}`),$(rt,`Завершили миграцию: ${_(n).userStats.completedUsers??""}`),$(Mt,`Готовность: ${_(n).userStats.completionPercentage??""}%`),d(gt,1,u(c.statsGrid)),$(Vt,`Всего friends: ${_(n).entitiesStats.friends.total??""}`),$(Ot,`С версией: ${_(n).entitiesStats.friends.withVersion??""}`),$(Gt,`Без версии: ${_(n).entitiesStats.friends.withoutVersion??""}`),$(Ft,`Готовность: ${ft??""}%`),d(mt,1,u(c.statsGrid)),$($t,`Всего rooms: ${_(n).entitiesStats.rooms.total??""}`),$(he,`С версией: ${_(n).entitiesStats.rooms.withVersion??""}`),$(pe,`Без версии: ${_(n).entitiesStats.rooms.withoutVersion??""}`),$(ne,`Готовность: ${bt??""}%`)},[()=>_(n).entitiesStats.friends.total>0?Math.round(_(n).entitiesStats.friends.withVersion/_(n).entitiesStats.friends.total*100):100,()=>_(n).entitiesStats.rooms.total>0?Math.round(_(n).entitiesStats.rooms.withVersion/_(n).entitiesStats.rooms.total*100):100]),S(E,T)};Z(V,E=>{_(i)&&_(n)&&!_(f)&&E(O)})}D(()=>{d(y,1,u(c.settingSection)),d(p,1,u(c.sectionTitle)),d(w,1,u(c.settingItem)),d(b,1,u(c.settingHeader)),d(R,1,u(c.settingName)),d(L,1,u(c.settingIcon)),d(et,1,`${c.statusIndicator} ${c.statusActive}`),d(G,1,u(c.settingDescription)),d(A,1,u(c.settingActions))}),S(s,y),yt(),r()}const jt={DB_NAME:"ENTITY_VERSIONS_V1",VERSION:1,STORES:{ENTITY_VERSIONS:"entity_versions"}};function fs(s,t){return`${s}_${t}`}function hs(){return new Promise((s,t)=>{const e=indexedDB.open(jt.DB_NAME,jt.VERSION);e.onupgradeneeded=r=>{const o=e.result;o.objectStoreNames.contains(jt.STORES.ENTITY_VERSIONS)||(o.createObjectStore(jt.STORES.ENTITY_VERSIONS,{keyPath:"id"}).createIndex("userId","userId",{unique:!1}),h("✅ Создано хранилище entity_versions"))},e.onsuccess=()=>{s(e.result)},e.onerror=()=>{t(e.error)}})}async function be(s,t){try{const o=(await hs()).transaction([jt.STORES.ENTITY_VERSIONS],"readonly").objectStore(jt.STORES.ENTITY_VERSIONS),i=fs(s,t),a=o.get(i);return new Promise((n,g)=>{a.onsuccess=()=>{const f=a.result;n((f==null?void 0:f.lastVersion)||0)},a.onerror=()=>{g(a.error)}})}catch(e){return I("❌ Ошибка получения версии сущности:",{userId:s,entityType:t,error:e}),0}}async function ps(s){try{const[t,e,r]=await Promise.all([be(s,"accounts"),be(s,"rooms"),be(s,"friends")]);return{accounts:t,rooms:e,friends:r}}catch(t){return I("❌ Ошибка получения сводки версий:",{userId:s,error:t}),{accounts:0,rooms:0,friends:0}}}function Ss(){try{const s=new Map;for(const o of Object.values(ut.accounts_by_id)){const i=o.version||0;s.set(i,(s.get(i)||0)+1)}const t=new Map;for(const o of Object.values(ut.rooms_by_id)){const i=o.version||0;t.set(i,(t.get(i)||0)+1)}const e=new Map;for(const o of Object.values(ut.friends_by_id)){const i=o.version||0;e.set(i,(e.get(i)||0)+1)}const r={accounts:Array.from(s.entries()).map(([o,i])=>({version:o,count:i})).sort((o,i)=>o.version-i.version),rooms:Array.from(t.entries()).map(([o,i])=>({version:o,count:i})).sort((o,i)=>o.version-i.version),friends:Array.from(e.entries()).map(([o,i])=>({version:o,count:i})).sort((o,i)=>o.version-i.version)};return h("📊 Анализ версий сущностей завершен:",{accountsTotal:Object.keys(ut.accounts_by_id).length,roomsTotal:Object.keys(ut.rooms_by_id).length,friendsTotal:Object.keys(ut.friends_by_id).length,result:r}),r}catch(s){return I("❌ Ошибка анализа версий сущностей:",s),{accounts:[],rooms:[],friends:[]}}}var ys=x("<div><div>Для проверки версий сущностей требуется авторизация</div> <div>Авторизуйтесь для просмотра версий ваших данных</div> <div><!></div></div>"),ws=x("<div>Нет записей аккаунтов</div>"),$s=x("<div><strong> </strong> <!></div>"),bs=x("<div>Нет записей комнат</div>"),Is=x("<div><strong> </strong> <!></div>"),Es=x("<div>Нет записей друзей</div>"),Ds=x("<div><strong> </strong> <!></div>"),As=x("<h4>📈 Детальная статистика по версиям</h4> <div><h5>🏠 Accounts - распределение по версиям:</h5> <div><!></div></div> <div><h5>💬 Rooms - распределение по версиям:</h5> <div><!></div></div> <div><h5>👥 Friends - распределение по версиям:</h5> <div><!></div></div>",1),Ts=x("<div><h4>📊 Статистика версий сущностей</h4> <h4>🔢 Количество сущностей</h4> <div><div><strong>🏠 Accounts:</strong> </div> <div><strong>💬 Rooms:</strong> </div> <div><strong>👥 Friends:</strong> </div></div> <h4>📝 Версии сущностей</h4> <div><div><strong>🏠 Accounts version:</strong> </div> <div><strong>💬 Rooms version:</strong> </div> <div><strong>👥 Friends version:</strong> </div></div> <h4>✅ Записи с версиями</h4> <div><div><strong>🏠 Accounts с версиями:</strong> </div> <div><strong>💬 Rooms с версиями:</strong> </div> <div><strong>👥 Friends с версиями:</strong> </div></div> <!></div>"),Rs=x("<div><h2>🔢 ВЕРСИИ СУЩНОСТЕЙ</h2> <div><div><div><span>🗂️</span> <span>Версии сущностей</span></div></div> <div>Отображает текущие версии сущностей для отладки и мониторинга миграций</div> <div><!></div> <!> <!></div></div>");function xs(s,t){St(t,!0);const[e,r]=ge(),o=()=>me(Oe,"$appAuthStore",e);let i=it(!1),a=it(!1),n=it(null),g=it(!1);async function f(){C(a,!0);try{const M=o(),V=Object.keys(M.byId);if(V.length===0){C(g,!0),C(i,!0);return}const O=V[0];C(g,!1),console.log("📊 Загрузка данных в back_store..."),await Ue.friends.getList(),await Ke.fetch({path:"GET_ROOMS"}),console.log("✅ Данные загружены в back_store");const E=Ss(),T=await ps(O),U=Object.keys(ut.accounts_by_id).length,W=Object.keys(ut.rooms_by_id).length,X=Object.keys(ut.friends_by_id).length,ot=E.accounts.filter(P=>P.version>0).reduce((P,H)=>P+H.count,0),F=E.rooms.filter(P=>P.version>0).reduce((P,H)=>P+H.count,0),j=E.friends.filter(P=>P.version>0).reduce((P,H)=>P+H.count,0);C(n,{accounts:T.accounts,rooms:T.rooms,friends:T.friends,accountsCount:U,roomsCount:W,friendsCount:X,accountsWithVersion:ot,roomsWithVersion:F,friendsWithVersion:j,versionsAnalysis:E},!0),C(i,!0)}catch(M){console.error("Ошибка получения версий сущностей:",M),alert("Не удалось загрузить версии сущностей")}finally{C(a,!1)}}var m=Rs(),y=l(m),p=v(y,2),w=l(p),b=l(w),R=l(b),L=v(R,2),et=v(w,2),G=v(et,2),A=l(G);tt(A,{variant:"outline",size:"sm",get disabled(){return _(a)},onclick:f,children:(M,V)=>{var O=z();D(()=>$(O,_(a)?"⏳ Проверка...":"🔍 Проверить версии")),S(M,O)},$$slots:{default:!0}});var k=v(G,2);{var N=M=>{var V=ys(),O=l(V),E=v(O,2),T=v(E,2),U=l(T);Ie(U,{get href(){return fe.AUTH},children:(W,X)=>{tt(W,{variant:"primary",size:"sm",children:(ot,F)=>{var j=z("🔑 Авторизоваться");S(ot,j)},$$slots:{default:!0}})},$$slots:{default:!0}}),D(()=>{d(V,1,u(c.authRequired)),d(O,1,u(c.authMessage)),d(E,1,u(c.authDescription)),d(T,1,u(c.authActions))}),S(M,V)};Z(k,M=>{_(i)&&_(g)&&M(N)})}var q=v(k,2);{var Y=M=>{var V=Ts(),O=v(l(V),4),E=l(O),T=v(l(E)),U=v(E,2),W=v(l(U)),X=v(U,2),ot=v(l(X)),F=v(O,4),j=l(F),P=v(l(j)),H=v(j,2),rt=v(l(H)),zt=v(H,2),Mt=v(l(zt)),gt=v(F,4),Rt=l(gt),Vt=v(l(Rt)),xt=v(Rt,2),Ot=v(l(xt)),Ut=v(xt,2),Gt=v(l(Ut)),Wt=v(gt,2);{var Ft=mt=>{var wt=As(),$t=v(kt(wt),2),Ht=v(l($t),2),he=l(Ht);{var oe=B=>{var Q=ws();D(()=>d(Q,1,u(c.emptyMessage))),S(B,Q)},pe=B=>{var Q=ce(),Kt=kt(Q);Bt(Kt,17,()=>_(n).versionsAnalysis.accounts,Lt,(Zt,ct)=>{var dt=$s(),Et=l(dt),Jt=l(Et),Dt=v(Et),Xt=v(Dt);{var te=lt=>{var At=z();D(ee=>$(At,`(${ee??""}%)`),[()=>(_(ct).count/_(n).accountsCount*100).toFixed(1)]),S(lt,At)};Z(Xt,lt=>{_(n).accountsCount>0&&lt(te)})}D(()=>{d(dt,1,u(c.versionItem)),$(Jt,`Версия ${_(ct).version??""}:`),$(Dt,` ${_(ct).count??""} записей `)}),S(Zt,dt)}),S(B,Q)};Z(he,B=>{_(n).versionsAnalysis.accounts.length===0?B(oe):B(pe,!1)})}var Yt=v($t,2),ne=v(l(Yt),2),ft=l(ne);{var bt=B=>{var Q=bs();D(()=>d(Q,1,u(c.emptyMessage))),S(B,Q)},Se=B=>{var Q=ce(),Kt=kt(Q);Bt(Kt,17,()=>_(n).versionsAnalysis.rooms,Lt,(Zt,ct)=>{var dt=Is(),Et=l(dt),Jt=l(Et),Dt=v(Et),Xt=v(Dt);{var te=lt=>{var At=z();D(ee=>$(At,`(${ee??""}%)`),[()=>(_(ct).count/_(n).roomsCount*100).toFixed(1)]),S(lt,At)};Z(Xt,lt=>{_(n).roomsCount>0&&lt(te)})}D(()=>{d(dt,1,u(c.versionItem)),$(Jt,`Версия ${_(ct).version??""}:`),$(Dt,` ${_(ct).count??""} записей `)}),S(Zt,dt)}),S(B,Q)};Z(ft,B=>{_(n).versionsAnalysis.rooms.length===0?B(bt):B(Se,!1)})}var ie=v(Yt,2),ae=v(l(ie),2),Qt=l(ae);{var ye=B=>{var Q=Es();D(()=>d(Q,1,u(c.emptyMessage))),S(B,Q)},qe=B=>{var Q=ce(),Kt=kt(Q);Bt(Kt,17,()=>_(n).versionsAnalysis.friends,Lt,(Zt,ct)=>{var dt=Ds(),Et=l(dt),Jt=l(Et),Dt=v(Et),Xt=v(Dt);{var te=lt=>{var At=z();D(ee=>$(At,`(${ee??""}%)`),[()=>(_(ct).count/_(n).friendsCount*100).toFixed(1)]),S(lt,At)};Z(Xt,lt=>{_(n).friendsCount>0&&lt(te)})}D(()=>{d(dt,1,u(c.versionItem)),$(Jt,`Версия ${_(ct).version??""}:`),$(Dt,` ${_(ct).count??""} записей `)}),S(Zt,dt)}),S(B,Q)};Z(Qt,B=>{_(n).versionsAnalysis.friends.length===0?B(ye):B(qe,!1)})}D(()=>{d($t,1,u(c.versionDetailSection)),d(Ht,1,u(c.versionStats)),d(Yt,1,u(c.versionDetailSection)),d(ne,1,u(c.versionStats)),d(ie,1,u(c.versionDetailSection)),d(ae,1,u(c.versionStats))}),S(mt,wt)};Z(Wt,mt=>{_(n).versionsAnalysis&&mt(Ft)})}D((mt,wt,$t)=>{d(V,1,u(c.versionResults)),d(O,1,u(c.statsGrid)),$(T,` ${_(n).accountsCount??""} записей`),$(W,` ${_(n).roomsCount??""} записей`),$(ot,` ${_(n).friendsCount??""} записей`),d(F,1,u(c.statsGrid)),$(P,` ${_(n).accounts??""}`),$(rt,` ${_(n).rooms??""}`),$(Mt,` ${_(n).friends??""}`),d(gt,1,u(c.statsGrid)),$(Vt,` ${_(n).accountsWithVersion??""} из ${_(n).accountsCount??""} (${mt??""}%)`),$(Ot,` ${_(n).roomsWithVersion??""} из ${_(n).roomsCount??""} (${wt??""}%)`),$(Gt,` ${_(n).friendsWithVersion??""} из ${_(n).friendsCount??""} (${$t??""}%)`)},[()=>_(n).accountsCount>0?(_(n).accountsWithVersion/_(n).accountsCount*100).toFixed(1):0,()=>_(n).roomsCount>0?(_(n).roomsWithVersion/_(n).roomsCount*100).toFixed(1):0,()=>_(n).friendsCount>0?(_(n).friendsWithVersion/_(n).friendsCount*100).toFixed(1):0]),S(M,V)};Z(q,M=>{_(i)&&_(n)&&!_(g)&&M(Y)})}D(()=>{d(m,1,u(c.settingSection)),d(y,1,u(c.sectionTitle)),d(p,1,u(c.settingItem)),d(w,1,u(c.settingHeader)),d(b,1,u(c.settingName)),d(R,1,u(c.settingIcon)),d(L,1,u(_(a)?"⏳ Проверка версий...":"🗂️ Версии сущностей")),d(et,1,u(c.settingDescription)),d(G,1,u(c.settingActions))}),S(s,m),yt(),r()}var Ms=x("<div><h2>🧭 Навигация</h2> <div><div><div><span>🏠</span> Главная страница</div></div> <div>Вернуться на главную страницу приложения.</div> <div><!></div></div></div>");function Vs(s,t){St(t,!1),_e();var e=Ms(),r=l(e),o=v(r,2),i=l(o),a=l(i),n=l(a),g=v(i,2),f=v(g,2),m=l(f);Ie(m,{get href(){return fe.HOME},children:(y,p)=>{tt(y,{variant:"outline",size:"sm",children:(w,b)=>{var R=z("Перейти на главную");S(w,R)},$$slots:{default:!0}})},$$slots:{default:!0}}),D(()=>{d(e,1,u(c.settingSection)),d(r,1,u(c.sectionTitle)),d(o,1,u(c.settingItem)),d(i,1,u(c.settingHeader)),d(a,1,u(c.settingName)),d(n,1,u(c.settingIcon)),d(g,1,u(c.settingDescription)),d(f,1,u(c.settingActions))}),S(s,e),yt()}var Os=x("<div><div><!> <!> <!> <!> <!> <!> <!> <!></div></div>");function Us(s,t){St(t,!0);let e="operational",r=it(0);Ze(()=>Ue.tabs.subscribeActiveTabsCount(R=>{C(r,R,!0)}));var o=Os(),i=l(o),a=l(i);Fr(a,{systemStatus:e});var n=v(a,2);Yr(n,{});var g=v(n,2);es(g,{});var f=v(g,2);ss(f,{get activeTabsCount(){return _(r)}});var m=v(f,2);cs(m,{});var y=v(m,2);ms(y,{});var p=v(y,2);xs(p,{});var w=v(p,2);Vs(w,{}),D(()=>{d(o,1,u(c.settingsContainer)),d(i,1,u(c.settingsGrid))}),S(s,o),yt()}function js(s){Je(s,{title:"СИСТЕМА_НАСТРОЕК",subtitle:"КОНФИГУРАЦИЯ_И_УПРАВЛЕНИЕ_СИСТЕМОЙ",pageName:"SettingsPage",children:(t,e)=>{Us(t,{})},$$slots:{default:!0}})}export{js as default};
