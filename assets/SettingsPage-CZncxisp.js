const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/-1_tmp_test-scmJ1SXh.js","assets/index-DbkGNoc4.js","assets/index-DL1-0jQI.css","assets/0_initialization-BUW443_s.js","assets/BasePage-DAHqOZho.js","assets/index-CeVjIrJo.js","assets/1_accounts_friends-309PGgXI.js","assets/decrypt_curve25519_from_pass-CtXuD7mt.js","assets/2_accounts_versioning-pQGf4DiT.js","assets/3_rooms_versioning-DPWh7D_j.js","assets/4_accounts_room_ids-DxG6pQn0.js","assets/5_entities_version_fields-tiX-6ZGq.js","assets/6_account_friends_ids-CCMZz9MH.js"])))=>i.map(i=>d[i]);
var Ge=Object.defineProperty;var We=(s,t,e)=>t in s?Ge(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e;var Te=(s,t,e)=>We(s,typeof t!="symbol"?t+"":t,e);import{M as E,J as h,N as xe,az as Ve,aA as H,K as Fe,aB as He,a as be,f as R,E as tt,y as v,v as D,d as S,n as l,U as u,G as d,z as w,p as St,a4 as me,q as qt,e as yt,W as fe,C as zt,aC as Ye,O as et,aD as Qe,t as Y,a0 as he,l as _,a5 as Ie,a2 as Oe,m as _e,a6 as Ke,R as pe,a3 as Je,j as C,aE as Re,s as it,k as Ct,L as De,i as Ue,Y as de,A as Xe,o as Ze}from"./index-DbkGNoc4.js";import{B as tr}from"./BasePage-DAHqOZho.js";import{s as Pe}from"./index-CeVjIrJo.js";const Gt={0:"0_initialization",1:"1_accounts_friends",2:"2_accounts_versioning",3:"3_rooms_versioning",4:"4_accounts_room_ids",5:"5_entities_version_fields",6:"6_account_friends_ids"},Me=0,ge={MAIN_LES_STORE_V1:"main_les_store_v1",DB_STATE_MANAGER_V1:"db_state_manager_v1",ENTITY_VERSIONS_V1:"entity_versions_v1"},Rt={IDLE:"idle",UPDATE_STARTED:"update_started",UPDATE_SUCCESS:"update_success",UPDATE_FAILED:"update_failed",CORRUPTED:"corrupted"},er=1;function Ae(){return new Promise((s,t)=>{const e=indexedDB.open(ge.DB_STATE_MANAGER_V1,er);e.onupgradeneeded=r=>{const o=e.result;o.objectStoreNames.contains("db_states")||(o.createObjectStore("db_states",{keyPath:"id"}),h("✅ Создано хранилище db_states"))},e.onsuccess=()=>{s(e.result)},e.onerror=()=>{E("❌ Ошибка открытия базы состояний:",e.error),t(e.error)}})}async function _t(s){try{const t=await Ae();return new Promise((e,r)=>{const o=t.transaction(["db_states"],"readonly"),a=o.objectStore("db_states").get(s);a.onsuccess=()=>{e(a.result||null)},a.onerror=()=>{r(a.error)},o.oncomplete=()=>{t.close()}})}catch(t){return E("❌ Ошибка получения состояния БД:",t),null}}async function oe(s){try{const t=await Ae();return new Promise((e,r)=>{const o=t.transaction(["db_states"],"readwrite"),i=o.objectStore("db_states");s.lastUpdated=Date.now();const a=i.put(s);a.onsuccess=()=>{h("✅ Состояние БД обновлено:",{dbName:s.dbName,version:s.version,status:s.status}),e()},a.onerror=()=>{E("❌ Ошибка обновления состояния БД:",a.error),r(a.error)},o.oncomplete=()=>{t.close()}})}catch(t){throw E("❌ Критическая ошибка обновления состояния БД:",t),t}}async function se(s,t,e,r,o){try{let i=await _t(s);i?(i.status=t,e!==void 0&&(i.version=e),r!==void 0&&(i.targetVersion=r),o!==void 0&&(i.errorMessage=o)):i={id:s,dbName:s,version:e||0,status:t,lastUpdated:Date.now()},await oe(i)}catch(i){throw E("❌ Ошибка установки статуса обновления:",i),i}}async function ke(s){const t=await _t(s);return(t==null?void 0:t.version)||0}async function Ce(s){const t=await _t(s);return t?t.status!==Rt.UPDATE_STARTED:!0}async function le(){try{const s=await Ae();return new Promise((t,e)=>{const r=s.transaction(["db_states"],"readonly"),i=r.objectStore("db_states").getAll();i.onsuccess=()=>{t(i.result)},i.onerror=()=>{e(i.error)},r.oncomplete=()=>{s.close()}})}catch(s){return E("❌ Ошибка получения всех состояний БД:",s),[]}}async function Ne(s,t,e){try{let r=await _t(s);r||(r={id:s,dbName:s,version:t,status:Rt.UPDATE_STARTED,lastUpdated:Date.now()}),r.migrationStartTime=Date.now(),r.targetVersion=e,r.executedMigrations=[],r.migratedTables=[],await oe(r),h("⏱️ Начат таймер миграции:",{dbName:s,fromVersion:t,toVersion:e})}catch(r){throw E("❌ Ошибка записи начала миграции:",r),r}}async function je(s){try{const t=await _t(s);if(!t||!t.migrationStartTime){E("❌ Не найдено начало миграции для расчета времени:",s);return}const e=Date.now();t.migrationEndTime=e,t.migrationDurationMs=e-t.migrationStartTime,await oe(t),h("✅ Завершен таймер миграции:",{dbName:s,durationMs:t.migrationDurationMs,durationSec:Math.round(t.migrationDurationMs/1e3)})}catch(t){throw E("❌ Ошибка записи окончания миграции:",t),t}}async function Nt(s){try{const t=await _t(s);if(!t||t.status!==Rt.UPDATE_STARTED)return!1;const e=10*60*1e3,r=Date.now(),o=t.migrationStartTime?r-t.migrationStartTime:r-t.lastUpdated,i=o>e;return i&&h("⚠️ Обнаружена зависшая миграция:",{dbName:s,ageMinutes:Math.round(o/6e4),lastUpdated:new Date(t.lastUpdated).toISOString()}),i}catch(t){return E("❌ Ошибка проверки зависших миграций:",t),!1}}async function jt(s){try{const t=await _t(s);if(!t){h("ℹ️ Состояние БД не найдено, сброс не требуется:",s);return}t.status=Rt.IDLE,t.errorMessage="Миграция была сброшена из-за зависания",delete t.migrationStartTime,delete t.migrationEndTime,delete t.migrationDurationMs,delete t.targetVersion,await oe(t),h("🔄 Сброшена зависшая миграция:",s)}catch(t){throw E("❌ Ошибка сброса зависшей миграции:",t),t}}async function Be(s){try{const t=await _t(s);return t?{totalDuration:t.migrationDurationMs||0,lastMigrationDate:t.migrationEndTime?new Date(t.migrationEndTime):null,executedMigrations:t.executedMigrations||[]}:{totalDuration:0,lastMigrationDate:null,executedMigrations:[]}}catch(t){return E("❌ Ошибка получения статистики миграций:",t),{totalDuration:0,lastMigrationDate:null,executedMigrations:[]}}}const rr=Object.freeze(Object.defineProperty({__proto__:null,canStartUpdate:Ce,detectStuckMigrations:Nt,endMigrationTimer:je,getAllDbStates:le,getDbState:_t,getMigrationStats:Be,getPreviousDbVersion:ke,resetStuckMigration:jt,setUpdateStatus:se,startMigrationTimer:Ne,updateDbState:oe},Symbol.toStringTag,{value:"Module"}));class sr{static async addVersionToAllRecords(t,e,r){return new Promise((o,i)=>{try{h(`🔄 Добавление версии ${r} ко всем записям в ${e}...`);const a=t.transaction([e],"readwrite"),n=a.objectStore(e);let g=0,f=0;const m=n.getAll();m.onsuccess=()=>{const y=m.result;if(g=y.length,y.length===0){h(`✅ Store ${e} пуст, версионирование не требуется`),o();return}let p=0;y.forEach($=>{if(!$.hasOwnProperty("version")){$.version=r,p++;const b=n.put($);b.onsuccess=()=>{f++,p--,p===0&&(h(`✅ Версионирование ${e} завершено:`,{processed:g,updated:f,version:r}),o())},b.onerror=()=>{E(`❌ Ошибка обновления записи в ${e}:`,b.error),i(b.error)}}}),p===0&&(h(`✅ Все записи в ${e} уже имеют версию`),o())},m.onerror=()=>{E(`❌ Ошибка получения записей из ${e}:`,m.error),i(m.error)},a.onerror=()=>{E(`❌ Ошибка транзакции версионирования ${e}:`,a.error),i(a.error)}}catch(a){E(`❌ Критическая ошибка версионирования ${e}:`,a),i(a)}})}static async validateRecordVersions(t,e){try{h(`🔍 Проверка версий записей, ожидаемая версия: ${e}`);const r=Array.from(t.objectStoreNames);let o=!0;const i=[];for(const a of r){const n=await this.validateStoreVersions(t,a,e);i.push(n),n.isValid||(o=!1)}return o?h("✅ Все записи имеют корректные версии"):h("⚠️ Обнаружены записи с некорректными версиями:",i),o}catch(r){return E("❌ Ошибка проверки версий записей:",r),!1}}static async validateStoreVersions(t,e,r){return new Promise((o,i)=>{try{const g=t.transaction([e],"readonly").objectStore(e).getAll();g.onsuccess=()=>{const f=g.result;let m=0,y=0;f.forEach($=>{$.hasOwnProperty("version")?$.version<r&&y++:m++});const p=m===0&&y===0;o({storeName:e,totalRecords:f.length,recordsWithoutVersion:m,recordsWithOldVersion:y,isValid:p})},g.onerror=()=>{i(g.error)}}catch(a){i(a)}})}static async updateAllStoresVersions(t,e,r){try{const o=r||Array.from(t.objectStoreNames);h(`🔄 Массовое обновление версий до ${e} в stores:`,o);for(const i of o)await this.addVersionToAllRecords(t,i,e);h(`✅ Массовое обновление версий завершено для ${o.length} stores`)}catch(o){throw E("❌ Ошибка массового обновления версий:",o),o}}static async getVersionStats(t){try{const e=Array.from(t.objectStoreNames),r=[];let o=0,i=0;for(const a of e){const n=await this.getStoreVersionStats(t,a);r.push(n),o+=n.totalRecords,i+=n.recordsWithoutVersion}return{stores:r,summary:{totalStores:e.length,totalRecords:o,totalWithoutVersion:i}}}catch(e){return E("❌ Ошибка получения статистики версий:",e),{stores:[],summary:{totalStores:0,totalRecords:0,totalWithoutVersion:0}}}}static async getStoreVersionStats(t,e){return new Promise((r,o)=>{try{const n=t.transaction([e],"readonly").objectStore(e).getAll();n.onsuccess=()=>{const g=n.result,f={};let m=0;g.forEach(y=>{if(!y.hasOwnProperty("version"))m++;else{const p=String(y.version);f[p]=(f[p]||0)+1}}),r({name:e,totalRecords:g.length,versionsDistribution:f,recordsWithoutVersion:m})},n.onerror=()=>{o(n.error)}}catch(i){o(i)}})}static async removeVersionFromAllRecords(t,e){return new Promise((r,o)=>{try{h(`🔄 Удаление поля version из всех записей в ${e}...`);const a=t.transaction([e],"readwrite").objectStore(e),n=a.getAll();n.onsuccess=()=>{const g=n.result;let f=0,m=0;if(g.length===0){h(`✅ Store ${e} пуст`),r();return}g.forEach(y=>{if(y.hasOwnProperty("version")){delete y.version;const p=a.put(y);p.onsuccess=()=>{m++,f++,f===g.length&&(h(`✅ Удаление версий из ${e} завершено:`,{updated:m}),r())},p.onerror=()=>{o(p.error)}}else f++,f===g.length&&r()})},n.onerror=()=>{o(n.error)}}catch(i){o(i)}})}}const Le=Object.freeze(["accounts","friends","rooms"]),or=Object.freeze(Object.defineProperty({__proto__:null,REQUIRED_STORES:Le},Symbol.toStringTag,{value:"Module"}));async function nr(){try{xe("🔄 Загружаем legacy реестр миграций...");const s=await H(()=>import("./LEGASY_MIGRATIONS_REGISTRY-D-EDVjfO.js"),[]);if(!s.LEGACY_MIGRATIONS_REGISTRY)throw new Error("Legacy реестр не содержит LEGACY_MIGRATIONS_REGISTRY");return h("✅ Legacy реестр миграций загружен успешно"),s.LEGACY_MIGRATIONS_REGISTRY}catch(s){throw E("❌ Ошибка загрузки legacy реестра миграций:",s),s}}async function ir(s,t){if(!(s<Me))return h("🚀 Используем только основной реестр миграций (legacy не требуется)"),{...Gt};h("📦 Требуются legacy миграции, загружаем объединенный реестр:",{oldVersion:s,newVersion:t,minCurrentVersion:Me});const r=await nr(),o={...r,...Gt};return h("✅ Объединенный реестр создан:",{legacyCount:Object.keys(r).length,currentCount:Object.keys(Gt).length,totalCount:Object.keys(o).length}),o}async function ve(s){return new Promise((t,e)=>{try{const r=indexedDB.open(s);r.onsuccess=()=>{const o=r.result.version;r.result.close(),t(o)},r.onerror=()=>{e(r.error)},r.onupgradeneeded=()=>{r.result.close(),t(0)}}catch(r){e(r)}})}async function ar(s,t){const e=t[s];if(!e)throw new Error(`Миграция для версии ${s} не найдена в объединенном реестре`);try{xe(`🔄 Загружаем модуль миграции: ${e}`);const r=await Ve(Object.assign({"./combined/-1_tmp_test.ts":()=>H(()=>import("./-1_tmp_test-scmJ1SXh.js"),__vite__mapDeps([0,1,2])),"./combined/0_initialization.ts":()=>H(()=>import("./0_initialization-BUW443_s.js"),__vite__mapDeps([3,1,2,4,5])),"./combined/1_accounts_friends.ts":()=>H(()=>import("./1_accounts_friends-309PGgXI.js"),__vite__mapDeps([6,1,2,7])),"./combined/2_accounts_versioning.ts":()=>H(()=>import("./2_accounts_versioning-pQGf4DiT.js"),__vite__mapDeps([8,1,2,7])),"./combined/3_rooms_versioning.ts":()=>H(()=>import("./3_rooms_versioning-DPWh7D_j.js"),__vite__mapDeps([9,1,2,7])),"./combined/4_accounts_room_ids.ts":()=>H(()=>import("./4_accounts_room_ids-DxG6pQn0.js"),__vite__mapDeps([10,1,2,7])),"./combined/5_entities_version_fields.ts":()=>H(()=>import("./5_entities_version_fields-tiX-6ZGq.js"),__vite__mapDeps([11,1,2,7])),"./combined/6_account_friends_ids.ts":()=>H(()=>import("./6_account_friends_ids-CCMZz9MH.js"),__vite__mapDeps([12,1,2,4,5]))}),`./combined/${e}.ts`,3);if(!r.migrationInfo||!r.migrationScheme||!r.migrationData)throw new Error(`Модуль миграции ${e} не содержит необходимые экспорты (migrationInfo, migrationScheme, migrationData)`);return h(`✅ Модуль миграции ${e} загружен успешно`),r}catch(r){throw E(`❌ Ошибка загрузки модуля миграции ${e}:`,r),r}}async function cr(s,t){const e=new Map;h("🔄 Предварительная загрузка модулей миграций:",{oldVersion:s,newVersion:t});try{const r=await ir(s,t);for(let o=s;o<t;o++){const i=await ar(o,r);e.set(o,i)}return h(`✅ Предварительно загружено ${e.size} модулей миграций`),e}catch(r){throw E("❌ Ошибка предварительной загрузки миграций:",r),r}}function ue(){const s=Object.keys(Gt).map(Number);return s.length>0?Math.max(...s)+1:1}const Et=Object.freeze({friends_ids:"friends_ids",friends:"friends",accounts:"accounts",rooms:"rooms"});function dr({db:s,realOldVersion:t,newVersion:e}){h("🚨 Экстренное выполнение встроенных миграций схемы");for(let r=0;r<e;r++)r===0&&t<=0&&(h("📦 Экстренная миграция схемы 0: Создание базовых хранилищ"),s.objectStoreNames.contains(Et.accounts)||(s.createObjectStore(Et.accounts,{keyPath:"id"}),h("✅ Хранилище accounts создано")),s.objectStoreNames.contains(Et.friends)||(s.createObjectStore(Et.friends,{keyPath:"id"}),h("✅ Хранилище friends создано")),s.objectStoreNames.contains(Et.rooms)||(s.createObjectStore(Et.rooms,{keyPath:"id"}),h("✅ Хранилище rooms создано")),h("✅ Экстренная миграция схемы 0 завершена")),s.objectStoreNames.contains(Et.friends_ids)||(s.createObjectStore(Et.friends_ids,{keyPath:"id"}),Fe(`✅ Хранилище ${Et.friends_ids} создано`)),r===1&&t<=1&&(h("📦 Экстренная миграция схемы 1: Добавление индексов"),h("✅ Экстренная миграция схемы 1 завершена"));h("🔍 Дополнительная проверка наличия критических хранилищ..."),s.objectStoreNames.contains("accounts")||(s.createObjectStore("accounts",{keyPath:"id"}),h("✅ Дополнительно создано хранилище accounts")),s.objectStoreNames.contains("friends")||(s.createObjectStore("friends",{keyPath:"id"}),h("✅ Дополнительно создано хранилище friends")),s.objectStoreNames.contains("rooms")||(s.createObjectStore("rooms",{keyPath:"id"}),h("✅ Дополнительно создано хранилище rooms"))}class lr{static async checkOnAppStart(){try{h("🔍 Проверка состояния баз данных при старте...");const t=await le();for(const e of t)await Nt(e.dbName)?(h("⚠️ Обнаружена зависшая миграция, попытка восстановления:",e.dbName),await this.recoverFromIncompleteUpdate(e.dbName)):await this.validateVersionConsistency(e.dbName);h("✅ Проверка состояния баз данных завершена")}catch(t){E("❌ Ошибка при проверке на старте приложения:",t)}}static async recoverFromIncompleteUpdate(t){try{h("🔄 Начало восстановления после некорректного завершения:",t);const e=await _t(t);if(!e){h("ℹ️ Состояние БД не найдено, восстановление не требуется:",t);return}if(!await Nt(t)){h("ℹ️ Миграция не зависла, восстановление не требуется:",t);return}const o=await ve(t);if(h("📊 Сравнение версий для восстановления:",{dbName:t,stateVersion:e.version,realDbVersion:o,targetVersion:e.targetVersion}),e.targetVersion&&o>=e.targetVersion){h("✅ Миграция была завершена успешно, обновляем статус:",t),await jt(t);return}await jt(t),h("🔄 Восстановление завершено, миграция сброшена:",t)}catch(e){E("❌ Ошибка при восстановлении после некорректного завершения:",e);try{await jt(t),h("🔄 Принудительный сброс статуса выполнен:",t)}catch(r){E("❌ Критическая ошибка при принудительном сбросе:",r)}}}static async validateVersionConsistency(t){try{const e=await _t(t);if(!e)return!0;const r=await ve(t);return e.version!==r?(h("⚠️ Обнаружено рассогласование версий:",{dbName:t,stateVersion:e.version,realDbVersion:r}),r>e.version&&(e.version=r,await H(async()=>{const{updateDbState:o}=await Promise.resolve().then(()=>rr);return{updateDbState:o}},void 0).then(({updateDbState:o})=>o(e)),h("✅ Версия в состоянии обновлена до реальной:",r)),!1):!0}catch(e){return E("❌ Ошибка проверки согласованности версий:",e),!1}}static async validateDataIntegrity(t){try{h("🔍 Проверка целостности данных БД:",t.name);const{REQUIRED_STORES:e}=await H(async()=>{const{REQUIRED_STORES:i}=await Promise.resolve().then(()=>or);return{REQUIRED_STORES:i}},void 0),r=e.filter(i=>!t.objectStoreNames.contains(i));if(r.length>0)return E("❌ Отсутствуют обязательные object stores:",r),!1;let o=!0;for(const i of e)try{const g=t.transaction([i],"readonly").objectStore(i).count();await new Promise((f,m)=>{g.onsuccess=()=>f(g.result),g.onerror=()=>m(g.error)})}catch(a){E(`❌ Ошибка доступа к store ${i}:`,a),o=!1}return o?h("✅ Проверка целостности данных пройдена:",t.name):E("❌ Обнаружены проблемы целостности данных:",t.name),o}catch(e){return E("❌ Ошибка при проверке целостности данных:",e),!1}}static async forceResetAllStuckMigrations(){try{h("🚨 Принудительный сброс всех зависших миграций...");const t=await le();let e=0;for(const r of t)await Nt(r.dbName)&&(await jt(r.dbName),e++);h(`✅ Принудительно сброшено миграций: ${e}`)}catch(t){E("❌ Ошибка при принудительном сбросе всех миграций:",t)}}static async getDiagnosticInfo(){try{const t=await le(),e=[];let r=0,o=0;for(const i of t){const a=await Nt(i.dbName),n=await ve(i.dbName),g=i.version===n;a&&r++,g||o++,e.push({name:i.dbName,stateVersion:i.version,realVersion:n,isStuck:a,versionConsistent:g})}return{databases:e,summary:{total:e.length,stuck:r,inconsistent:o}}}catch(t){return E("❌ Ошибка получения диагностической информации:",t),{databases:[],summary:{total:0,stuck:0,inconsistent:0}}}}}const at={DB_NAME:"DB_STATE_MANAGER_V2",STORE_NAME:"user_migration_states",VERSION:1};class ot{static async getDatabase(){return this.dbPromise||(this.dbPromise=new Promise((t,e)=>{const r=indexedDB.open(at.DB_NAME,at.VERSION);r.onupgradeneeded=o=>{const i=o.target.result;if(!i.objectStoreNames.contains(at.STORE_NAME)){const a=i.createObjectStore(at.STORE_NAME,{keyPath:"userId"});a.createIndex("userId","userId",{unique:!0}),a.createIndex("currentVersion","currentVersion",{unique:!1})}},r.onsuccess=()=>t(r.result),r.onerror=()=>e(r.error)})),this.dbPromise}static async getUserState(t){const e=await this.getDatabase();return new Promise((r,o)=>{const n=e.transaction([at.STORE_NAME],"readonly").objectStore(at.STORE_NAME).get(t);n.onsuccess=()=>r(n.result||null),n.onerror=()=>o(n.error)})}static async updateUserState(t,e){const r=await this.getDatabase(),i={...await this.getUserState(t)||{userId:t,currentVersion:0,completedMigrations:[],migrationHistory:[]},...e};return new Promise((a,n)=>{const m=r.transaction([at.STORE_NAME],"readwrite").objectStore(at.STORE_NAME).put(i);m.onsuccess=()=>a(),m.onerror=()=>n(m.error)})}static async getUsersCompletedVersion(t){const e=await this.getDatabase();return new Promise((r,o)=>{const n=e.transaction([at.STORE_NAME],"readonly").objectStore(at.STORE_NAME).getAll();n.onsuccess=()=>{const f=n.result.filter(m=>m.completedMigrations.includes(t)).map(m=>m.userId);r(f)},n.onerror=()=>o(n.error)})}static async getAllSystemUserIds(){const t=await this.getDatabase();return new Promise((e,r)=>{const a=t.transaction([at.STORE_NAME],"readonly").objectStore(at.STORE_NAME).getAllKeys();a.onsuccess=()=>e(a.result),a.onerror=()=>r(a.error)})}}Te(ot,"dbPromise",null);class vr{static async loadMigrationModule(t){const e=Gt[t];if(!e)throw new Error(`Миграция для версии ${t} не найдена в реестре`);try{console.log(`🔄 Загружаем модуль миграции: ${e}`);const r=await Ve(Object.assign({"./migrations/combined/-1_tmp_test.ts":()=>H(()=>import("./-1_tmp_test-scmJ1SXh.js"),__vite__mapDeps([0,1,2])),"./migrations/combined/0_initialization.ts":()=>H(()=>import("./0_initialization-BUW443_s.js"),__vite__mapDeps([3,1,2,4,5])),"./migrations/combined/1_accounts_friends.ts":()=>H(()=>import("./1_accounts_friends-309PGgXI.js"),__vite__mapDeps([6,1,2,7])),"./migrations/combined/2_accounts_versioning.ts":()=>H(()=>import("./2_accounts_versioning-pQGf4DiT.js"),__vite__mapDeps([8,1,2,7])),"./migrations/combined/3_rooms_versioning.ts":()=>H(()=>import("./3_rooms_versioning-DPWh7D_j.js"),__vite__mapDeps([9,1,2,7])),"./migrations/combined/4_accounts_room_ids.ts":()=>H(()=>import("./4_accounts_room_ids-DxG6pQn0.js"),__vite__mapDeps([10,1,2,7])),"./migrations/combined/5_entities_version_fields.ts":()=>H(()=>import("./5_entities_version_fields-tiX-6ZGq.js"),__vite__mapDeps([11,1,2,7])),"./migrations/combined/6_account_friends_ids.ts":()=>H(()=>import("./6_account_friends_ids-CCMZz9MH.js"),__vite__mapDeps([12,1,2,4,5]))}),`./migrations/combined/${e}.ts`,4);if(!r.migrationInfo)throw new Error(`Модуль миграции ${e} не содержит migrationInfo`);return console.log(`✅ Модуль миграции ${e} загружен успешно`),r}catch(r){throw console.error(`❌ Ошибка загрузки модуля миграции ${e}:`,r),r}}static async getAllMigrations(){const t=[];for(const e of Object.keys(Gt).map(Number))try{const r=await this.loadMigrationModule(e);t.push({...r,version:e+1})}catch(r){console.error(`Не удалось загрузить миграцию версии ${e}:`,r)}return t.sort((e,r)=>e.version-r.version)}static async checkUserMigrations(t){var a;const e=await ot.getUserState(t),r=(e==null?void 0:e.currentVersion)||0,o=ue(),i=[];for(let n=r+1;n<=o;n++)(a=e==null?void 0:e.completedMigrations)!=null&&a.includes(n)||i.push(n);return i}static async migrateUser(t){const{currentUser:e,db:r,oldVersion:o,newVersion:i}=t,a=e.id;console.log(`🔄 Начинаем миграцию пользователя ${a} с версии ${o} до ${i}`),await ot.updateUserState(a,{migrationStartTime:Date.now(),currentVersion:o});try{const n=await this.checkUserMigrations(a);for(const g of n){if(g>i)break;await this.executeUserMigration(t,g);const f=await ot.getUserState(a)||{userId:a,currentVersion:o,completedMigrations:[],migrationHistory:[]};await ot.updateUserState(a,{currentVersion:g,completedMigrations:[...f.completedMigrations,g]})}await ot.updateUserState(a,{migrationEndTime:Date.now(),currentVersion:i}),console.log(`✅ Миграция пользователя ${a} завершена успешно`)}catch(n){throw console.error(`❌ Ошибка миграции пользователя ${a}:`,n),await ot.updateUserState(a,{migrationEndTime:Date.now(),errorMessage:n instanceof Error?n.message:"Unknown error"}),n}}static async executeUserMigration(t,e){var m;const{currentUser:r}=t;console.log(`📦 Выполняем миграцию версии ${e} для пользователя ${r.id}`);const o=Date.now(),i=e-1,a=await this.loadMigrationModule(i);if(!a)throw new Error(`Миграция версии ${e} не найдена`);a.migrationData&&await a.migrationData(t);const n=Date.now(),g=n-o;console.log(`✅ Миграция версии ${e} для пользователя ${r.id} завершена за ${g}мс`);const f=await ot.getUserState(r.id);if(f){const y={version:e,fileName:((m=a.migrationInfo)==null?void 0:m.fileName)||`migration_${e}`,schemaDuration:0,dataDuration:g,startTime:o,endTime:n};await ot.updateUserState(r.id,{migrationHistory:[...f.migrationHistory,y]})}}static async allUsersCompletedVersion(t,e){const r=await this.scanAllUserIds(t),o=new Set(await ot.getUsersCompletedVersion(e));return r.size===o.size&&[...r].every(i=>o.has(i))}static async scanAllUserIds(t){return new Promise((e,r)=>{const a=t.transaction(["accounts"],"readonly").objectStore("accounts").getAll();a.onsuccess=()=>{const n=a.result,g=new Set(n.map(f=>f.id));console.log(`📊 Найдено ${g.size} пользователей в системе:`,[...g]),e(g)},a.onerror=()=>{console.error("❌ Ошибка сканирования accounts для получения userIds:",a.error),r(a.error)}})}static async getUserMigrationStats(t){return await ot.getUserState(t)}}class Bt{static async scanAllUserIds(t){return new Promise((e,r)=>{const a=t.transaction(["accounts"],"readonly").objectStore("accounts").getAll();a.onsuccess=()=>{const n=a.result,g=new Set(n.map(f=>f.id));e(g)},a.onerror=()=>r(a.error)})}static async allUsersReady(t,e){try{const r=await this.scanAllUserIds(t),o=new Set(await ot.getUsersCompletedVersion(e)),i=r.size===o.size&&[...r].every(a=>o.has(a));return console.log(`🔍 Проверка готовности всех пользователей для версии ${e}:`),console.log(`   - Всего пользователей в системе: ${r.size}`),console.log(`   - Завершивших миграцию: ${o.size}`),console.log(`   - Результат: ${i?"✅ Все готовы":"⏳ Ожидание"}`),i}catch(r){return console.error("❌ Ошибка при проверке готовности пользователей:",r),!1}}static async getPendingUsers(t,e){const r=await this.scanAllUserIds(t),o=new Set(await ot.getUsersCompletedVersion(e));return[...r].filter(i=>!o.has(i))}static async getUserReadinessStats(t,e){try{const r=await this.scanAllUserIds(t),o=new Set(await ot.getUsersCompletedVersion(e)),i=[...r].filter(m=>!o.has(m)),a=r.size,n=o.size,g=a>0?Math.round(n/a*100):100,f=a===n&&a>0;return{totalUsers:a,completedUsers:n,pendingUsers:i,completionPercentage:g,isReady:f}}catch(r){return console.error("❌ Ошибка получения статистики готовности пользователей:",r),{totalUsers:0,completedUsers:0,pendingUsers:[],completionPercentage:0,isReady:!1}}}}let rt=null,vt=null,Z=null,ht=!1,pt=0;const ur=5*60*1e3;class It{static async getConnection(){if(await It.checkAndRecoverFromFailures(),rt&&!ht)return rt;if(vt)return vt;vt=It.createNewConnection();try{const t=await vt;return rt=t,It.setupConnectionHandlers(t),t}catch(t){throw vt=null,t}}static async checkAndRecoverFromFailures(){try{const t=ge.MAIN_LES_STORE_V1;await Nt(t)&&(h("🔧 Обнаружена зависшая миграция, выполняем восстановление..."),await It.resetStuckMigration(t)),await lr.checkOnAppStart()}catch(t){E("❌ Ошибка при проверке состояния БД:",t)}}static async resetStuckMigration(t){try{await jt(t),rt&&(rt.close(),rt=null),vt=null,h("✅ Заблокированная миграция сброшена")}catch(e){throw E("❌ Ошибка сброса заблокированной миграции:",e),e}}static async createNewConnection(){return new Promise(async(t,e)=>{try{const r=ge.MAIN_LES_STORE_V1;if(!await Ce(r))throw new Error("База данных уже обновляется. Дождитесь завершения текущего обновления.");const i=await ve(r),a=await ke(r),n=ue();h("📊 Информация о версиях БД:",{currentVersion:i,previousStateVersion:a,targetVersion:n,needsMigration:i<n});const g=Math.max(i,a);g<n&&(await se(r,Rt.UPDATE_STARTED,g,n),await Ne(r,g,n));let f=new Map;if(g<n){const p=Date.now();h("🔄 Предварительная загрузка модулей миграций c версии:",g),f=await cr(g,n);const $=Date.now()-p;h(`✅ Предзагрузка завершена за ${$}мс`)}let m=indexedDB.open(r,n),y=i;m.onupgradeneeded=function(p){const $=m.result,b=p.oldVersion??0,M=p.newVersion??n;if(y=b,h("🔄 IndexDB onupgradeneeded:",{oldVersion:b,newVersion:M,existingStores:Array.from($.objectStoreNames),detectedCurrentVersion:i,usingRealOldVersion:b}),b!==i&&(h("⚠️ Обнаружена рассинхронизация версий, сбрасываем предзагруженные миграции:",{detectedVersion:i,realVersion:b}),f=new Map),b<M)try{f.size===0?dr({db:$,realOldVersion:b,newVersion:M}):It.runSchemaMigrationsWithTiming($,b,M,f,r)}catch(B){throw E("Критическая ошибка во время миграции схемы IndexedDB:",B),B}},m.onerror=async function(){var p;E("IndexDB openRequest error:",m.error),await se(r,Rt.UPDATE_FAILED,void 0,void 0,(p=m.error)==null?void 0:p.message),e(m.error)},m.onsuccess=async function(){let p=m.result;h("✅ IndexDB соединение установлено, версия БД:",p.version);try{const $=Le.filter(b=>!p.objectStoreNames.contains(b));if($.length>0){E("🚨 Обнаружены отсутствующие object stores:",$),h("🔄 Принудительное пересоздание базы данных..."),p.close();const b=indexedDB.deleteDatabase(r);b.onsuccess=()=>{h("✅ Поврежденная база удалена"),setTimeout(()=>{h("🔄 Перезапуск создания базы..."),It.createNewConnection().then(t).catch(e)},100)},b.onerror=()=>{E("❌ Ошибка удаления поврежденной базы:",b.error),e(b.error)};return}h("✅ Миграции схемы выполнены, БД готова к использованию"),h("ℹ️ Миграции данных будут выполнены при авторизации пользователей"),await se(r,Rt.UPDATE_SUCCESS,p.version),await je(r),t(p)}catch($){E("Ошибка при выполнении миграций данных:",$);const b=$ instanceof Error?$.message:String($);await se(r,Rt.UPDATE_FAILED,void 0,void 0,b),p.close(),e($)}},m.onblocked=function(){He("Database connection blocked"),e(new Error("Database connection blocked"))}}catch(r){E("Ошибка при инициализации IndexDB:",r),e(r)}})}static runSchemaMigrationsWithTiming(t,e,r,o,i){var a,n;h("🚀 Начинаем выполнение миграций схемы IndexedDB:",{oldVersion:e,newVersion:r,existingStores:Array.from(t.objectStoreNames)});try{for(let g=e;g<r;g++){const f=g+1;h(`📋 Выполняем миграцию схемы с версии ${g} до ${f}`);const m=o.get(g);if(!m)throw new Error(`Предварительно загруженная миграция для версии ${g} не найдена`);const y=Date.now();m.migrationScheme(t);const p=Date.now()-y;h(`✅ Миграция схемы ${m.migrationInfo.fileName} выполнена за ${p}мс`);try{m&&typeof m=="object"&&Object.defineProperty(m,"_schemaDuration",{value:p,writable:!0,configurable:!0})}catch($){const b=$ instanceof Error?$.message:String($);console.warn(`Cannot set _schemaDuration on migration module ${(a=m.migrationInfo)==null?void 0:a.fileName}:`,b),h(`⚠️ Время выполнения схемы ${(n=m.migrationInfo)==null?void 0:n.fileName}: ${p}мс (сохранено только в логах)`)}}h("🏁 Все миграции схемы IndexedDB выполнены успешно. Финальные хранилища:",Array.from(t.objectStoreNames))}catch(g){throw E("❌ Критическая ошибка во время выполнения миграций схемы IndexedDB:",g),g}}static setupConnectionHandlers(t){t.onversionchange=function(){h("🔄 Принудительное закрытие соединения IndexDB (version change)"),Z&&(clearTimeout(Z),Z=null),ht=!0,pt=0,t.close(),rt=null,vt=null,ht=!1},t.onclose=function(){h("🔒 Соединение IndexDB закрыто"),Z&&(clearTimeout(Z),Z=null),pt=0,rt=null,vt=null,ht=!1}}static incrementActiveRequests(){pt++,Z&&(clearTimeout(Z),Z=null)}static decrementActiveRequests(){pt=Math.max(0,pt-1),pt===0&&It.startCloseTimer()}static startCloseTimer(){Z&&clearTimeout(Z),Z=setTimeout(()=>{rt&&!ht&&pt===0&&(h(`🔒 Закрытие соединения IndexDB по таймауту (5 минут после завершения всех запросов). Активных запросов: ${pt}`),ht=!0,rt.close(),rt=null,vt=null,Z=null,ht=!1)},ur)}static forceCloseConnection(){rt&&(h("🔒 Принудительное закрытие соединения IndexDB"),Z&&(clearTimeout(Z),Z=null),ht=!0,pt=0,rt.close(),rt=null,vt=null,ht=!1)}static getConnectionInfo(){return{hasConnection:!!rt,isClosing:ht,activeRequestsCount:pt,hasCloseTimer:!!Z,connectionPromiseActive:!!vt}}static async checkMigrationReadiness(){try{const t=await this.getConnection(),e=ue(),r=await Bt.allUsersReady(t,e),o=await Bt.getPendingUsers(t,e);return{isReady:r,pendingUsers:o,systemStatus:r?"ready":o.length>0?"partial":"blocked"}}catch(t){return console.error("❌ Ошибка проверки готовности миграций:",t),{isReady:!1,pendingUsers:[],systemStatus:"blocked"}}}static async getUsersMigrationSummary(){try{const t=await this.getConnection(),e=ue(),r=await Bt.getUserReadinessStats(t,e),o=await Bt.scanAllUserIds(t),i=[];for(const a of o){const n=await vr.getUserMigrationStats(a);i.push({userId:a,currentVersion:(n==null?void 0:n.currentVersion)||0,completedMigrations:(n==null?void 0:n.completedMigrations)||[],isReady:(n==null?void 0:n.currentVersion)===e})}return{totalUsers:r.totalUsers,completedUsers:r.completedUsers,pendingUsers:r.pendingUsers,completionPercentage:r.completionPercentage,userDetails:i}}catch(t){return console.error("❌ Ошибка получения статистики пользователей:",t),{totalUsers:0,completedUsers:0,pendingUsers:[],completionPercentage:0,userDetails:[]}}}}const ut={accounts_by_id:{},friends_by_id:{},friend_ids:{},rooms_by_id:{}};var _r=R('<span class="status-text svelte-4jntj4"> </span>'),gr=R('<div><span class="status-dot svelte-4jntj4"></span> <!></div>');function mr(s,t){let e=be(t,"size",3,"md"),r=be(t,"animated",3,!0),o=be(t,"className",3,"");const i=()=>{let f=["status-indicator",`status-${t.status}`,`size-${e()}`];return r()&&f.push("animated"),o()&&f.push(o()),f.join(" ")};var a=gr(),n=v(l(a),2);{var g=f=>{var m=_r(),y=l(m);D(()=>w(y,t.text)),S(f,m)};tt(n,f=>{t.text&&f(g)})}D(f=>d(a,1,f,"svelte-4jntj4"),[()=>u(i())]),S(s,a)}var fr=R('<div><div class="theme-preview svelte-gyqbuc"><span class="theme-icon svelte-gyqbuc"> </span> <div class="theme-info svelte-gyqbuc"><div class="theme-name svelte-gyqbuc"> </div> <div class="theme-description svelte-gyqbuc"> </div></div></div> <div class="theme-actions svelte-gyqbuc"><!></div></div>'),hr=R('<div class="theme-selector svelte-gyqbuc"><div class="themes-grid svelte-gyqbuc"></div></div>');function pr(s,t){St(t,!1);const[e,r]=fe(),o=()=>he(Oe,"$theme",e),i={cyberpunk:"🌆",watchdogs:"🔍",pixel:"🎮",terminal:"💻",arabic:"🕌"},a={cyberpunk:"Темная киберпанк тема с неоновыми акцентами",watchdogs:"Стиль в духе хакерских фильмов",pixel:"Ретро пиксельная графика",terminal:"Классический терминальный интерфейс",arabic:"Традиционный арабский стиль"};me();var n=hr(),g=l(n);qt(g,5,()=>Ye,zt,(f,m)=>{var y=fr();let p;var $=l(y),b=l($),M=l(b),B=v(b,2),K=l(B),z=l(K),T=v(K,2),k=l(T),N=v($,2),G=l(N);{let L=Ie(()=>o()===_(m)?"primary":"outline"),x=Ie(()=>o()===_(m));et(G,{get variant(){return _(L)},size:"sm",onclick:()=>Qe(_(m)),get disabled(){return _(x)},children:(V,O)=>{var I=Y();D(()=>w(I,o()===_(m)?"✓ Активна":"Применить")),S(V,I)},$$slots:{default:!0}})}D((L,x)=>{p=d(y,1,"theme-option svelte-gyqbuc",null,p,L),w(M,i[_(m)]||"🎨"),w(z,x),w(k,a[_(m)])},[()=>({active:o()===_(m)}),()=>_(m).toUpperCase()]),S(f,y)}),S(s,n),yt(),r()}const Sr="_settingsContainer_1p21f_1",yr="_settingsGrid_1p21f_10",$r="_settingSection_1p21f_16",wr="_sectionTitle_1p21f_22",br="_settingItem_1p21f_33",Er="_settingHeader_1p21f_50",Ir="_settingName_1p21f_57",Dr="_settingIcon_1p21f_66",Ar="_settingDescription_1p21f_70",Tr="_settingActions_1p21f_77",Rr="_statusIndicator_1p21f_99",Mr="_statusActive_1p21f_110",xr="_themeSelector_1p21f_122",Vr="_clearOptions_1p21f_126",Or="_versionResults_1p21f_180",Ur="_userList_1p21f_187",Pr="_userItem_1p21f_193",kr="_statsGrid_1p21f_199",Cr="_errorMessage_1p21f_206",Nr="_authRequired_1p21f_214",jr="_authMessage_1p21f_222",Br="_authDescription_1p21f_228",Lr="_authActions_1p21f_233",qr="_emptyMessage_1p21f_238",zr="_migrationList_1p21f_245",Gr="_migrationItem_1p21f_254",Wr="_migrationHeader_1p21f_267",Fr="_migrationDetails_1p21f_274",c={settingsContainer:Sr,settingsGrid:yr,settingSection:$r,sectionTitle:wr,settingItem:br,settingHeader:Er,settingName:Ir,settingIcon:Dr,settingDescription:Ar,settingActions:Tr,statusIndicator:Rr,statusActive:Mr,themeSelector:xr,clearOptions:Vr,versionResults:Or,userList:Ur,userItem:Pr,statsGrid:kr,errorMessage:Cr,authRequired:Nr,authMessage:jr,authDescription:Br,authActions:Lr,emptyMessage:qr,migrationList:zr,migrationItem:Gr,migrationHeader:Wr,migrationDetails:Fr};var Hr=R("<div><h2>🔧 Системные настройки</h2> <div><div><div><span>🎨</span> Темы интерфейса</div> <!></div> <div>Выберите тему интерфейса для персонализации внешнего вида приложения. Изменения применяются мгновенно.</div> <div><!></div></div> <div><div><div><span>⚡</span> Статус системы</div> <span> </span></div> <div>Система работает в штатном режиме. Все модули функционируют корректно.</div> <div><!></div></div></div>");function Yr(s,t){St(t,!0);const[e,r]=fe(),o=()=>he(Oe,"$theme",e),i=()=>{alert("Диагностика системы будет реализована в следующих версиях")};var a=Hr(),n=l(a),g=v(n,2),f=l(g),m=l(f),y=l(m),p=v(m,2);{let V=_e(()=>o().toUpperCase()),O=_e(()=>`${c.statusIndicator} ${c.statusActive}`);mr(p,{status:"active",get text(){return _(V)},get className(){return _(O)}})}var $=v(f,2),b=v($,2),M=l(b);pr(M,{});var B=v(g,2),K=l(B),z=l(K),T=l(z),k=v(z,2),N=l(k),G=v(K,2),L=v(G,2),x=l(L);et(x,{variant:"outline",size:"sm",onclick:i,children:(V,O)=>{var I=Y("🔍 Диагностика");S(V,I)},$$slots:{default:!0}}),D(V=>{d(a,1,u(c.settingSection)),d(n,1,u(c.sectionTitle)),d(g,1,u(c.settingItem)),d(f,1,u(c.settingHeader)),d(m,1,u(c.settingName)),d(y,1,u(c.settingIcon)),d($,1,u(c.settingDescription)),d(b,1,u(c.themeSelector)),d(B,1,u(c.settingItem)),d(K,1,u(c.settingHeader)),d(z,1,u(c.settingName)),d(T,1,u(c.settingIcon)),d(k,1,`${c.statusIndicator} ${c.statusActive}`),w(N,`● ${V??""}`),d(G,1,u(c.settingDescription)),d(L,1,u(c.settingActions))},[()=>t.systemStatus.toUpperCase()]),S(s,a),yt(),r()}var Qr=R("<div><h2>🇷🇺 Язык</h2> <div><div><div><span>🌏</span> Изменить язык</div> <span>● ДОСТУПНО</span></div> <div><!></div></div></div>");function Kr(s,t){St(t,!1),me();var e=Qr(),r=l(e),o=v(r,2),i=l(o),a=l(i),n=l(a),g=v(a,2),f=v(i,2),m=l(f);et(m,{variant:"outline",size:"sm",onclick:()=>Ke.setRoute({hash:pe.SELECT_LANG}),children:(y,p)=>{var $=Y("Выбрать другой язык");S(y,$)},$$slots:{default:!0}}),D(()=>{d(e,1,u(c.settingSection)),d(r,1,u(c.sectionTitle)),d(o,1,u(c.settingItem)),d(i,1,u(c.settingHeader)),d(a,1,u(c.settingName)),d(n,1,u(c.settingIcon)),d(g,1,`${c.statusIndicator} ${c.statusActive}`),d(f,1,u(c.settingActions))}),S(s,e),yt()}async function qe(){try{if("databases"in indexedDB){const s=await indexedDB.databases();console.log(`Found ${s.length} IndexedDB database(s) to delete`);for(const t of s)if(t.name)try{const e=indexedDB.deleteDatabase(t.name);await new Promise((r,o)=>{e.onsuccess=()=>{console.log(`✓ IndexedDB database deleted: ${t.name}`),r()},e.onerror=i=>{console.error(`Error deleting IndexedDB database: ${t.name}`,i),o(new Error(`Failed to delete database: ${t.name}`))},e.onblocked=()=>{console.warn(`IndexedDB database deletion blocked: ${t.name}`),r()}})}catch(e){console.error(`Error deleting IndexedDB database: ${t.name}`,e)}}else{console.log("Modern databases() API not available, using fallback method");const s=["store_v3","store_v2","store_v1","store"];for(const t of s)try{const e=indexedDB.deleteDatabase(t);await new Promise((r,o)=>{e.onsuccess=()=>{console.log(`✓ IndexedDB database deleted: ${t}`),r()},e.onerror=()=>{console.log(`IndexedDB database not found or already deleted: ${t}`),r()},e.onblocked=()=>{console.warn(`IndexedDB database deletion blocked: ${t}`),r()}})}catch(e){console.error(`Error deleting IndexedDB database: ${t}`,e)}}console.log("✓ IndexedDB databases cleared")}catch(s){throw console.error("Error clearing IndexedDB databases:",s),s}}async function Jr(){try{if(localStorage.clear(),console.log("✓ localStorage cleared"),sessionStorage.clear(),console.log("✓ sessionStorage cleared"),"serviceWorker"in navigator){const s=await navigator.serviceWorker.getRegistrations();if(s.length>0){console.log(`Found ${s.length} service worker(s) to unregister`);for(const t of s)try{await t.unregister(),console.log("✓ Service worker unregistered:",t.scope)}catch(e){console.error("Error unregistering service worker:",e)}}else console.log("No service workers found")}else console.log("Service Workers not supported in this browser");if("indexedDB"in window)try{await qe()}catch(s){console.error("Error clearing IndexedDB:",s)}if("caches"in window)try{const s=await caches.keys();if(s.length>0){console.log(`Found ${s.length} cache(s) to delete`);for(const t of s)await caches.delete(t),console.log("✓ Cache deleted:",t)}else console.log("No caches found")}catch(s){console.error("Error clearing caches:",s)}console.log("🧹 App data clearing completed"),alert("Все данные приложения очищены! Страница будет перезагружена."),window.location.reload()}catch(s){console.error("Error during app data clearing:",s),alert("Ошибка при очистке данных: "+(s instanceof Error?s.message:String(s)))}}async function Xr(){try{if("serviceWorker"in navigator){const s=await navigator.serviceWorker.getRegistrations();if(s.length>0){console.log(`Found ${s.length} service worker(s) to unregister`);for(const t of s)try{await t.unregister(),console.log("✓ Service worker unregistered:",t.scope)}catch(e){console.error("Error unregistering service worker:",e)}alert("Service Workers очищены! Страница будет перезагружена."),window.location.reload()}else alert("Service Workers не найдены")}else alert("Service Workers не поддерживаются в этом браузере")}catch(s){console.error("Error clearing service workers:",s),alert("Ошибка при очистке Service Workers: "+(s instanceof Error?s.message:String(s)))}}function Zr(){try{localStorage.clear(),sessionStorage.clear(),console.log("✓ Storage cleared"),alert("Локальное хранилище очищено!")}catch(s){console.error("Error clearing storage:",s),alert("Ошибка при очистке хранилища: "+(s instanceof Error?s.message:String(s)))}}async function ts(){try{"indexedDB"in window?(await qe(),alert("IndexedDB базы данных очищены!")):alert("IndexedDB не поддерживается в этом браузере")}catch(s){console.error("Error clearing IndexedDB:",s),alert("Ошибка при очистке IndexedDB: "+(s instanceof Error?s.message:String(s)))}}var es=R("<div><!> <!> <!> <!></div>"),rs=R("<div><h2>💾 Управление данными</h2> <div><div><div><span>💽</span> Очистка данных</div> <span>● ДОСТУПНО</span></div> <div>Управление локальными данными приложения, включая настройки, кэш и пользовательские данные.</div> <div><!></div> <!></div></div>");function ss(s,t){St(t,!1);let e=Je(!1);function r(){C(e,!_(e))}async function o(){confirm("Вы уверены, что хотите очистить ВСЕ данные приложения? Это действие нельзя отменить.")&&await Jr()}async function i(){confirm("Очистить только Service Workers?")&&await Xr()}function a(){confirm("Очистить только локальное хранилище?")&&Zr()}async function n(){confirm("Очистить только IndexedDB базы данных?")&&await ts()}me();var g=rs(),f=l(g),m=v(f,2),y=l(m),p=l(y),$=l(p),b=v(p,2),M=v(y,2),B=v(M,2),K=l(B);et(K,{variant:"outline",size:"sm",onclick:r,children:(k,N)=>{var G=Y();D(()=>w(G,_(e)?"Скрыть опции":"Показать опции очистки")),S(k,G)},$$slots:{default:!0}});var z=v(B,2);{var T=k=>{var N=es(),G=l(N);et(G,{variant:"danger",size:"sm",onclick:o,children:(O,I)=>{var A=Y("🗑️ Очистить все данные");S(O,A)},$$slots:{default:!0}});var L=v(G,2);et(L,{variant:"outline",size:"sm",onclick:i,children:(O,I)=>{var A=Y("🔧 Очистить Service Workers");S(O,A)},$$slots:{default:!0}});var x=v(L,2);et(x,{variant:"outline",size:"sm",onclick:a,children:(O,I)=>{var A=Y("💾 Очистить локальное хранилище");S(O,A)},$$slots:{default:!0}});var V=v(x,2);et(V,{variant:"outline",size:"sm",onclick:n,children:(O,I)=>{var A=Y("🗄️ Очистить IndexedDB");S(O,A)},$$slots:{default:!0}}),D(()=>d(N,1,u(c.clearOptions))),S(k,N)};tt(z,k=>{_(e)&&k(T)})}D(()=>{d(g,1,u(c.settingSection)),d(f,1,u(c.sectionTitle)),d(m,1,u(c.settingItem)),d(y,1,u(c.settingHeader)),d(p,1,u(c.settingName)),d($,1,u(c.settingIcon)),d(b,1,`${c.statusIndicator} ${c.statusActive}`),d(M,1,u(c.settingDescription)),d(B,1,u(c.settingActions))}),S(s,g),yt()}var os=R('<div><h2>🗂️ Управление вкладками</h2> <div><div><div><span>📊</span> Мониторинг активных вкладок</div> <span> </span></div> <div>Отслеживание количества активных вкладок приложения в реальном времени через SharedWorker. Счетчик автоматически обновляется при открытии/закрытии вкладок.</div></div> <div><div><div><span>🚪</span> Закрытие вкладок</div> <span>● ДОСТУПНО</span></div> <div>Управление открытыми вкладками приложения через broadcast сообщения. Позволяет закрывать вкладки синхронно через все экземпляры приложения.</div> <div><!> <!></div> <div style="margin-top: 8px; font-size: 0.9em; color: var(--color-text-secondary);">⚠️ "Закрыть остальные вкладки" - закроет все вкладки кроме текущей<br/> ⚠️ "Закрыть все вкладки" - закроет включая текущую вкладку</div></div></div>');function ns(s,t){St(t,!0);function e(){confirm("Закрыть все остальные вкладки приложения? Текущая вкладка останется открытой.")&&Re.closeAllOtherTabs()}function r(){confirm("Закрыть ВСЕ вкладки приложения включая текущую? Это действие закроет все открытые вкладки приложения.")&&Re.closeAllTabsIncludingCurrent()}var o=os(),i=l(o),a=v(i,2),n=l(a),g=l(n),f=l(g),m=v(g,2),y=l(m),p=v(n,2),$=v(a,2),b=l($),M=l(b),B=l(M),K=v(M,2),z=v(b,2),T=v(z,2),k=l(T);et(k,{variant:"outline",size:"sm",onclick:e,children:(L,x)=>{var V=Y("🗂️ Закрыть остальные вкладки");S(L,V)},$$slots:{default:!0}});var N=v(k,2);et(N,{variant:"danger",size:"sm",onclick:r,children:(L,x)=>{var V=Y("❌ Закрыть все вкладки");S(L,V)},$$slots:{default:!0}});var G=v(T,2);D(()=>{d(o,1,u(c.settingSection)),d(i,1,u(c.sectionTitle)),d(a,1,u(c.settingItem)),d(n,1,u(c.settingHeader)),d(g,1,u(c.settingName)),d(f,1,u(c.settingIcon)),d(m,1,`${c.statusIndicator} ${c.statusActive}`),w(y,`● ${t.activeTabsCount??""} АКТИВНЫХ`),d(p,1,u(c.settingDescription)),d($,1,u(c.settingItem)),d(b,1,u(c.settingHeader)),d(M,1,u(c.settingName)),d(B,1,u(c.settingIcon)),d(K,1,`${c.statusIndicator} ${c.statusActive}`),d(z,1,u(c.settingDescription)),d(T,1,u(c.settingActions)),d(G,1,u(c.settingDescription))}),S(s,o),yt()}var is=R("<div><div><strong> </strong></div> <div><span> </span> <span> </span> <span> </span> <span> </span></div></div>"),as=R("<h4>🔍 Детализация по миграциям</h4> <div></div>",1),cs=R("<div><h4>📋 Общая информация</h4> <div><div><strong>Общее время:</strong> </div> <div><strong>Последняя миграция:</strong> </div> <div><strong>Выполнено миграций:</strong> </div></div> <!></div>"),ds=R("<div><h2>⏱️ Статистика миграций</h2> <div><div><div><span>📊</span> Время выполнения миграций</div> <span>● ДОСТУПНО</span></div> <div>Детальная информация о времени выполнения миграций базы данных. Показывает продолжительность каждой миграции и общее время.</div> <div><!></div> <!></div></div>");function ls(s,t){St(t,!0);let e=it(!1),r=it(!1),o=it(null);async function i(){C(r,!0);try{const T=await Be(ge.MAIN_LES_STORE_V1);C(o,T,!0),C(e,!0)}catch(T){console.error("Ошибка получения статистики миграций:",T),alert("Не удалось загрузить статистику миграций")}finally{C(r,!1)}}function a(T){return T<1e3?`${T}мс`:T<6e4?`${(T/1e3).toFixed(1)}с`:`${(T/6e4).toFixed(1)}мин`}var n=ds(),g=l(n),f=v(g,2),m=l(f),y=l(m),p=l(y),$=v(y,2),b=v(m,2),M=v(b,2),B=l(M);et(B,{variant:"outline",size:"sm",onclick:i,get disabled(){return _(r)},children:(T,k)=>{var N=Y();D(()=>w(N,_(r)?"🔄 Загрузка...":"📈 Показать статистику")),S(T,N)},$$slots:{default:!0}});var K=v(M,2);{var z=T=>{var k=cs(),N=v(l(k),2),G=l(N),L=v(l(G)),x=v(G,2),V=v(l(x)),O=v(x,2),I=v(l(O)),A=v(N,2);{var U=Q=>{var J=as(),nt=v(Ct(J),2);qt(nt,21,()=>_(o).executedMigrations,zt,(W,j)=>{var P=is(),F=l(P),st=l(F),Mt=l(st),Ot=v(F,2),gt=l(Ot),xt=l(gt),Ut=v(gt,2),Vt=l(Ut),Pt=v(Ut,2),kt=l(Pt),Wt=v(Pt,2),Ft=l(Wt);D((Ht,mt,$t,wt)=>{d(P,1,u(c.migrationItem)),d(F,1,u(c.migrationHeader)),w(Mt,`v${_(j).version??""} - ${_(j).fileName??""}`),d(Ot,1,u(c.migrationDetails)),w(xt,`Схема: ${Ht??""}`),w(Vt,`Данные: ${mt??""}`),w(kt,`Общее: ${$t??""}`),w(Ft,`Завершена: ${wt??""}`)},[()=>a(_(j).schemaDuration),()=>a(_(j).dataDuration),()=>a(_(j).schemaDuration+_(j).dataDuration),()=>new Date(_(j).endTime).toLocaleTimeString()]),S(W,P)}),D(()=>d(nt,1,u(c.migrationList))),S(Q,J)};tt(A,Q=>{_(o).executedMigrations.length>0&&Q(U)})}D((Q,J)=>{d(k,1,u(c.versionResults)),d(N,1,u(c.statsGrid)),w(L,` ${Q??""}`),w(V,` ${J??""}`),w(I,` ${_(o).executedMigrations.length??""}`)},[()=>a(_(o).totalDuration),()=>_(o).lastMigrationDate?_(o).lastMigrationDate.toLocaleString():"Не выполнялась"]),S(T,k)};tt(K,T=>{_(e)&&_(o)&&T(z)})}D(()=>{d(n,1,u(c.settingSection)),d(g,1,u(c.sectionTitle)),d(f,1,u(c.settingItem)),d(m,1,u(c.settingHeader)),d(y,1,u(c.settingName)),d(p,1,u(c.settingIcon)),d($,1,`${c.statusIndicator} ${c.statusActive}`),d(b,1,u(c.settingDescription)),d(M,1,u(c.settingActions))}),S(s,n),yt()}var vs=R("<div> </div>"),us=R("<div><div>🔐 Для просмотра версий необходимо авторизоваться</div> <div>Данные версий зашифрованы и требуют авторизации для доступа.</div> <div><!></div></div>"),_s=R("<div>База данных пуста</div>"),gs=R("<div> </div>"),ms=R("<div><h4>👥 Пользователи в системе:</h4> <div><!></div> <h4>📈 Статистика пользователей:</h4> <div><div> </div> <div> </div> <div> </div></div> <h4>👥 Статистика Friends (в памяти):</h4> <div><div> </div> <div> </div> <div> </div> <div> </div></div> <h4>🏠 Статистика Rooms (в памяти):</h4> <div><div> </div> <div> </div> <div> </div> <div> </div></div></div>"),fs=R("<div><h2>🔍 Диагностика версий</h2> <div><div><div><span>📊</span> Проверка версий сущностей</div> <span>● ДОСТУПНО</span></div> <div>Проверка версий всех пользователей и сущностей в базе данных. Показывает ID пользователей и их текущие версии.</div> <div><!></div> <!> <!> <!></div></div>");function hs(s,t){St(t,!0);const[e,r]=fe(),o=()=>he(Ue,"$appAuthStore",e);let i=it(!1),a=it(!1),n=it(null),g=it(null),f=it(!1);async function m(){C(a,!0),C(g,null),C(n,null),C(f,!1);try{const I=o();if(Object.keys(I.byId).length===0){C(f,!0),C(i,!0);return}const U=await It.getConnection(),Q=await Bt.getUserReadinessStats(U,2),J=await sr.getVersionStats(U),nt=await Bt.scanAllUserIds(U),W=Object.values(ut.friends_by_id),j=Object.values(ut.rooms_by_id),P={total:W.length,withVersion:W.filter(st=>st.version!==void 0).length,withoutVersion:W.filter(st=>st.version===void 0).length},F={total:j.length,withVersion:j.filter(st=>st.version!==void 0).length,withoutVersion:j.filter(st=>st.version===void 0).length};C(n,{userStats:Q,versionStats:J,allUserIds:Array.from(nt),entitiesStats:{friends:P,rooms:F}},!0),C(i,!0)}catch(I){C(g,I instanceof Error?I.message:String(I),!0)}finally{C(a,!1)}}var y=fs(),p=l(y),$=v(p,2),b=l($),M=l(b),B=l(M),K=v(M,2),z=v(b,2),T=v(z,2),k=l(T);et(k,{variant:"outline",size:"sm",onclick:m,get disabled(){return _(a)},children:(I,A)=>{var U=Y();D(()=>w(U,_(a)?"⏳ Проверка...":"🔍 Проверить версии")),S(I,U)},$$slots:{default:!0}});var N=v(T,2);{var G=I=>{var A=vs(),U=l(A);D(()=>{d(A,1,u(c.errorMessage)),w(U,`❌ Ошибка: ${_(g)??""}`)}),S(I,A)};tt(N,I=>{_(g)&&I(G)})}var L=v(N,2);{var x=I=>{var A=us(),U=l(A),Q=v(U,2),J=v(Q,2),nt=l(J);{let W=_e(()=>"#"+pe.AUTH);De(nt,{get href(){return _(W)},children:(j,P)=>{et(j,{variant:"primary",size:"sm",children:(F,st)=>{var Mt=Y("Перейти к авторизации");S(F,Mt)},$$slots:{default:!0}})},$$slots:{default:!0}})}D(()=>{d(A,1,u(c.authRequired)),d(U,1,u(c.authMessage)),d(Q,1,u(c.authDescription)),d(J,1,u(c.authActions))}),S(I,A)};tt(L,I=>{_(i)&&_(f)&&I(x)})}var V=v(L,2);{var O=I=>{var A=ms(),U=v(l(A),2),Q=l(U);{var J=ft=>{var bt=_s();D(()=>d(bt,1,u(c.emptyMessage))),S(ft,bt)},nt=ft=>{var bt=de(),$e=Ct(bt);qt($e,17,()=>_(n).allUserIds,zt,(ae,ce)=>{var Kt=gs(),we=l(Kt);D(()=>{d(Kt,1,u(c.userItem)),w(we,`User ID: ${_(ce)??""} | Version: ${_(n).userStats.completedUsers>0?"2":"1"}`)}),S(ae,Kt)}),S(ft,bt)};tt(Q,ft=>{_(n).allUserIds.length===0?ft(J):ft(nt,!1)})}var W=v(U,4),j=l(W),P=l(j),F=v(j,2),st=l(F),Mt=v(F,2),Ot=l(Mt),gt=v(W,4),xt=l(gt),Ut=l(xt),Vt=v(xt,2),Pt=l(Vt),kt=v(Vt,2),Wt=l(kt),Ft=v(kt,2),Ht=l(Ft),mt=v(gt,4),$t=l(mt),wt=l($t),Yt=v($t,2),Se=l(Yt),ne=v(Yt,2),ye=l(ne),Qt=v(ne,2),ie=l(Qt);D((ft,bt)=>{d(A,1,u(c.versionResults)),d(U,1,u(c.userList)),d(W,1,u(c.statsGrid)),w(P,`Всего пользователей: ${_(n).userStats.totalUsers??""}`),w(st,`Завершили миграцию: ${_(n).userStats.completedUsers??""}`),w(Ot,`Готовность: ${_(n).userStats.completionPercentage??""}%`),d(gt,1,u(c.statsGrid)),w(Ut,`Всего friends: ${_(n).entitiesStats.friends.total??""}`),w(Pt,`С версией: ${_(n).entitiesStats.friends.withVersion??""}`),w(Wt,`Без версии: ${_(n).entitiesStats.friends.withoutVersion??""}`),w(Ht,`Готовность: ${ft??""}%`),d(mt,1,u(c.statsGrid)),w(wt,`Всего rooms: ${_(n).entitiesStats.rooms.total??""}`),w(Se,`С версией: ${_(n).entitiesStats.rooms.withVersion??""}`),w(ye,`Без версии: ${_(n).entitiesStats.rooms.withoutVersion??""}`),w(ie,`Готовность: ${bt??""}%`)},[()=>_(n).entitiesStats.friends.total>0?Math.round(_(n).entitiesStats.friends.withVersion/_(n).entitiesStats.friends.total*100):100,()=>_(n).entitiesStats.rooms.total>0?Math.round(_(n).entitiesStats.rooms.withVersion/_(n).entitiesStats.rooms.total*100):100]),S(I,A)};tt(V,I=>{_(i)&&_(n)&&!_(f)&&I(O)})}D(()=>{d(y,1,u(c.settingSection)),d(p,1,u(c.sectionTitle)),d($,1,u(c.settingItem)),d(b,1,u(c.settingHeader)),d(M,1,u(c.settingName)),d(B,1,u(c.settingIcon)),d(K,1,`${c.statusIndicator} ${c.statusActive}`),d(z,1,u(c.settingDescription)),d(T,1,u(c.settingActions))}),S(s,y),yt(),r()}const Lt={DB_NAME:"ENTITY_VERSIONS_V1",VERSION:1,STORES:{ENTITY_VERSIONS:"entity_versions"}};function ps(s,t){return`${s}_${t}`}function Ss(){return new Promise((s,t)=>{const e=indexedDB.open(Lt.DB_NAME,Lt.VERSION);e.onupgradeneeded=r=>{const o=e.result;o.objectStoreNames.contains(Lt.STORES.ENTITY_VERSIONS)||(o.createObjectStore(Lt.STORES.ENTITY_VERSIONS,{keyPath:"id"}).createIndex("userId","userId",{unique:!1}),h("✅ Создано хранилище entity_versions"))},e.onsuccess=()=>{s(e.result)},e.onerror=()=>{t(e.error)}})}async function Ee(s,t){try{const o=(await Ss()).transaction([Lt.STORES.ENTITY_VERSIONS],"readonly").objectStore(Lt.STORES.ENTITY_VERSIONS),i=ps(s,t),a=o.get(i);return new Promise((n,g)=>{a.onsuccess=()=>{const f=a.result;n((f==null?void 0:f.lastVersion)||0)},a.onerror=()=>{g(a.error)}})}catch(e){return E("❌ Ошибка получения версии сущности:",{userId:s,entityType:t,error:e}),0}}async function ys(s){try{const[t,e,r]=await Promise.all([Ee(s,"accounts"),Ee(s,"rooms"),Ee(s,"friends")]);return{accounts:t,rooms:e,friends:r}}catch(t){return E("❌ Ошибка получения сводки версий:",{userId:s,error:t}),{accounts:0,rooms:0,friends:0}}}function $s(){try{const s=new Map;for(const o of Object.values(ut.accounts_by_id)){const i=o.version||0;s.set(i,(s.get(i)||0)+1)}const t=new Map;for(const o of Object.values(ut.rooms_by_id)){const i=o.version||0;t.set(i,(t.get(i)||0)+1)}const e=new Map;for(const o of Object.values(ut.friends_by_id)){const i=o.version||0;e.set(i,(e.get(i)||0)+1)}const r={accounts:Array.from(s.entries()).map(([o,i])=>({version:o,count:i})).sort((o,i)=>o.version-i.version),rooms:Array.from(t.entries()).map(([o,i])=>({version:o,count:i})).sort((o,i)=>o.version-i.version),friends:Array.from(e.entries()).map(([o,i])=>({version:o,count:i})).sort((o,i)=>o.version-i.version)};return h("📊 Анализ версий сущностей завершен:",{accountsTotal:Object.keys(ut.accounts_by_id).length,roomsTotal:Object.keys(ut.rooms_by_id).length,friendsTotal:Object.keys(ut.friends_by_id).length,result:r}),r}catch(s){return E("❌ Ошибка анализа версий сущностей:",s),{accounts:[],rooms:[],friends:[]}}}var ws=R("<div><div>Для проверки версий сущностей требуется авторизация</div> <div>Авторизуйтесь для просмотра версий ваших данных</div> <div><!></div></div>"),bs=R("<div>Нет записей аккаунтов</div>"),Es=R("<div><strong> </strong> <!></div>"),Is=R("<div>Нет записей комнат</div>"),Ds=R("<div><strong> </strong> <!></div>"),As=R("<div>Нет записей друзей</div>"),Ts=R("<div><strong> </strong> <!></div>"),Rs=R("<h4>📈 Детальная статистика по версиям</h4> <div><h5>🏠 Accounts - распределение по версиям:</h5> <div><!></div></div> <div><h5>💬 Rooms - распределение по версиям:</h5> <div><!></div></div> <div><h5>👥 Friends - распределение по версиям:</h5> <div><!></div></div>",1),Ms=R("<div><h4>📊 Статистика версий сущностей</h4> <h4>🔢 Количество сущностей</h4> <div><div><strong>🏠 Accounts:</strong> </div> <div><strong>💬 Rooms:</strong> </div> <div><strong>👥 Friends:</strong> </div></div> <h4>📝 Версии сущностей</h4> <div><div><strong>🏠 Accounts version:</strong> </div> <div><strong>💬 Rooms version:</strong> </div> <div><strong>👥 Friends version:</strong> </div></div> <h4>✅ Записи с версиями</h4> <div><div><strong>🏠 Accounts с версиями:</strong> </div> <div><strong>💬 Rooms с версиями:</strong> </div> <div><strong>👥 Friends с версиями:</strong> </div></div> <!></div>"),xs=R("<div><h2>🔢 ВЕРСИИ СУЩНОСТЕЙ</h2> <div><div><div><span>🗂️</span> <span>Версии сущностей</span></div></div> <div>Отображает текущие версии сущностей для отладки и мониторинга миграций</div> <div><!></div> <!> <!></div></div>");function Vs(s,t){St(t,!0);const[e,r]=fe(),o=()=>he(Ue,"$appAuthStore",e);let i=it(!1),a=it(!1),n=it(null),g=it(!1);async function f(){C(a,!0);try{const x=o(),V=Object.keys(x.byId);if(V.length===0){C(g,!0),C(i,!0);return}const O=V[0];C(g,!1),console.log("📊 Загрузка данных в back_store..."),await Pe.friends.getList(),await Xe.fetch({path:"GET_ROOMS"}),console.log("✅ Данные загружены в back_store");const I=$s(),A=await ys(O),U=Object.keys(ut.accounts_by_id).length,Q=Object.keys(ut.rooms_by_id).length,J=Object.keys(ut.friends_by_id).length,nt=I.accounts.filter(P=>P.version>0).reduce((P,F)=>P+F.count,0),W=I.rooms.filter(P=>P.version>0).reduce((P,F)=>P+F.count,0),j=I.friends.filter(P=>P.version>0).reduce((P,F)=>P+F.count,0);C(n,{accounts:A.accounts,rooms:A.rooms,friends:A.friends,accountsCount:U,roomsCount:Q,friendsCount:J,accountsWithVersion:nt,roomsWithVersion:W,friendsWithVersion:j,versionsAnalysis:I},!0),C(i,!0)}catch(x){console.error("Ошибка получения версий сущностей:",x),alert("Не удалось загрузить версии сущностей")}finally{C(a,!1)}}var m=xs(),y=l(m),p=v(y,2),$=l(p),b=l($),M=l(b),B=v(M,2),K=v($,2),z=v(K,2),T=l(z);et(T,{variant:"outline",size:"sm",get disabled(){return _(a)},onclick:f,children:(x,V)=>{var O=Y();D(()=>w(O,_(a)?"⏳ Проверка...":"🔍 Проверить версии")),S(x,O)},$$slots:{default:!0}});var k=v(z,2);{var N=x=>{var V=ws(),O=l(V),I=v(O,2),A=v(I,2),U=l(A);{let Q=_e(()=>"#"+pe.AUTH);De(U,{get href(){return _(Q)},children:(J,nt)=>{et(J,{variant:"primary",size:"sm",children:(W,j)=>{var P=Y("🔑 Авторизоваться");S(W,P)},$$slots:{default:!0}})},$$slots:{default:!0}})}D(()=>{d(V,1,u(c.authRequired)),d(O,1,u(c.authMessage)),d(I,1,u(c.authDescription)),d(A,1,u(c.authActions))}),S(x,V)};tt(k,x=>{_(i)&&_(g)&&x(N)})}var G=v(k,2);{var L=x=>{var V=Ms(),O=v(l(V),4),I=l(O),A=v(l(I)),U=v(I,2),Q=v(l(U)),J=v(U,2),nt=v(l(J)),W=v(O,4),j=l(W),P=v(l(j)),F=v(j,2),st=v(l(F)),Mt=v(F,2),Ot=v(l(Mt)),gt=v(W,4),xt=l(gt),Ut=v(l(xt)),Vt=v(xt,2),Pt=v(l(Vt)),kt=v(Vt,2),Wt=v(l(kt)),Ft=v(gt,2);{var Ht=mt=>{var $t=Rs(),wt=v(Ct($t),2),Yt=v(l(wt),2),Se=l(Yt);{var ne=q=>{var X=bs();D(()=>d(X,1,u(c.emptyMessage))),S(q,X)},ye=q=>{var X=de(),Jt=Ct(X);qt(Jt,17,()=>_(n).versionsAnalysis.accounts,zt,(Xt,ct)=>{var dt=Es(),Dt=l(dt),Zt=l(Dt),At=v(Dt),te=v(At);{var ee=lt=>{var Tt=Y();D(re=>w(Tt,`(${re??""}%)`),[()=>(_(ct).count/_(n).accountsCount*100).toFixed(1)]),S(lt,Tt)};tt(te,lt=>{_(n).accountsCount>0&&lt(ee)})}D(()=>{d(dt,1,u(c.versionItem)),w(Zt,`Версия ${_(ct).version??""}:`),w(At,` ${_(ct).count??""} записей `)}),S(Xt,dt)}),S(q,X)};tt(Se,q=>{_(n).versionsAnalysis.accounts.length===0?q(ne):q(ye,!1)})}var Qt=v(wt,2),ie=v(l(Qt),2),ft=l(ie);{var bt=q=>{var X=Is();D(()=>d(X,1,u(c.emptyMessage))),S(q,X)},$e=q=>{var X=de(),Jt=Ct(X);qt(Jt,17,()=>_(n).versionsAnalysis.rooms,zt,(Xt,ct)=>{var dt=Ds(),Dt=l(dt),Zt=l(Dt),At=v(Dt),te=v(At);{var ee=lt=>{var Tt=Y();D(re=>w(Tt,`(${re??""}%)`),[()=>(_(ct).count/_(n).roomsCount*100).toFixed(1)]),S(lt,Tt)};tt(te,lt=>{_(n).roomsCount>0&&lt(ee)})}D(()=>{d(dt,1,u(c.versionItem)),w(Zt,`Версия ${_(ct).version??""}:`),w(At,` ${_(ct).count??""} записей `)}),S(Xt,dt)}),S(q,X)};tt(ft,q=>{_(n).versionsAnalysis.rooms.length===0?q(bt):q($e,!1)})}var ae=v(Qt,2),ce=v(l(ae),2),Kt=l(ce);{var we=q=>{var X=As();D(()=>d(X,1,u(c.emptyMessage))),S(q,X)},ze=q=>{var X=de(),Jt=Ct(X);qt(Jt,17,()=>_(n).versionsAnalysis.friends,zt,(Xt,ct)=>{var dt=Ts(),Dt=l(dt),Zt=l(Dt),At=v(Dt),te=v(At);{var ee=lt=>{var Tt=Y();D(re=>w(Tt,`(${re??""}%)`),[()=>(_(ct).count/_(n).friendsCount*100).toFixed(1)]),S(lt,Tt)};tt(te,lt=>{_(n).friendsCount>0&&lt(ee)})}D(()=>{d(dt,1,u(c.versionItem)),w(Zt,`Версия ${_(ct).version??""}:`),w(At,` ${_(ct).count??""} записей `)}),S(Xt,dt)}),S(q,X)};tt(Kt,q=>{_(n).versionsAnalysis.friends.length===0?q(we):q(ze,!1)})}D(()=>{d(wt,1,u(c.versionDetailSection)),d(Yt,1,u(c.versionStats)),d(Qt,1,u(c.versionDetailSection)),d(ie,1,u(c.versionStats)),d(ae,1,u(c.versionDetailSection)),d(ce,1,u(c.versionStats))}),S(mt,$t)};tt(Ft,mt=>{_(n).versionsAnalysis&&mt(Ht)})}D((mt,$t,wt)=>{d(V,1,u(c.versionResults)),d(O,1,u(c.statsGrid)),w(A,` ${_(n).accountsCount??""} записей`),w(Q,` ${_(n).roomsCount??""} записей`),w(nt,` ${_(n).friendsCount??""} записей`),d(W,1,u(c.statsGrid)),w(P,` ${_(n).accounts??""}`),w(st,` ${_(n).rooms??""}`),w(Ot,` ${_(n).friends??""}`),d(gt,1,u(c.statsGrid)),w(Ut,` ${_(n).accountsWithVersion??""} из ${_(n).accountsCount??""} (${mt??""}%)`),w(Pt,` ${_(n).roomsWithVersion??""} из ${_(n).roomsCount??""} (${$t??""}%)`),w(Wt,` ${_(n).friendsWithVersion??""} из ${_(n).friendsCount??""} (${wt??""}%)`)},[()=>_(n).accountsCount>0?(_(n).accountsWithVersion/_(n).accountsCount*100).toFixed(1):0,()=>_(n).roomsCount>0?(_(n).roomsWithVersion/_(n).roomsCount*100).toFixed(1):0,()=>_(n).friendsCount>0?(_(n).friendsWithVersion/_(n).friendsCount*100).toFixed(1):0]),S(x,V)};tt(G,x=>{_(i)&&_(n)&&!_(g)&&x(L)})}D(()=>{d(m,1,u(c.settingSection)),d(y,1,u(c.sectionTitle)),d(p,1,u(c.settingItem)),d($,1,u(c.settingHeader)),d(b,1,u(c.settingName)),d(M,1,u(c.settingIcon)),d(B,1,u(_(a)?"⏳ Проверка версий...":"🗂️ Версии сущностей")),d(K,1,u(c.settingDescription)),d(z,1,u(c.settingActions))}),S(s,m),yt(),r()}var Os=R("<div><h2>🧭 Навигация</h2> <div><div><div><span>🏠</span> Главная страница</div></div> <div>Вернуться на главную страницу приложения.</div> <div><!></div></div></div>");function Us(s,t){St(t,!1),me();var e=Os(),r=l(e),o=v(r,2),i=l(o),a=l(i),n=l(a),g=v(i,2),f=v(g,2),m=l(f);{let y=Ie(()=>"#"+pe.HOME);De(m,{get href(){return _(y)},children:(p,$)=>{et(p,{variant:"outline",size:"sm",children:(b,M)=>{var B=Y("Перейти на главную");S(b,B)},$$slots:{default:!0}})},$$slots:{default:!0}})}D(()=>{d(e,1,u(c.settingSection)),d(r,1,u(c.sectionTitle)),d(o,1,u(c.settingItem)),d(i,1,u(c.settingHeader)),d(a,1,u(c.settingName)),d(n,1,u(c.settingIcon)),d(g,1,u(c.settingDescription)),d(f,1,u(c.settingActions))}),S(s,e),yt()}var Ps=R("<div><div><!> <!> <!> <!> <!> <!> <!> <!></div></div>");function ks(s,t){St(t,!0);let e="operational",r=it(0);Ze(()=>Pe.tabs.subscribeActiveTabsCount(M=>{C(r,M,!0)}));var o=Ps(),i=l(o),a=l(i);Yr(a,{systemStatus:e});var n=v(a,2);Kr(n,{});var g=v(n,2);ss(g,{});var f=v(g,2);ns(f,{get activeTabsCount(){return _(r)}});var m=v(f,2);ls(m,{});var y=v(m,2);hs(y,{});var p=v(y,2);Vs(p,{});var $=v(p,2);Us($,{}),D(()=>{d(o,1,u(c.settingsContainer)),d(i,1,u(c.settingsGrid))}),S(s,o),yt()}function Cs(s){tr(s,{title:"СИСТЕМА_НАСТРОЕК",subtitle:"КОНФИГУРАЦИЯ_И_УПРАВЛЕНИЕ_СИСТЕМОЙ",pageName:"SettingsPage",children:(t,e)=>{ks(t,{})},$$slots:{default:!0}})}const qs=Object.freeze(Object.defineProperty({__proto__:null,default:Cs},Symbol.toStringTag,{value:"Module"}));export{qs as S,Et as T};
