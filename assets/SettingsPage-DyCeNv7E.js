const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/-1_tmp_test-CQ62IE-t.js","assets/index-CPioufBD.js","assets/index-D6sU3GtJ.css","assets/0_initialization-CIvgY8Vi.js","assets/1_accounts_friends-bsAPHTv6.js","assets/decrypt_curve25519_from_pass-CBE2Th_U.js","assets/2_accounts_versioning-DqzJSIEP.js","assets/3_rooms_versioning-B3mdw3iv.js","assets/4_accounts_room_ids-BLtpsTLS.js","assets/5_entities_version_fields-CJi0uK-g.js"])))=>i.map(i=>d[i]);
var eo=Object.defineProperty;var ro=(s,t,e)=>t in s?eo(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e;var zr=(s,t,e)=>ro(s,typeof t!="symbol"?t+"":t,e);import{K as I,I as g,M as Hr,ay as Yr,az as W,aA as so,a as Je,f as O,D as G,x as d,n as R,d as $,l as c,y,S as l,E as a,p as Qr,a5 as Kr,m as kt,e as Zr,Z as Jr,N as F,aB as oo,t as j,_ as er,w as v,a6 as tt,C as Pt,aC as no,a0 as Xr,o as io,j as V,a4 as X,a7 as ao,R as ie,L as Xe,aD as Gr,z as co,i as lo,k as Ut,ad as ae}from"./index-CPioufBD.js";import{B as vo}from"./BasePage-CBg-9Ubx.js";import{s as Wr}from"./index-XHeJSK2U.js";const Lt={0:"0_initialization",1:"1_accounts_friends",2:"2_accounts_versioning",3:"3_rooms_versioning",4:"4_accounts_room_ids",5:"5_entities_version_fields"},Fr=0,ve={MAIN_LES_STORE_V1:"main_les_store_v1",DB_STATE_MANAGER_V1:"db_state_manager_v1",ENTITY_VERSIONS_V1:"entity_versions_v1"},It={IDLE:"idle",UPDATE_STARTED:"update_started",UPDATE_SUCCESS:"update_success",UPDATE_FAILED:"update_failed",CORRUPTED:"corrupted"},uo=1;function rr(){return new Promise((s,t)=>{const e=indexedDB.open(ve.DB_STATE_MANAGER_V1,uo);e.onupgradeneeded=r=>{const o=e.result;o.objectStoreNames.contains("db_states")||(o.createObjectStore("db_states",{keyPath:"id"}),g("✅ Создано хранилище db_states"))},e.onsuccess=()=>{s(e.result)},e.onerror=()=>{I("❌ Ошибка открытия базы состояний:",e.error),t(e.error)}})}async function vt(s){try{const t=await rr();return new Promise((e,r)=>{const o=t.transaction(["db_states"],"readonly"),u=o.objectStore("db_states").get(s);u.onsuccess=()=>{e(u.result||null)},u.onerror=()=>{r(u.error)},o.oncomplete=()=>{t.close()}})}catch(t){return I("❌ Ошибка получения состояния БД:",t),null}}async function te(s){try{const t=await rr();return new Promise((e,r)=>{const o=t.transaction(["db_states"],"readwrite"),i=o.objectStore("db_states");s.lastUpdated=Date.now();const u=i.put(s);u.onsuccess=()=>{g("✅ Состояние БД обновлено:",{dbName:s.dbName,version:s.version,status:s.status}),e()},u.onerror=()=>{I("❌ Ошибка обновления состояния БД:",u.error),r(u.error)},o.oncomplete=()=>{t.close()}})}catch(t){throw I("❌ Критическая ошибка обновления состояния БД:",t),t}}async function Xt(s,t,e,r,o){try{let i=await vt(s);i?(i.status=t,e!==void 0&&(i.version=e),r!==void 0&&(i.targetVersion=r),o!==void 0&&(i.errorMessage=o)):i={id:s,dbName:s,version:e||0,status:t,lastUpdated:Date.now()},await te(i)}catch(i){throw I("❌ Ошибка установки статуса обновления:",i),i}}async function ts(s){const t=await vt(s);return(t==null?void 0:t.version)||0}async function es(s){const t=await vt(s);return t?t.status!==It.UPDATE_STARTED:!0}async function ce(){try{const s=await rr();return new Promise((t,e)=>{const r=s.transaction(["db_states"],"readonly"),i=r.objectStore("db_states").getAll();i.onsuccess=()=>{t(i.result)},i.onerror=()=>{e(i.error)},r.oncomplete=()=>{s.close()}})}catch(s){return I("❌ Ошибка получения всех состояний БД:",s),[]}}async function rs(s,t,e){try{let r=await vt(s);r||(r={id:s,dbName:s,version:t,status:It.UPDATE_STARTED,lastUpdated:Date.now()}),r.migrationStartTime=Date.now(),r.targetVersion=e,r.executedMigrations=[],r.migratedTables=[],await te(r),g("⏱️ Начат таймер миграции:",{dbName:s,fromVersion:t,toVersion:e})}catch(r){throw I("❌ Ошибка записи начала миграции:",r),r}}async function ss(s){try{const t=await vt(s);if(!t||!t.migrationStartTime){I("❌ Не найдено начало миграции для расчета времени:",s);return}const e=Date.now();t.migrationEndTime=e,t.migrationDurationMs=e-t.migrationStartTime,await te(t),g("✅ Завершен таймер миграции:",{dbName:s,durationMs:t.migrationDurationMs,durationSec:Math.round(t.migrationDurationMs/1e3)})}catch(t){throw I("❌ Ошибка записи окончания миграции:",t),t}}async function Ct(s){try{const t=await vt(s);if(!t||t.status!==It.UPDATE_STARTED)return!1;const e=10*60*1e3,r=Date.now(),o=t.migrationStartTime?r-t.migrationStartTime:r-t.lastUpdated,i=o>e;return i&&g("⚠️ Обнаружена зависшая миграция:",{dbName:s,ageMinutes:Math.round(o/6e4),lastUpdated:new Date(t.lastUpdated).toISOString()}),i}catch(t){return I("❌ Ошибка проверки зависших миграций:",t),!1}}async function Nt(s){try{const t=await vt(s);if(!t){g("ℹ️ Состояние БД не найдено, сброс не требуется:",s);return}t.status=It.IDLE,t.errorMessage="Миграция была сброшена из-за зависания",delete t.migrationStartTime,delete t.migrationEndTime,delete t.migrationDurationMs,delete t.targetVersion,await te(t),g("🔄 Сброшена зависшая миграция:",s)}catch(t){throw I("❌ Ошибка сброса зависшей миграции:",t),t}}async function os(s){try{const t=await vt(s);return t?{totalDuration:t.migrationDurationMs||0,lastMigrationDate:t.migrationEndTime?new Date(t.migrationEndTime):null,executedMigrations:t.executedMigrations||[]}:{totalDuration:0,lastMigrationDate:null,executedMigrations:[]}}catch(t){return I("❌ Ошибка получения статистики миграций:",t),{totalDuration:0,lastMigrationDate:null,executedMigrations:[]}}}const _o=Object.freeze(Object.defineProperty({__proto__:null,canStartUpdate:es,detectStuckMigrations:Ct,endMigrationTimer:ss,getAllDbStates:ce,getDbState:vt,getMigrationStats:os,getPreviousDbVersion:ts,resetStuckMigration:Nt,setUpdateStatus:Xt,startMigrationTimer:rs,updateDbState:te},Symbol.toStringTag,{value:"Module"}));class go{static async addVersionToAllRecords(t,e,r){return new Promise((o,i)=>{try{g(`🔄 Добавление версии ${r} ко всем записям в ${e}...`);const u=t.transaction([e],"readwrite"),_=u.objectStore(e);let f=0,p=0;const h=_.getAll();h.onsuccess=()=>{const w=h.result;if(f=w.length,w.length===0){g(`✅ Store ${e} пуст, версионирование не требуется`),o();return}let E=0;w.forEach(A=>{if(!A.hasOwnProperty("version")){A.version=r,E++;const T=_.put(A);T.onsuccess=()=>{p++,E--,E===0&&(g(`✅ Версионирование ${e} завершено:`,{processed:f,updated:p,version:r}),o())},T.onerror=()=>{I(`❌ Ошибка обновления записи в ${e}:`,T.error),i(T.error)}}}),E===0&&(g(`✅ Все записи в ${e} уже имеют версию`),o())},h.onerror=()=>{I(`❌ Ошибка получения записей из ${e}:`,h.error),i(h.error)},u.onerror=()=>{I(`❌ Ошибка транзакции версионирования ${e}:`,u.error),i(u.error)}}catch(u){I(`❌ Критическая ошибка версионирования ${e}:`,u),i(u)}})}static async validateRecordVersions(t,e){try{g(`🔍 Проверка версий записей, ожидаемая версия: ${e}`);const r=Array.from(t.objectStoreNames);let o=!0;const i=[];for(const u of r){const _=await this.validateStoreVersions(t,u,e);i.push(_),_.isValid||(o=!1)}return o?g("✅ Все записи имеют корректные версии"):g("⚠️ Обнаружены записи с некорректными версиями:",i),o}catch(r){return I("❌ Ошибка проверки версий записей:",r),!1}}static async validateStoreVersions(t,e,r){return new Promise((o,i)=>{try{const f=t.transaction([e],"readonly").objectStore(e).getAll();f.onsuccess=()=>{const p=f.result;let h=0,w=0;p.forEach(A=>{A.hasOwnProperty("version")?A.version<r&&w++:h++});const E=h===0&&w===0;o({storeName:e,totalRecords:p.length,recordsWithoutVersion:h,recordsWithOldVersion:w,isValid:E})},f.onerror=()=>{i(f.error)}}catch(u){i(u)}})}static async updateAllStoresVersions(t,e,r){try{const o=r||Array.from(t.objectStoreNames);g(`🔄 Массовое обновление версий до ${e} в stores:`,o);for(const i of o)await this.addVersionToAllRecords(t,i,e);g(`✅ Массовое обновление версий завершено для ${o.length} stores`)}catch(o){throw I("❌ Ошибка массового обновления версий:",o),o}}static async getVersionStats(t){try{const e=Array.from(t.objectStoreNames),r=[];let o=0,i=0;for(const u of e){const _=await this.getStoreVersionStats(t,u);r.push(_),o+=_.totalRecords,i+=_.recordsWithoutVersion}return{stores:r,summary:{totalStores:e.length,totalRecords:o,totalWithoutVersion:i}}}catch(e){return I("❌ Ошибка получения статистики версий:",e),{stores:[],summary:{totalStores:0,totalRecords:0,totalWithoutVersion:0}}}}static async getStoreVersionStats(t,e){return new Promise((r,o)=>{try{const _=t.transaction([e],"readonly").objectStore(e).getAll();_.onsuccess=()=>{const f=_.result,p={};let h=0;f.forEach(w=>{if(!w.hasOwnProperty("version"))h++;else{const E=String(w.version);p[E]=(p[E]||0)+1}}),r({name:e,totalRecords:f.length,versionsDistribution:p,recordsWithoutVersion:h})},_.onerror=()=>{o(_.error)}}catch(i){o(i)}})}static async removeVersionFromAllRecords(t,e){return new Promise((r,o)=>{try{g(`🔄 Удаление поля version из всех записей в ${e}...`);const u=t.transaction([e],"readwrite").objectStore(e),_=u.getAll();_.onsuccess=()=>{const f=_.result;let p=0,h=0;if(f.length===0){g(`✅ Store ${e} пуст`),r();return}f.forEach(w=>{if(w.hasOwnProperty("version")){delete w.version;const E=u.put(w);E.onsuccess=()=>{h++,p++,p===f.length&&(g(`✅ Удаление версий из ${e} завершено:`,{updated:h}),r())},E.onerror=()=>{o(E.error)}}else p++,p===f.length&&r()})},_.onerror=()=>{o(_.error)}}catch(i){o(i)}})}}const ns=Object.freeze(["accounts","friends","rooms"]),mo=Object.freeze(Object.defineProperty({__proto__:null,REQUIRED_STORES:ns},Symbol.toStringTag,{value:"Module"}));async function fo(){try{Hr("🔄 Загружаем legacy реестр миграций...");const s=await W(()=>import("./LEGASY_MIGRATIONS_REGISTRY-D-EDVjfO.js"),[]);if(!s.LEGACY_MIGRATIONS_REGISTRY)throw new Error("Legacy реестр не содержит LEGACY_MIGRATIONS_REGISTRY");return g("✅ Legacy реестр миграций загружен успешно"),s.LEGACY_MIGRATIONS_REGISTRY}catch(s){throw I("❌ Ошибка загрузки legacy реестра миграций:",s),s}}async function ho(s,t){if(!(s<Fr))return g("🚀 Используем только основной реестр миграций (legacy не требуется)"),{...Lt};g("📦 Требуются legacy миграции, загружаем объединенный реестр:",{oldVersion:s,newVersion:t,minCurrentVersion:Fr});const r=await fo(),o={...r,...Lt};return g("✅ Объединенный реестр создан:",{legacyCount:Object.keys(r).length,currentCount:Object.keys(Lt).length,totalCount:Object.keys(o).length}),o}async function de(s){return new Promise((t,e)=>{try{const r=indexedDB.open(s);r.onsuccess=()=>{const o=r.result.version;r.result.close(),t(o)},r.onerror=()=>{e(r.error)},r.onupgradeneeded=()=>{r.result.close(),t(0)}}catch(r){e(r)}})}async function po(s,t){const e=t[s];if(!e)throw new Error(`Миграция для версии ${s} не найдена в объединенном реестре`);try{Hr(`🔄 Загружаем модуль миграции: ${e}`);const r=await Yr(Object.assign({"./combined/-1_tmp_test.ts":()=>W(()=>import("./-1_tmp_test-CQ62IE-t.js"),__vite__mapDeps([0,1,2])),"./combined/0_initialization.ts":()=>W(()=>import("./0_initialization-CIvgY8Vi.js"),__vite__mapDeps([3,1,2])),"./combined/1_accounts_friends.ts":()=>W(()=>import("./1_accounts_friends-bsAPHTv6.js"),__vite__mapDeps([4,1,2,5])),"./combined/2_accounts_versioning.ts":()=>W(()=>import("./2_accounts_versioning-DqzJSIEP.js"),__vite__mapDeps([6,1,2,5])),"./combined/3_rooms_versioning.ts":()=>W(()=>import("./3_rooms_versioning-B3mdw3iv.js"),__vite__mapDeps([7,1,2,5])),"./combined/4_accounts_room_ids.ts":()=>W(()=>import("./4_accounts_room_ids-BLtpsTLS.js"),__vite__mapDeps([8,1,2,5])),"./combined/5_entities_version_fields.ts":()=>W(()=>import("./5_entities_version_fields-CJi0uK-g.js"),__vite__mapDeps([9,1,2,5]))}),`./combined/${e}.ts`,3);if(!r.migrationInfo||!r.migrationScheme||!r.migrationData)throw new Error(`Модуль миграции ${e} не содержит необходимые экспорты (migrationInfo, migrationScheme, migrationData)`);return g(`✅ Модуль миграции ${e} загружен успешно`),r}catch(r){throw I(`❌ Ошибка загрузки модуля миграции ${e}:`,r),r}}async function So(s,t){const e=new Map;g("🔄 Предварительная загрузка модулей миграций:",{oldVersion:s,newVersion:t});try{const r=await ho(s,t);for(let o=s;o<t;o++){const i=await po(o,r);e.set(o,i)}return g(`✅ Предварительно загружено ${e.size} модулей миграций`),e}catch(r){throw I("❌ Ошибка предварительной загрузки миграций:",r),r}}function le(){const s=Object.keys(Lt).map(Number);return s.length>0?Math.max(...s)+1:1}function yo({db:s,realOldVersion:t,newVersion:e}){g("🚨 Экстренное выполнение встроенных миграций схемы");for(let r=0;r<e;r++)r===0&&t<=0&&(g("📦 Экстренная миграция схемы 0: Создание базовых хранилищ"),s.objectStoreNames.contains("accounts")||(s.createObjectStore("accounts",{keyPath:"id"}),g("✅ Хранилище accounts создано")),s.objectStoreNames.contains("friends")||(s.createObjectStore("friends",{keyPath:"id"}),g("✅ Хранилище friends создано")),s.objectStoreNames.contains("rooms")||(s.createObjectStore("rooms",{keyPath:"id"}),g("✅ Хранилище rooms создано")),g("✅ Экстренная миграция схемы 0 завершена")),r===1&&t<=1&&(g("📦 Экстренная миграция схемы 1: Добавление индексов"),g("✅ Экстренная миграция схемы 1 завершена"));g("🔍 Дополнительная проверка наличия критических хранилищ..."),s.objectStoreNames.contains("accounts")||(s.createObjectStore("accounts",{keyPath:"id"}),g("✅ Дополнительно создано хранилище accounts")),s.objectStoreNames.contains("friends")||(s.createObjectStore("friends",{keyPath:"id"}),g("✅ Дополнительно создано хранилище friends")),s.objectStoreNames.contains("rooms")||(s.createObjectStore("rooms",{keyPath:"id"}),g("✅ Дополнительно создано хранилище rooms"))}class wo{static async checkOnAppStart(){try{g("🔍 Проверка состояния баз данных при старте...");const t=await ce();for(const e of t)await Ct(e.dbName)?(g("⚠️ Обнаружена зависшая миграция, попытка восстановления:",e.dbName),await this.recoverFromIncompleteUpdate(e.dbName)):await this.validateVersionConsistency(e.dbName);g("✅ Проверка состояния баз данных завершена")}catch(t){I("❌ Ошибка при проверке на старте приложения:",t)}}static async recoverFromIncompleteUpdate(t){try{g("🔄 Начало восстановления после некорректного завершения:",t);const e=await vt(t);if(!e){g("ℹ️ Состояние БД не найдено, восстановление не требуется:",t);return}if(!await Ct(t)){g("ℹ️ Миграция не зависла, восстановление не требуется:",t);return}const o=await de(t);if(g("📊 Сравнение версий для восстановления:",{dbName:t,stateVersion:e.version,realDbVersion:o,targetVersion:e.targetVersion}),e.targetVersion&&o>=e.targetVersion){g("✅ Миграция была завершена успешно, обновляем статус:",t),await Nt(t);return}await Nt(t),g("🔄 Восстановление завершено, миграция сброшена:",t)}catch(e){I("❌ Ошибка при восстановлении после некорректного завершения:",e);try{await Nt(t),g("🔄 Принудительный сброс статуса выполнен:",t)}catch(r){I("❌ Критическая ошибка при принудительном сбросе:",r)}}}static async validateVersionConsistency(t){try{const e=await vt(t);if(!e)return!0;const r=await de(t);return e.version!==r?(g("⚠️ Обнаружено рассогласование версий:",{dbName:t,stateVersion:e.version,realDbVersion:r}),r>e.version&&(e.version=r,await W(async()=>{const{updateDbState:o}=await Promise.resolve().then(()=>_o);return{updateDbState:o}},void 0).then(({updateDbState:o})=>o(e)),g("✅ Версия в состоянии обновлена до реальной:",r)),!1):!0}catch(e){return I("❌ Ошибка проверки согласованности версий:",e),!1}}static async validateDataIntegrity(t){try{g("🔍 Проверка целостности данных БД:",t.name);const{REQUIRED_STORES:e}=await W(async()=>{const{REQUIRED_STORES:i}=await Promise.resolve().then(()=>mo);return{REQUIRED_STORES:i}},void 0),r=e.filter(i=>!t.objectStoreNames.contains(i));if(r.length>0)return I("❌ Отсутствуют обязательные object stores:",r),!1;let o=!0;for(const i of e)try{const f=t.transaction([i],"readonly").objectStore(i).count();await new Promise((p,h)=>{f.onsuccess=()=>p(f.result),f.onerror=()=>h(f.error)})}catch(u){I(`❌ Ошибка доступа к store ${i}:`,u),o=!1}return o?g("✅ Проверка целостности данных пройдена:",t.name):I("❌ Обнаружены проблемы целостности данных:",t.name),o}catch(e){return I("❌ Ошибка при проверке целостности данных:",e),!1}}static async forceResetAllStuckMigrations(){try{g("🚨 Принудительный сброс всех зависших миграций...");const t=await ce();let e=0;for(const r of t)await Ct(r.dbName)&&(await Nt(r.dbName),e++);g(`✅ Принудительно сброшено миграций: ${e}`)}catch(t){I("❌ Ошибка при принудительном сбросе всех миграций:",t)}}static async getDiagnosticInfo(){try{const t=await ce(),e=[];let r=0,o=0;for(const i of t){const u=await Ct(i.dbName),_=await de(i.dbName),f=i.version===_;u&&r++,f||o++,e.push({name:i.dbName,stateVersion:i.version,realVersion:_,isStuck:u,versionConsistent:f})}return{databases:e,summary:{total:e.length,stuck:r,inconsistent:o}}}catch(t){return I("❌ Ошибка получения диагностической информации:",t),{databases:[],summary:{total:0,stuck:0,inconsistent:0}}}}}const rt={DB_NAME:"DB_STATE_MANAGER_V2",STORE_NAME:"user_migration_states",VERSION:1};class K{static async getDatabase(){return this.dbPromise||(this.dbPromise=new Promise((t,e)=>{const r=indexedDB.open(rt.DB_NAME,rt.VERSION);r.onupgradeneeded=o=>{const i=o.target.result;if(!i.objectStoreNames.contains(rt.STORE_NAME)){const u=i.createObjectStore(rt.STORE_NAME,{keyPath:"userId"});u.createIndex("userId","userId",{unique:!0}),u.createIndex("currentVersion","currentVersion",{unique:!1})}},r.onsuccess=()=>t(r.result),r.onerror=()=>e(r.error)})),this.dbPromise}static async getUserState(t){const e=await this.getDatabase();return new Promise((r,o)=>{const _=e.transaction([rt.STORE_NAME],"readonly").objectStore(rt.STORE_NAME).get(t);_.onsuccess=()=>r(_.result||null),_.onerror=()=>o(_.error)})}static async updateUserState(t,e){const r=await this.getDatabase(),i={...await this.getUserState(t)||{userId:t,currentVersion:0,completedMigrations:[],migrationHistory:[]},...e};return new Promise((u,_)=>{const h=r.transaction([rt.STORE_NAME],"readwrite").objectStore(rt.STORE_NAME).put(i);h.onsuccess=()=>u(),h.onerror=()=>_(h.error)})}static async getUsersCompletedVersion(t){const e=await this.getDatabase();return new Promise((r,o)=>{const _=e.transaction([rt.STORE_NAME],"readonly").objectStore(rt.STORE_NAME).getAll();_.onsuccess=()=>{const p=_.result.filter(h=>h.completedMigrations.includes(t)).map(h=>h.userId);r(p)},_.onerror=()=>o(_.error)})}static async getAllSystemUserIds(){const t=await this.getDatabase();return new Promise((e,r)=>{const u=t.transaction([rt.STORE_NAME],"readonly").objectStore(rt.STORE_NAME).getAllKeys();u.onsuccess=()=>e(u.result),u.onerror=()=>r(u.error)})}}zr(K,"dbPromise",null);class $o{static async loadMigrationModule(t){const e=Lt[t];if(!e)throw new Error(`Миграция для версии ${t} не найдена в реестре`);try{console.log(`🔄 Загружаем модуль миграции: ${e}`);const r=await Yr(Object.assign({"./migrations/combined/-1_tmp_test.ts":()=>W(()=>import("./-1_tmp_test-CQ62IE-t.js"),__vite__mapDeps([0,1,2])),"./migrations/combined/0_initialization.ts":()=>W(()=>import("./0_initialization-CIvgY8Vi.js"),__vite__mapDeps([3,1,2])),"./migrations/combined/1_accounts_friends.ts":()=>W(()=>import("./1_accounts_friends-bsAPHTv6.js"),__vite__mapDeps([4,1,2,5])),"./migrations/combined/2_accounts_versioning.ts":()=>W(()=>import("./2_accounts_versioning-DqzJSIEP.js"),__vite__mapDeps([6,1,2,5])),"./migrations/combined/3_rooms_versioning.ts":()=>W(()=>import("./3_rooms_versioning-B3mdw3iv.js"),__vite__mapDeps([7,1,2,5])),"./migrations/combined/4_accounts_room_ids.ts":()=>W(()=>import("./4_accounts_room_ids-BLtpsTLS.js"),__vite__mapDeps([8,1,2,5])),"./migrations/combined/5_entities_version_fields.ts":()=>W(()=>import("./5_entities_version_fields-CJi0uK-g.js"),__vite__mapDeps([9,1,2,5]))}),`./migrations/combined/${e}.ts`,4);if(!r.migrationInfo)throw new Error(`Модуль миграции ${e} не содержит migrationInfo`);return console.log(`✅ Модуль миграции ${e} загружен успешно`),r}catch(r){throw console.error(`❌ Ошибка загрузки модуля миграции ${e}:`,r),r}}static async getAllMigrations(){const t=[];for(const e of Object.keys(Lt).map(Number))try{const r=await this.loadMigrationModule(e);t.push({...r,version:e+1})}catch(r){console.error(`Не удалось загрузить миграцию версии ${e}:`,r)}return t.sort((e,r)=>e.version-r.version)}static async checkUserMigrations(t){var u;const e=await K.getUserState(t),r=(e==null?void 0:e.currentVersion)||0,o=le(),i=[];for(let _=r+1;_<=o;_++)(u=e==null?void 0:e.completedMigrations)!=null&&u.includes(_)||i.push(_);return i}static async migrateUser(t){const{currentUser:e,db:r,oldVersion:o,newVersion:i}=t,u=e.id;console.log(`🔄 Начинаем миграцию пользователя ${u} с версии ${o} до ${i}`),await K.updateUserState(u,{migrationStartTime:Date.now(),currentVersion:o});try{const _=await this.checkUserMigrations(u);for(const f of _){if(f>i)break;await this.executeUserMigration(t,f);const p=await K.getUserState(u)||{userId:u,currentVersion:o,completedMigrations:[],migrationHistory:[]};await K.updateUserState(u,{currentVersion:f,completedMigrations:[...p.completedMigrations,f]})}await K.updateUserState(u,{migrationEndTime:Date.now(),currentVersion:i}),console.log(`✅ Миграция пользователя ${u} завершена успешно`)}catch(_){throw console.error(`❌ Ошибка миграции пользователя ${u}:`,_),await K.updateUserState(u,{migrationEndTime:Date.now(),errorMessage:_ instanceof Error?_.message:"Unknown error"}),_}}static async executeUserMigration(t,e){var h;const{currentUser:r}=t;console.log(`📦 Выполняем миграцию версии ${e} для пользователя ${r.id}`);const o=Date.now(),i=e-1,u=await this.loadMigrationModule(i);if(!u)throw new Error(`Миграция версии ${e} не найдена`);u.migrationData&&await u.migrationData(t);const _=Date.now(),f=_-o;console.log(`✅ Миграция версии ${e} для пользователя ${r.id} завершена за ${f}мс`);const p=await K.getUserState(r.id);if(p){const w={version:e,fileName:((h=u.migrationInfo)==null?void 0:h.fileName)||`migration_${e}`,schemaDuration:0,dataDuration:f,startTime:o,endTime:_};await K.updateUserState(r.id,{migrationHistory:[...p.migrationHistory,w]})}}static async allUsersCompletedVersion(t,e){const r=await this.scanAllUserIds(t),o=new Set(await K.getUsersCompletedVersion(e));return r.size===o.size&&[...r].every(i=>o.has(i))}static async scanAllUserIds(t){return new Promise((e,r)=>{const u=t.transaction(["accounts"],"readonly").objectStore("accounts").getAll();u.onsuccess=()=>{const _=u.result,f=new Set(_.map(p=>p.id));console.log(`📊 Найдено ${f.size} пользователей в системе:`,[...f]),e(f)},u.onerror=()=>{console.error("❌ Ошибка сканирования accounts для получения userIds:",u.error),r(u.error)}})}static async getUserMigrationStats(t){return await K.getUserState(t)}}class jt{static async scanAllUserIds(t){return new Promise((e,r)=>{const u=t.transaction(["accounts"],"readonly").objectStore("accounts").getAll();u.onsuccess=()=>{const _=u.result,f=new Set(_.map(p=>p.id));e(f)},u.onerror=()=>r(u.error)})}static async allUsersReady(t,e){try{const r=await this.scanAllUserIds(t),o=new Set(await K.getUsersCompletedVersion(e)),i=r.size===o.size&&[...r].every(u=>o.has(u));return console.log(`🔍 Проверка готовности всех пользователей для версии ${e}:`),console.log(`   - Всего пользователей в системе: ${r.size}`),console.log(`   - Завершивших миграцию: ${o.size}`),console.log(`   - Результат: ${i?"✅ Все готовы":"⏳ Ожидание"}`),i}catch(r){return console.error("❌ Ошибка при проверке готовности пользователей:",r),!1}}static async getPendingUsers(t,e){const r=await this.scanAllUserIds(t),o=new Set(await K.getUsersCompletedVersion(e));return[...r].filter(i=>!o.has(i))}static async getUserReadinessStats(t,e){try{const r=await this.scanAllUserIds(t),o=new Set(await K.getUsersCompletedVersion(e)),i=[...r].filter(h=>!o.has(h)),u=r.size,_=o.size,f=u>0?Math.round(_/u*100):100,p=u===_&&u>0;return{totalUsers:u,completedUsers:_,pendingUsers:i,completionPercentage:f,isReady:p}}catch(r){return console.error("❌ Ошибка получения статистики готовности пользователей:",r),{totalUsers:0,completedUsers:0,pendingUsers:[],completionPercentage:0,isReady:!1}}}}let Y=null,dt=null,z=null,gt=!1,mt=0;const Io=5*60*1e3;class ft{static async getConnection(){if(await ft.checkAndRecoverFromFailures(),Y&&!gt)return Y;if(dt)return dt;dt=ft.createNewConnection();try{const t=await dt;return Y=t,ft.setupConnectionHandlers(t),t}catch(t){throw dt=null,t}}static async checkAndRecoverFromFailures(){try{const t=ve.MAIN_LES_STORE_V1;await Ct(t)&&(g("🔧 Обнаружена зависшая миграция, выполняем восстановление..."),await ft.resetStuckMigration(t)),await wo.checkOnAppStart()}catch(t){I("❌ Ошибка при проверке состояния БД:",t)}}static async resetStuckMigration(t){try{await Nt(t),Y&&(Y.close(),Y=null),dt=null,g("✅ Заблокированная миграция сброшена")}catch(e){throw I("❌ Ошибка сброса заблокированной миграции:",e),e}}static async createNewConnection(){return new Promise(async(t,e)=>{try{const r=ve.MAIN_LES_STORE_V1;if(!await es(r))throw new Error("База данных уже обновляется. Дождитесь завершения текущего обновления.");const i=await de(r),u=await ts(r),_=le();g("📊 Информация о версиях БД:",{currentVersion:i,previousStateVersion:u,targetVersion:_,needsMigration:i<_});const f=Math.max(i,u);f<_&&(await Xt(r,It.UPDATE_STARTED,f,_),await rs(r,f,_));let p=new Map;if(f<_){const E=Date.now();g("🔄 Предварительная загрузка модулей миграций c версии:",f),p=await So(f,_);const A=Date.now()-E;g(`✅ Предзагрузка завершена за ${A}мс`)}let h=indexedDB.open(r,_),w=i;h.onupgradeneeded=function(E){const A=h.result,T=E.oldVersion??0,st=E.newVersion??_;if(w=T,g("🔄 IndexDB onupgradeneeded:",{oldVersion:T,newVersion:st,existingStores:Array.from(A.objectStoreNames),detectedCurrentVersion:i,usingRealOldVersion:T}),T!==i&&(g("⚠️ Обнаружена рассинхронизация версий, сбрасываем предзагруженные миграции:",{detectedVersion:i,realVersion:T}),p=new Map),T<st)try{p.size===0?yo({db:A,realOldVersion:T,newVersion:st}):ft.runSchemaMigrationsWithTiming(A,T,st,p,r)}catch(Z){throw I("Критическая ошибка во время миграции схемы IndexedDB:",Z),Z}},h.onerror=async function(){var E;I("IndexDB openRequest error:",h.error),await Xt(r,It.UPDATE_FAILED,void 0,void 0,(E=h.error)==null?void 0:E.message),e(h.error)},h.onsuccess=async function(){let E=h.result;g("✅ IndexDB соединение установлено, версия БД:",E.version);try{const A=ns.filter(T=>!E.objectStoreNames.contains(T));if(A.length>0){I("🚨 Обнаружены отсутствующие object stores:",A),g("🔄 Принудительное пересоздание базы данных..."),E.close();const T=indexedDB.deleteDatabase(r);T.onsuccess=()=>{g("✅ Поврежденная база удалена"),setTimeout(()=>{g("🔄 Перезапуск создания базы..."),ft.createNewConnection().then(t).catch(e)},100)},T.onerror=()=>{I("❌ Ошибка удаления поврежденной базы:",T.error),e(T.error)};return}g("✅ Миграции схемы выполнены, БД готова к использованию"),g("ℹ️ Миграции данных будут выполнены при авторизации пользователей"),await Xt(r,It.UPDATE_SUCCESS,E.version),await ss(r),t(E)}catch(A){I("Ошибка при выполнении миграций данных:",A);const T=A instanceof Error?A.message:String(A);await Xt(r,It.UPDATE_FAILED,void 0,void 0,T),E.close(),e(A)}},h.onblocked=function(){so("Database connection blocked"),e(new Error("Database connection blocked"))}}catch(r){I("Ошибка при инициализации IndexDB:",r),e(r)}})}static runSchemaMigrationsWithTiming(t,e,r,o,i){var u,_;g("🚀 Начинаем выполнение миграций схемы IndexedDB:",{oldVersion:e,newVersion:r,existingStores:Array.from(t.objectStoreNames)});try{for(let f=e;f<r;f++){const p=f+1;g(`📋 Выполняем миграцию схемы с версии ${f} до ${p}`);const h=o.get(f);if(!h)throw new Error(`Предварительно загруженная миграция для версии ${f} не найдена`);const w=Date.now();h.migrationScheme(t);const E=Date.now()-w;g(`✅ Миграция схемы ${h.migrationInfo.fileName} выполнена за ${E}мс`);try{h&&typeof h=="object"&&Object.defineProperty(h,"_schemaDuration",{value:E,writable:!0,configurable:!0})}catch(A){const T=A instanceof Error?A.message:String(A);console.warn(`Cannot set _schemaDuration on migration module ${(u=h.migrationInfo)==null?void 0:u.fileName}:`,T),g(`⚠️ Время выполнения схемы ${(_=h.migrationInfo)==null?void 0:_.fileName}: ${E}мс (сохранено только в логах)`)}}g("🏁 Все миграции схемы IndexedDB выполнены успешно. Финальные хранилища:",Array.from(t.objectStoreNames))}catch(f){throw I("❌ Критическая ошибка во время выполнения миграций схемы IndexedDB:",f),f}}static setupConnectionHandlers(t){t.onversionchange=function(){g("🔄 Принудительное закрытие соединения IndexDB (version change)"),z&&(clearTimeout(z),z=null),gt=!0,mt=0,t.close(),Y=null,dt=null,gt=!1},t.onclose=function(){g("🔒 Соединение IndexDB закрыто"),z&&(clearTimeout(z),z=null),mt=0,Y=null,dt=null,gt=!1}}static incrementActiveRequests(){mt++,z&&(clearTimeout(z),z=null)}static decrementActiveRequests(){mt=Math.max(0,mt-1),mt===0&&ft.startCloseTimer()}static startCloseTimer(){z&&clearTimeout(z),z=setTimeout(()=>{Y&&!gt&&mt===0&&(g(`🔒 Закрытие соединения IndexDB по таймауту (5 минут после завершения всех запросов). Активных запросов: ${mt}`),gt=!0,Y.close(),Y=null,dt=null,z=null,gt=!1)},Io)}static forceCloseConnection(){Y&&(g("🔒 Принудительное закрытие соединения IndexDB"),z&&(clearTimeout(z),z=null),gt=!0,mt=0,Y.close(),Y=null,dt=null,gt=!1)}static getConnectionInfo(){return{hasConnection:!!Y,isClosing:gt,activeRequestsCount:mt,hasCloseTimer:!!z,connectionPromiseActive:!!dt}}static async checkMigrationReadiness(){try{const t=await this.getConnection(),e=le(),r=await jt.allUsersReady(t,e),o=await jt.getPendingUsers(t,e);return{isReady:r,pendingUsers:o,systemStatus:r?"ready":o.length>0?"partial":"blocked"}}catch(t){return console.error("❌ Ошибка проверки готовности миграций:",t),{isReady:!1,pendingUsers:[],systemStatus:"blocked"}}}static async getUsersMigrationSummary(){try{const t=await this.getConnection(),e=le(),r=await jt.getUserReadinessStats(t,e),o=await jt.scanAllUserIds(t),i=[];for(const u of o){const _=await $o.getUserMigrationStats(u);i.push({userId:u,currentVersion:(_==null?void 0:_.currentVersion)||0,completedMigrations:(_==null?void 0:_.completedMigrations)||[],isReady:(_==null?void 0:_.currentVersion)===e})}return{totalUsers:r.totalUsers,completedUsers:r.completedUsers,pendingUsers:r.pendingUsers,completionPercentage:r.completionPercentage,userDetails:i}}catch(t){return console.error("❌ Ошибка получения статистики пользователей:",t),{totalUsers:0,completedUsers:0,pendingUsers:[],completionPercentage:0,userDetails:[]}}}}const lt={accounts_by_id:{},friends_by_id:{},rooms_by_id:{}};var bo=O('<span class="status-text svelte-4jntj4"> </span>'),Eo=O('<div><span class="status-dot svelte-4jntj4"></span> <!></div>');function Do(s,t){let e=Je(t,"size",3,"md"),r=Je(t,"animated",3,!0),o=Je(t,"className",3,"");const i=()=>{let p=["status-indicator",`status-${t.status}`,`size-${e()}`];return r()&&p.push("animated"),o()&&p.push(o()),p.join(" ")};var u=Eo(),_=d(c(u),2);{var f=p=>{var h=bo(),w=c(h);R(()=>y(w,t.text)),$(p,h)};G(_,p=>{t.text&&p(f)})}R(p=>a(u,1,p,"svelte-4jntj4"),[()=>l(i())]),$(s,u)}var Ao=O('<div><div class="theme-preview svelte-gyqbuc"><span class="theme-icon svelte-gyqbuc"> </span> <div class="theme-info svelte-gyqbuc"><div class="theme-name svelte-gyqbuc"> </div> <div class="theme-description svelte-gyqbuc"> </div></div></div> <div class="theme-actions svelte-gyqbuc"><!></div></div>'),To=O('<div class="theme-selector svelte-gyqbuc"><div class="themes-grid svelte-gyqbuc"></div></div>');function Ro(s,t){Qr(t,!1);const[e,r]=Jr(),o=()=>er(Xr,"$theme",e),i={cyberpunk:"🌆",watchdogs:"🔍",pixel:"🎮",terminal:"💻",arabic:"🕌"},u={cyberpunk:"Темная киберпанк тема с неоновыми акцентами",watchdogs:"Стиль в духе хакерских фильмов",pixel:"Ретро пиксельная графика",terminal:"Классический терминальный интерфейс",arabic:"Традиционный арабский стиль"};Kr();var _=To(),f=c(_);kt(f,5,()=>no,Pt,(p,h)=>{var w=Ao();let E;var A=c(w),T=c(A),st=c(T),Z=d(T,2),bt=c(Z),Et=c(bt),D=d(bt,2),ue=c(D),_e=d(A,2),ge=c(_e);const me=tt(()=>o()===v(h)?"primary":"outline"),fe=tt(()=>o()===v(h));F(ge,{get variant(){return v(me)},size:"sm",onclick:()=>oo(v(h)),get disabled(){return v(fe)},children:(qt,ee)=>{var re=j();R(()=>y(re,o()===v(h)?"✓ Активна":"Применить")),$(qt,re)},$$slots:{default:!0}}),R((qt,ee)=>{E=a(w,1,"theme-option svelte-gyqbuc",null,E,qt),y(st,i[v(h)]||"🎨"),y(Et,ee),y(ue,u[v(h)])},[()=>({active:o()===v(h)}),()=>v(h).toUpperCase()],tt),$(p,w)}),$(s,_),Zr(),r()}async function is(){try{if("databases"in indexedDB){const s=await indexedDB.databases();console.log(`Found ${s.length} IndexedDB database(s) to delete`);for(const t of s)if(t.name)try{const e=indexedDB.deleteDatabase(t.name);await new Promise((r,o)=>{e.onsuccess=()=>{console.log(`✓ IndexedDB database deleted: ${t.name}`),r()},e.onerror=i=>{console.error(`Error deleting IndexedDB database: ${t.name}`,i),o(new Error(`Failed to delete database: ${t.name}`))},e.onblocked=()=>{console.warn(`IndexedDB database deletion blocked: ${t.name}`),r()}})}catch(e){console.error(`Error deleting IndexedDB database: ${t.name}`,e)}}else{console.log("Modern databases() API not available, using fallback method");const s=["store_v3","store_v2","store_v1","store"];for(const t of s)try{const e=indexedDB.deleteDatabase(t);await new Promise((r,o)=>{e.onsuccess=()=>{console.log(`✓ IndexedDB database deleted: ${t}`),r()},e.onerror=()=>{console.log(`IndexedDB database not found or already deleted: ${t}`),r()},e.onblocked=()=>{console.warn(`IndexedDB database deletion blocked: ${t}`),r()}})}catch(e){console.error(`Error deleting IndexedDB database: ${t}`,e)}}console.log("✓ IndexedDB databases cleared")}catch(s){throw console.error("Error clearing IndexedDB databases:",s),s}}async function xo(){try{if(localStorage.clear(),console.log("✓ localStorage cleared"),sessionStorage.clear(),console.log("✓ sessionStorage cleared"),"serviceWorker"in navigator){const s=await navigator.serviceWorker.getRegistrations();if(s.length>0){console.log(`Found ${s.length} service worker(s) to unregister`);for(const t of s)try{await t.unregister(),console.log("✓ Service worker unregistered:",t.scope)}catch(e){console.error("Error unregistering service worker:",e)}}else console.log("No service workers found")}else console.log("Service Workers not supported in this browser");if("indexedDB"in window)try{await is()}catch(s){console.error("Error clearing IndexedDB:",s)}if("caches"in window)try{const s=await caches.keys();if(s.length>0){console.log(`Found ${s.length} cache(s) to delete`);for(const t of s)await caches.delete(t),console.log("✓ Cache deleted:",t)}else console.log("No caches found")}catch(s){console.error("Error clearing caches:",s)}console.log("🧹 App data clearing completed"),alert("Все данные приложения очищены! Страница будет перезагружена."),window.location.reload()}catch(s){console.error("Error during app data clearing:",s),alert("Ошибка при очистке данных: "+(s instanceof Error?s.message:String(s)))}}async function Mo(){try{if("serviceWorker"in navigator){const s=await navigator.serviceWorker.getRegistrations();if(s.length>0){console.log(`Found ${s.length} service worker(s) to unregister`);for(const t of s)try{await t.unregister(),console.log("✓ Service worker unregistered:",t.scope)}catch(e){console.error("Error unregistering service worker:",e)}alert("Service Workers очищены! Страница будет перезагружена."),window.location.reload()}else alert("Service Workers не найдены")}else alert("Service Workers не поддерживаются в этом браузере")}catch(s){console.error("Error clearing service workers:",s),alert("Ошибка при очистке Service Workers: "+(s instanceof Error?s.message:String(s)))}}function Vo(){try{localStorage.clear(),sessionStorage.clear(),console.log("✓ Storage cleared"),alert("Локальное хранилище очищено!")}catch(s){console.error("Error clearing storage:",s),alert("Ошибка при очистке хранилища: "+(s instanceof Error?s.message:String(s)))}}async function Oo(){try{"indexedDB"in window?(await is(),alert("IndexedDB базы данных очищены!")):alert("IndexedDB не поддерживается в этом браузере")}catch(s){console.error("Error clearing IndexedDB:",s),alert("Ошибка при очистке IndexedDB: "+(s instanceof Error?s.message:String(s)))}}const Bt={DB_NAME:"ENTITY_VERSIONS_V1",VERSION:1,STORES:{ENTITY_VERSIONS:"entity_versions"}};function Uo(s,t){return`${s}_${t}`}function ko(){return new Promise((s,t)=>{const e=indexedDB.open(Bt.DB_NAME,Bt.VERSION);e.onupgradeneeded=r=>{const o=e.result;o.objectStoreNames.contains(Bt.STORES.ENTITY_VERSIONS)||(o.createObjectStore(Bt.STORES.ENTITY_VERSIONS,{keyPath:"id"}).createIndex("userId","userId",{unique:!1}),g("✅ Создано хранилище entity_versions"))},e.onsuccess=()=>{s(e.result)},e.onerror=()=>{t(e.error)}})}async function tr(s,t){try{const o=(await ko()).transaction([Bt.STORES.ENTITY_VERSIONS],"readonly").objectStore(Bt.STORES.ENTITY_VERSIONS),i=Uo(s,t),u=o.get(i);return new Promise((_,f)=>{u.onsuccess=()=>{const p=u.result;_((p==null?void 0:p.lastVersion)||0)},u.onerror=()=>{f(u.error)}})}catch(e){return I("❌ Ошибка получения версии сущности:",{userId:s,entityType:t,error:e}),0}}async function Po(s){try{const[t,e,r]=await Promise.all([tr(s,"accounts"),tr(s,"rooms"),tr(s,"friends")]);return{accounts:t,rooms:e,friends:r}}catch(t){return I("❌ Ошибка получения сводки версий:",{userId:s,error:t}),{accounts:0,rooms:0,friends:0}}}function Co(){try{const s=new Map;for(const o of Object.values(lt.accounts_by_id)){const i=o.version||0;s.set(i,(s.get(i)||0)+1)}const t=new Map;for(const o of Object.values(lt.rooms_by_id)){const i=o.version||0;t.set(i,(t.get(i)||0)+1)}const e=new Map;for(const o of Object.values(lt.friends_by_id)){const i=o.version||0;e.set(i,(e.get(i)||0)+1)}const r={accounts:Array.from(s.entries()).map(([o,i])=>({version:o,count:i})).sort((o,i)=>o.version-i.version),rooms:Array.from(t.entries()).map(([o,i])=>({version:o,count:i})).sort((o,i)=>o.version-i.version),friends:Array.from(e.entries()).map(([o,i])=>({version:o,count:i})).sort((o,i)=>o.version-i.version)};return g("📊 Анализ версий сущностей завершен:",{accountsTotal:Object.keys(lt.accounts_by_id).length,roomsTotal:Object.keys(lt.rooms_by_id).length,friendsTotal:Object.keys(lt.friends_by_id).length,result:r}),r}catch(s){return I("❌ Ошибка анализа версий сущностей:",s),{accounts:[],rooms:[],friends:[]}}}const No="_settingsContainer_1p21f_1",jo="_settingsGrid_1p21f_10",Bo="_settingSection_1p21f_16",Lo="_sectionTitle_1p21f_22",qo="_settingItem_1p21f_33",zo="_settingHeader_1p21f_50",Go="_settingName_1p21f_57",Wo="_settingIcon_1p21f_66",Fo="_settingDescription_1p21f_70",Ho="_settingActions_1p21f_77",Yo="_statusIndicator_1p21f_99",Qo="_statusActive_1p21f_110",Ko="_themeSelector_1p21f_122",Zo="_clearOptions_1p21f_126",Jo="_versionResults_1p21f_180",Xo="_userList_1p21f_187",tn="_userItem_1p21f_193",en="_statsGrid_1p21f_199",rn="_errorMessage_1p21f_206",sn="_authRequired_1p21f_214",on="_authMessage_1p21f_222",nn="_authDescription_1p21f_228",an="_authActions_1p21f_233",cn="_emptyMessage_1p21f_238",dn="_migrationList_1p21f_245",ln="_migrationItem_1p21f_254",vn="_migrationHeader_1p21f_267",un="_migrationDetails_1p21f_274",n={settingsContainer:No,settingsGrid:jo,settingSection:Bo,sectionTitle:Lo,settingItem:qo,settingHeader:zo,settingName:Go,settingIcon:Wo,settingDescription:Fo,settingActions:Ho,statusIndicator:Yo,statusActive:Qo,themeSelector:Ko,clearOptions:Zo,versionResults:Jo,userList:Xo,userItem:tn,statsGrid:en,errorMessage:rn,authRequired:sn,authMessage:on,authDescription:nn,authActions:an,emptyMessage:cn,migrationList:dn,migrationItem:ln,migrationHeader:vn,migrationDetails:un};var _n=O("<div><!> <!> <!> <!></div>"),gn=O("<div><div><strong> </strong></div> <div><span> </span> <span> </span> <span> </span> <span> </span></div></div>"),mn=O("<h4>🔍 Детализация по миграциям</h4> <div></div>",1),fn=O("<div><h4>📋 Общая информация</h4> <div><div><strong>Общее время:</strong> </div> <div><strong>Последняя миграция:</strong> </div> <div><strong>Выполнено миграций:</strong> </div></div> <!></div>"),hn=O("<div> </div>"),pn=O(`<div><div>🔐 Для просмотра версий необходимо авторизоваться</div> <div>Данные версий зашифрованы и требуют авторизации для
                            доступа.</div> <div><!></div></div>`),Sn=O("<div>База данных пуста</div>"),yn=O("<div> </div>"),wn=O("<div><h4>👥 Пользователи в системе:</h4> <div><!></div> <h4>📈 Статистика пользователей:</h4> <div><div> </div> <div> </div> <div> </div></div> <h4>👥 Статистика Friends (в памяти):</h4> <div><div> </div> <div> </div> <div> </div> <div> </div></div> <h4>🏠 Статистика Rooms (в памяти):</h4> <div><div> </div> <div> </div> <div> </div> <div> </div></div></div>"),$n=O("<div><div>Для проверки версий сущностей требуется авторизация</div> <div>Авторизуйтесь для просмотра версий ваших данных</div> <div><!></div></div>"),In=O("<div>Нет записей аккаунтов</div>"),bn=O("<div><strong> </strong> <!></div>"),En=O("<div>Нет записей комнат</div>"),Dn=O("<div><strong> </strong> <!></div>"),An=O("<div>Нет записей друзей</div>"),Tn=O("<div><strong> </strong> <!></div>"),Rn=O("<h4>📈 Детальная статистика по версиям</h4> <div><h5>🏠 Accounts - распределение по версиям:</h5> <div><!></div></div> <div><h5>💬 Rooms - распределение по версиям:</h5> <div><!></div></div> <div><h5>👥 Friends - распределение по версиям:</h5> <div><!></div></div>",1),xn=O("<div><h4>📊 Статистика версий сущностей</h4> <h4>🔢 Количество сущностей</h4> <div><div><strong>🏠 Accounts:</strong> </div> <div><strong>💬 Rooms:</strong> </div> <div><strong>👥 Friends:</strong> </div></div> <h4>📝 Версии сущностей</h4> <div><div><strong>🏠 Accounts version:</strong> </div> <div><strong>💬 Rooms version:</strong> </div> <div><strong>👥 Friends version:</strong> </div></div> <h4>✅ Записи с версиями</h4> <div><div><strong>🏠 Accounts с версиями:</strong> </div> <div><strong>💬 Rooms с версиями:</strong> </div> <div><strong>👥 Friends с версиями:</strong> </div></div> <!></div>"),Mn=O(`<div><div><div><h2>🔧 Системные настройки</h2> <div><div><div><span>🎨</span> Темы интерфейса</div> <!></div> <div>Выберите тему интерфейса для персонализации внешнего вида
                    приложения. Изменения применяются мгновенно.</div> <div><!></div></div> <div><div><div><span>⚡</span> Статус системы</div> <span> </span></div> <div>Система работает в штатном режиме. Все модули функционируют
                    корректно.</div> <div><!></div></div></div> <div><h2>🇷🇺 Язык</h2> <div><div><div><span>🌏</span> Изменить язык</div> <span>● ДОСТУПНО</span></div> <div><!></div></div></div> <div><h2>💾 Управление данными</h2> <div><div><div><span>💽</span> Очистка данных</div> <span>● ДОСТУПНО</span></div> <div>Управление локальными данными приложения, включая настройки,
                    кэш и пользовательские данные.</div> <div><!></div> <!></div></div> <div><h2>🗂️ Управление вкладками</h2> <div><div><div><span>📊</span> Мониторинг активных вкладок</div> <span> </span></div> <div>Отслеживание количества активных вкладок приложения в
                    реальном времени через SharedWorker. Счетчик автоматически
                    обновляется при открытии/закрытии вкладок.</div></div> <div><div><div><span>🚪</span> Закрытие вкладок</div> <span>● ДОСТУПНО</span></div> <div>Управление открытыми вкладками приложения через broadcast
                    сообщения. Позволяет закрывать вкладки синхронно через все
                    экземпляры приложения.</div> <div><!> <!></div> <div style="margin-top: 8px; font-size: 0.9em; color: var(--color-text-secondary);">⚠️ "Закрыть остальные вкладки" - закроет все вкладки кроме
                    текущей<br/> ⚠️ "Закрыть все вкладки" - закроет включая текущую вкладку</div></div></div> <div><h2>⏱️ Статистика миграций</h2> <div><div><div><span>📊</span> Время выполнения миграций</div> <span>● ДОСТУПНО</span></div> <div>Детальная информация о времени выполнения миграций базы
                    данных. Показывает продолжительность каждой миграции и общее
                    время.</div> <div><!></div> <!></div></div> <div><h2>🔍 Диагностика версий</h2> <div><div><div><span>📊</span> Проверка версий сущностей</div> <span>● ДОСТУПНО</span></div> <div>Проверка версий всех пользователей и сущностей в базе
                    данных. Показывает ID пользователей и их текущие версии.</div> <div><!></div> <!> <!> <!></div></div> <div><h2>🔢 ВЕРСИИ СУЩНОСТЕЙ</h2> <div><div><div><span>🗂️</span> <span>Версии сущностей</span></div></div> <div>Отображает текущие версии сущностей для отладки и
                    мониторинга миграций</div> <div><!></div> <!> <!></div></div> <div><h2>🧭 Навигация</h2> <div><div><div><span>🏠</span> Главная страница</div></div> <div>Вернуться на главную страницу приложения.</div> <div><!></div></div></div></div></div>`);function Vn(s,t){Qr(t,!1);const[e,r]=Jr(),o=()=>er(lo,"$appAuthStore",e),i=()=>er(Xr,"$theme",e);let u="operational",_=X(!1),f=X(0),p=X(!1),h=X(!1),w=X(null),E=X(null),A=X(!1),T=X(!1),st=X(!1),Z=X(null),bt=X(!1),Et=X(!1),D=X(null);io(()=>Wr.tabs.subscribeActiveTabsCount(b=>{V(f,b)}));function ue(){V(_,!v(_))}async function _e(){confirm("Вы уверены, что хотите очистить ВСЕ данные приложения? Это действие нельзя отменить.")&&await xo()}async function ge(){confirm("Очистить только Service Workers?")&&await Mo()}function me(){confirm("Очистить только локальное хранилище?")&&Vo()}async function fe(){confirm("Очистить только IndexedDB базы данных?")&&await Oo()}const qt=()=>{alert("Диагностика системы будет реализована в следующих версиях")};function ee(){confirm("Закрыть все остальные вкладки приложения? Текущая вкладка останется открытой.")&&Gr.closeAllOtherTabs()}function re(){confirm("Закрыть ВСЕ вкладки приложения включая текущую? Это действие закроет все открытые вкладки приложения.")&&Gr.closeAllTabsIncludingCurrent()}async function as(){V(h,!0),V(E,null),V(w,null),V(A,!1);try{const m=o();if(Object.keys(m.byId).length===0){V(A,!0),V(p,!0);return}const S=await ft.getConnection(),M=await jt.getUserReadinessStats(S,2),U=await go.getVersionStats(S),L=await jt.scanAllUserIds(S),x=Object.values(lt.friends_by_id),B=Object.values(lt.rooms_by_id),k={total:x.length,withVersion:x.filter(C=>C.version!==void 0).length,withoutVersion:x.filter(C=>C.version===void 0).length},Q={total:B.length,withVersion:B.filter(C=>C.version!==void 0).length,withoutVersion:B.filter(C=>C.version===void 0).length};V(w,{userStats:M,versionStats:U,allUserIds:Array.from(L),entitiesStats:{friends:k,rooms:Q}}),V(p,!0)}catch(m){V(E,m instanceof Error?m.message:String(m))}finally{V(h,!1)}}async function cs(){V(st,!0);try{const m=await os(ve.MAIN_LES_STORE_V1);V(Z,m),V(T,!0)}catch(m){console.error("Ошибка получения статистики миграций:",m),alert("Не удалось загрузить статистику миграций")}finally{V(st,!1)}}async function ds(){V(Et,!0);try{const m=o(),b=Object.keys(m.byId);if(b.length===0){V(A,!0),V(bt,!0);return}const S=b[0];V(A,!1),console.log("📊 Загрузка данных в back_store..."),await Wr.friends.getList(),await co.fetch({path:"GET_ROOMS"}),console.log("✅ Данные загружены в back_store");const M=Co(),U=await Po(S),L=Object.keys(lt.accounts_by_id).length,x=Object.keys(lt.rooms_by_id).length,B=Object.keys(lt.friends_by_id).length,k=M.accounts.filter(P=>P.version>0).reduce((P,H)=>P+H.count,0),Q=M.rooms.filter(P=>P.version>0).reduce((P,H)=>P+H.count,0),C=M.friends.filter(P=>P.version>0).reduce((P,H)=>P+H.count,0);V(D,{accounts:U.accounts,rooms:U.rooms,friends:U.friends,accountsCount:L,roomsCount:x,friendsCount:B,accountsWithVersion:k,roomsWithVersion:Q,friendsWithVersion:C,versionsAnalysis:M}),V(bt,!0)}catch(m){console.error("Ошибка получения версий сущностей:",m),alert("Не удалось загрузить версии сущностей")}finally{V(Et,!1)}}function se(m){return m<1e3?`${m}мс`:m<6e4?`${(m/1e3).toFixed(1)}с`:`${(m/6e4).toFixed(1)}мин`}Kr();var he=Mn(),sr=c(he),pe=c(sr),or=c(pe),Se=d(or,2),ye=c(Se),we=c(ye),ls=c(we),vs=d(we,2);const us=tt(()=>i().toUpperCase()),_s=tt(()=>`${n.statusIndicator} ${n.statusActive}`);Do(vs,{status:"active",get text(){return v(us)},get className(){return v(_s)}});var nr=d(ye,2),ir=d(nr,2),gs=c(ir);Ro(gs,{});var ar=d(Se,2),$e=c(ar),Ie=c($e),ms=c(Ie),cr=d(Ie,2),fs=c(cr),dr=d($e,2),lr=d(dr,2),hs=c(lr);F(hs,{variant:"outline",size:"sm",onclick:qt,children:(m,b)=>{var S=j("🔍 Диагностика");$(m,S)},$$slots:{default:!0}});var be=d(pe,2),vr=c(be),ur=d(vr,2),Ee=c(ur),De=c(Ee),ps=c(De),Ss=d(De,2),_r=d(Ee,2),ys=c(_r);F(ys,{variant:"outline",size:"sm",onclick:()=>ao.setPath(ie.SELECT_LANG),children:(m,b)=>{var S=j("Выбрать другой язык");$(m,S)},$$slots:{default:!0}});var Ae=d(be,2),gr=c(Ae),mr=d(gr,2),Te=c(mr),Re=c(Te),ws=c(Re),$s=d(Re,2),fr=d(Te,2),xe=d(fr,2),Is=c(xe);F(Is,{variant:"outline",size:"sm",onclick:ue,children:(m,b)=>{var S=j();R(()=>y(S,v(_)?"Скрыть опции":"Показать опции очистки")),$(m,S)},$$slots:{default:!0}});var bs=d(xe,2);{var Es=m=>{var b=_n(),S=c(b);F(S,{variant:"danger",size:"sm",onclick:_e,children:(x,B)=>{var k=j("🗑️ Очистить все данные");$(x,k)},$$slots:{default:!0}});var M=d(S,2);F(M,{variant:"outline",size:"sm",onclick:ge,children:(x,B)=>{var k=j("🔧 Очистить Service Workers");$(x,k)},$$slots:{default:!0}});var U=d(M,2);F(U,{variant:"outline",size:"sm",onclick:me,children:(x,B)=>{var k=j("💾 Очистить локальное хранилище");$(x,k)},$$slots:{default:!0}});var L=d(U,2);F(L,{variant:"outline",size:"sm",onclick:fe,children:(x,B)=>{var k=j("🗄️ Очистить IndexedDB");$(x,k)},$$slots:{default:!0}}),R(()=>a(b,1,l(n.clearOptions))),$(m,b)};G(bs,m=>{v(_)&&m(Es)})}var Me=d(Ae,2),hr=c(Me),Ve=d(hr,2),Oe=c(Ve),Ue=c(Oe),Ds=c(Ue),pr=d(Ue,2),As=c(pr),Ts=d(Oe,2),Sr=d(Ve,2),ke=c(Sr),Pe=c(ke),Rs=c(Pe),xs=d(Pe,2),yr=d(ke,2),Ce=d(yr,2),wr=c(Ce);F(wr,{variant:"outline",size:"sm",onclick:ee,children:(m,b)=>{var S=j("🗂️ Закрыть остальные вкладки");$(m,S)},$$slots:{default:!0}});var Ms=d(wr,2);F(Ms,{variant:"danger",size:"sm",onclick:re,children:(m,b)=>{var S=j("❌ Закрыть все вкладки");$(m,S)},$$slots:{default:!0}});var Vs=d(Ce,2),Ne=d(Me,2),$r=c(Ne),Ir=d($r,2),je=c(Ir),Be=c(je),Os=c(Be),Us=d(Be,2),br=d(je,2),Le=d(br,2),ks=c(Le);F(ks,{variant:"outline",size:"sm",onclick:cs,get disabled(){return v(st)},children:(m,b)=>{var S=j();R(()=>y(S,v(st)?"🔄 Загрузка...":"📈 Показать статистику")),$(m,S)},$$slots:{default:!0}});var Ps=d(Le,2);{var Cs=m=>{var b=fn(),S=d(c(b),2),M=c(S),U=d(c(M)),L=d(M,2),x=d(c(L)),B=d(L,2),k=d(c(B)),Q=d(S,2);{var C=P=>{var H=mn(),ht=d(Ut(H),2);kt(ht,5,()=>v(Z).executedMigrations,Pt,(At,ot)=>{var ut=gn(),pt=c(ut),Tt=c(pt),Rt=c(Tt),xt=d(pt,2),Mt=c(xt),Vt=c(Mt),Dt=d(Mt,2),zt=c(Dt),nt=d(Dt,2),St=c(nt),_t=d(nt,2),Ot=c(_t);R((Gt,Wt,et,J)=>{a(ut,1,l(n.migrationItem)),a(pt,1,l(n.migrationHeader)),y(Rt,`v${v(ot).version??""} - ${v(ot).fileName??""}`),a(xt,1,l(n.migrationDetails)),y(Vt,`Схема: ${Gt??""}`),y(zt,`Данные: ${Wt??""}`),y(St,`Общее: ${et??""}`),y(Ot,`Завершена: ${J??""}`)},[()=>se(v(ot).schemaDuration),()=>se(v(ot).dataDuration),()=>se(v(ot).schemaDuration+v(ot).dataDuration),()=>new Date(v(ot).endTime).toLocaleTimeString()],tt),$(At,ut)}),R(()=>a(ht,1,l(n.migrationList))),$(P,H)};G(Q,P=>{v(Z).executedMigrations.length>0&&P(C)})}R((P,H)=>{a(b,1,l(n.versionResults)),a(S,1,l(n.statsGrid)),y(U,` ${P??""}`),y(x,` ${H??""}`),y(k,` ${v(Z).executedMigrations.length??""}`)},[()=>se(v(Z).totalDuration),()=>v(Z).lastMigrationDate?v(Z).lastMigrationDate.toLocaleString():"Не выполнялась"],tt),$(m,b)};G(Ps,m=>{v(T)&&v(Z)&&m(Cs)})}var qe=d(Ne,2),Er=c(qe),Dr=d(Er,2),ze=c(Dr),Ge=c(ze),Ns=c(Ge),js=d(Ge,2),Ar=d(ze,2),We=d(Ar,2),Bs=c(We);F(Bs,{variant:"outline",size:"sm",onclick:as,get disabled(){return v(h)},children:(m,b)=>{var S=j();R(()=>y(S,v(h)?"⏳ Проверка...":"🔍 Проверить версии")),$(m,S)},$$slots:{default:!0}});var Tr=d(We,2);{var Ls=m=>{var b=hn(),S=c(b);R(()=>{a(b,1,l(n.errorMessage)),y(S,`❌ Ошибка: ${v(E)??""}`)}),$(m,b)};G(Tr,m=>{v(E)&&m(Ls)})}var Rr=d(Tr,2);{var qs=m=>{var b=pn(),S=c(b),M=d(S,2),U=d(M,2),L=c(U);Xe(L,{get href(){return ie.AUTH},children:(x,B)=>{F(x,{variant:"primary",size:"sm",children:(k,Q)=>{var C=j("Перейти к авторизации");$(k,C)},$$slots:{default:!0}})},$$slots:{default:!0}}),R(()=>{a(b,1,l(n.authRequired)),a(S,1,l(n.authMessage)),a(M,1,l(n.authDescription)),a(U,1,l(n.authActions))}),$(m,b)};G(Rr,m=>{v(p)&&v(A)&&m(qs)})}var zs=d(Rr,2);{var Gs=m=>{var b=wn(),S=d(c(b),2),M=c(S);{var U=et=>{var J=Sn();R(()=>a(J,1,l(n.emptyMessage))),$(et,J)},L=et=>{var J=ae(),oe=Ut(J);kt(oe,1,()=>v(w).allUserIds,Pt,(Ke,Ze)=>{var Ft=yn(),ne=c(Ft);R(()=>{a(Ft,1,l(n.userItem)),y(ne,`User ID: ${v(Ze)??""} | Version: ${v(w).userStats.completedUsers>0?"2":"1"}`)}),$(Ke,Ft)}),$(et,J)};G(M,et=>{v(w).allUserIds.length===0?et(U):et(L,!1)})}var x=d(S,4),B=c(x),k=c(B),Q=d(B,2),C=c(Q),P=d(Q,2),H=c(P),ht=d(x,4),At=c(ht),ot=c(At),ut=d(At,2),pt=c(ut),Tt=d(ut,2),Rt=c(Tt),xt=d(Tt,2),Mt=c(xt),Vt=d(ht,4),Dt=c(Vt),zt=c(Dt),nt=d(Dt,2),St=c(nt),_t=d(nt,2),Ot=c(_t),Gt=d(_t,2),Wt=c(Gt);R((et,J)=>{a(b,1,l(n.versionResults)),a(S,1,l(n.userList)),a(x,1,l(n.statsGrid)),y(k,`Всего пользователей: ${v(w).userStats.totalUsers??""}`),y(C,`Завершили миграцию: ${v(w).userStats.completedUsers??""}`),y(H,`Готовность: ${v(w).userStats.completionPercentage??""}%`),a(ht,1,l(n.statsGrid)),y(ot,`Всего friends: ${v(w).entitiesStats.friends.total??""}`),y(pt,`С версией: ${v(w).entitiesStats.friends.withVersion??""}`),y(Rt,`Без версии: ${v(w).entitiesStats.friends.withoutVersion??""}`),y(Mt,`Готовность: ${et??""}%`),a(Vt,1,l(n.statsGrid)),y(zt,`Всего rooms: ${v(w).entitiesStats.rooms.total??""}`),y(St,`С версией: ${v(w).entitiesStats.rooms.withVersion??""}`),y(Ot,`Без версии: ${v(w).entitiesStats.rooms.withoutVersion??""}`),y(Wt,`Готовность: ${J??""}%`)},[()=>v(w).entitiesStats.friends.total>0?Math.round(v(w).entitiesStats.friends.withVersion/v(w).entitiesStats.friends.total*100):100,()=>v(w).entitiesStats.rooms.total>0?Math.round(v(w).entitiesStats.rooms.withVersion/v(w).entitiesStats.rooms.total*100):100],tt),$(m,b)};G(zs,m=>{v(p)&&v(w)&&!v(A)&&m(Gs)})}var Fe=d(qe,2),xr=c(Fe),Mr=d(xr,2),He=c(Mr),Vr=c(He),Or=c(Vr),Ws=d(Or,2),Ur=d(He,2),Ye=d(Ur,2),Fs=c(Ye);F(Fs,{variant:"outline",size:"sm",get disabled(){return v(Et)},onclick:ds,children:(m,b)=>{var S=j();R(()=>y(S,v(Et)?"⏳ Проверка...":"🔍 Проверить версии")),$(m,S)},$$slots:{default:!0}});var kr=d(Ye,2);{var Hs=m=>{var b=$n(),S=c(b),M=d(S,2),U=d(M,2),L=c(U);Xe(L,{get href(){return ie.AUTH},children:(x,B)=>{F(x,{variant:"primary",size:"sm",children:(k,Q)=>{var C=j("🔑 Авторизоваться");$(k,C)},$$slots:{default:!0}})},$$slots:{default:!0}}),R(()=>{a(b,1,l(n.authRequired)),a(S,1,l(n.authMessage)),a(M,1,l(n.authDescription)),a(U,1,l(n.authActions))}),$(m,b)};G(kr,m=>{v(bt)&&v(A)&&m(Hs)})}var Ys=d(kr,2);{var Qs=m=>{var b=xn(),S=d(c(b),4),M=c(S),U=d(c(M)),L=d(M,2),x=d(c(L)),B=d(L,2),k=d(c(B)),Q=d(S,4),C=c(Q),P=d(c(C)),H=d(C,2),ht=d(c(H)),At=d(H,2),ot=d(c(At)),ut=d(Q,4),pt=c(ut),Tt=d(c(pt)),Rt=d(pt,2),xt=d(c(Rt)),Mt=d(Rt,2),Vt=d(c(Mt)),Dt=d(ut,2);{var zt=nt=>{var St=Rn(),_t=d(Ut(St),2),Ot=d(c(_t),2),Gt=c(Ot);{var Wt=N=>{var q=In();R(()=>a(q,1,l(n.emptyMessage))),$(N,q)},et=N=>{var q=ae(),Ht=Ut(q);kt(Ht,1,()=>v(D).versionsAnalysis.accounts,Pt,(Yt,it)=>{var at=bn(),yt=c(at),Qt=c(yt),wt=d(yt),Kt=d(wt);{var Zt=ct=>{var $t=j();R(Jt=>y($t,`(${Jt??""}%)`),[()=>(v(it).count/v(D).accountsCount*100).toFixed(1)],tt),$(ct,$t)};G(Kt,ct=>{v(D).accountsCount>0&&ct(Zt)})}R(()=>{a(at,1,l(n.versionItem)),y(Qt,`Версия ${v(it).version??""}:`),y(wt,` ${v(it).count??""} записей `)}),$(Yt,at)}),$(N,q)};G(Gt,N=>{v(D).versionsAnalysis.accounts.length===0?N(Wt):N(et,!1)})}var J=d(_t,2),oe=d(c(J),2),Ke=c(oe);{var Ze=N=>{var q=En();R(()=>a(q,1,l(n.emptyMessage))),$(N,q)},Ft=N=>{var q=ae(),Ht=Ut(q);kt(Ht,1,()=>v(D).versionsAnalysis.rooms,Pt,(Yt,it)=>{var at=Dn(),yt=c(at),Qt=c(yt),wt=d(yt),Kt=d(wt);{var Zt=ct=>{var $t=j();R(Jt=>y($t,`(${Jt??""}%)`),[()=>(v(it).count/v(D).roomsCount*100).toFixed(1)],tt),$(ct,$t)};G(Kt,ct=>{v(D).roomsCount>0&&ct(Zt)})}R(()=>{a(at,1,l(n.versionItem)),y(Qt,`Версия ${v(it).version??""}:`),y(wt,` ${v(it).count??""} записей `)}),$(Yt,at)}),$(N,q)};G(Ke,N=>{v(D).versionsAnalysis.rooms.length===0?N(Ze):N(Ft,!1)})}var ne=d(J,2),qr=d(c(ne),2),Js=c(qr);{var Xs=N=>{var q=An();R(()=>a(q,1,l(n.emptyMessage))),$(N,q)},to=N=>{var q=ae(),Ht=Ut(q);kt(Ht,1,()=>v(D).versionsAnalysis.friends,Pt,(Yt,it)=>{var at=Tn(),yt=c(at),Qt=c(yt),wt=d(yt),Kt=d(wt);{var Zt=ct=>{var $t=j();R(Jt=>y($t,`(${Jt??""}%)`),[()=>(v(it).count/v(D).friendsCount*100).toFixed(1)],tt),$(ct,$t)};G(Kt,ct=>{v(D).friendsCount>0&&ct(Zt)})}R(()=>{a(at,1,l(n.versionItem)),y(Qt,`Версия ${v(it).version??""}:`),y(wt,` ${v(it).count??""} записей `)}),$(Yt,at)}),$(N,q)};G(Js,N=>{v(D).versionsAnalysis.friends.length===0?N(Xs):N(to,!1)})}R(()=>{a(_t,1,l(n.versionDetailSection)),a(Ot,1,l(n.versionStats)),a(J,1,l(n.versionDetailSection)),a(oe,1,l(n.versionStats)),a(ne,1,l(n.versionDetailSection)),a(qr,1,l(n.versionStats))}),$(nt,St)};G(Dt,nt=>{v(D).versionsAnalysis&&nt(zt)})}R((nt,St,_t)=>{a(b,1,l(n.versionResults)),a(S,1,l(n.statsGrid)),y(U,` ${v(D).accountsCount??""} записей`),y(x,` ${v(D).roomsCount??""} записей`),y(k,` ${v(D).friendsCount??""} записей`),a(Q,1,l(n.statsGrid)),y(P,` ${v(D).accounts??""}`),y(ht,` ${v(D).rooms??""}`),y(ot,` ${v(D).friends??""}`),a(ut,1,l(n.statsGrid)),y(Tt,` ${v(D).accountsWithVersion??""} из ${v(D).accountsCount??""}
                                (${nt??""}%)`),y(xt,` ${v(D).roomsWithVersion??""} из ${v(D).roomsCount??""}
                                (${St??""}%)`),y(Vt,` ${v(D).friendsWithVersion??""} из ${v(D).friendsCount??""}
                                (${_t??""}%)`)},[()=>v(D).accountsCount>0?(v(D).accountsWithVersion/v(D).accountsCount*100).toFixed(1):0,()=>v(D).roomsCount>0?(v(D).roomsWithVersion/v(D).roomsCount*100).toFixed(1):0,()=>v(D).friendsCount>0?(v(D).friendsWithVersion/v(D).friendsCount*100).toFixed(1):0],tt),$(m,b)};G(Ys,m=>{v(bt)&&v(D)&&!v(A)&&m(Qs)})}var Pr=d(Fe,2),Cr=c(Pr),Nr=d(Cr,2),Qe=c(Nr),jr=c(Qe),Ks=c(jr),Br=d(Qe,2),Lr=d(Br,2),Zs=c(Lr);Xe(Zs,{get href(){return ie.HOME},children:(m,b)=>{F(m,{variant:"outline",size:"sm",children:(S,M)=>{var U=j("Перейти на главную");$(S,U)},$$slots:{default:!0}})},$$slots:{default:!0}}),R(m=>{a(he,1,l(n.settingsContainer)),a(sr,1,l(n.settingsGrid)),a(pe,1,l(n.settingSection)),a(or,1,l(n.sectionTitle)),a(Se,1,l(n.settingItem)),a(ye,1,l(n.settingHeader)),a(we,1,l(n.settingName)),a(ls,1,l(n.settingIcon)),a(nr,1,l(n.settingDescription)),a(ir,1,l(n.themeSelector)),a(ar,1,l(n.settingItem)),a($e,1,l(n.settingHeader)),a(Ie,1,l(n.settingName)),a(ms,1,l(n.settingIcon)),a(cr,1,`${n.statusIndicator} ${n.statusActive}`),y(fs,`● ${m??""}`),a(dr,1,l(n.settingDescription)),a(lr,1,l(n.settingActions)),a(be,1,l(n.settingSection)),a(vr,1,l(n.sectionTitle)),a(ur,1,l(n.settingItem)),a(Ee,1,l(n.settingHeader)),a(De,1,l(n.settingName)),a(ps,1,l(n.settingIcon)),a(Ss,1,`${n.statusIndicator} ${n.statusActive}`),a(_r,1,l(n.settingActions)),a(Ae,1,l(n.settingSection)),a(gr,1,l(n.sectionTitle)),a(mr,1,l(n.settingItem)),a(Te,1,l(n.settingHeader)),a(Re,1,l(n.settingName)),a(ws,1,l(n.settingIcon)),a($s,1,`${n.statusIndicator} ${n.statusActive}`),a(fr,1,l(n.settingDescription)),a(xe,1,l(n.settingActions)),a(Me,1,l(n.settingSection)),a(hr,1,l(n.sectionTitle)),a(Ve,1,l(n.settingItem)),a(Oe,1,l(n.settingHeader)),a(Ue,1,l(n.settingName)),a(Ds,1,l(n.settingIcon)),a(pr,1,`${n.statusIndicator} ${n.statusActive}`),y(As,`● ${v(f)??""} АКТИВНЫХ`),a(Ts,1,l(n.settingDescription)),a(Sr,1,l(n.settingItem)),a(ke,1,l(n.settingHeader)),a(Pe,1,l(n.settingName)),a(Rs,1,l(n.settingIcon)),a(xs,1,`${n.statusIndicator} ${n.statusActive}`),a(yr,1,l(n.settingDescription)),a(Ce,1,l(n.settingActions)),a(Vs,1,l(n.settingDescription)),a(Ne,1,l(n.settingSection)),a($r,1,l(n.sectionTitle)),a(Ir,1,l(n.settingItem)),a(je,1,l(n.settingHeader)),a(Be,1,l(n.settingName)),a(Os,1,l(n.settingIcon)),a(Us,1,`${n.statusIndicator} ${n.statusActive}`),a(br,1,l(n.settingDescription)),a(Le,1,l(n.settingActions)),a(qe,1,l(n.settingSection)),a(Er,1,l(n.sectionTitle)),a(Dr,1,l(n.settingItem)),a(ze,1,l(n.settingHeader)),a(Ge,1,l(n.settingName)),a(Ns,1,l(n.settingIcon)),a(js,1,`${n.statusIndicator} ${n.statusActive}`),a(Ar,1,l(n.settingDescription)),a(We,1,l(n.settingActions)),a(Fe,1,l(n.settingSection)),a(xr,1,l(n.sectionTitle)),a(Mr,1,l(n.settingItem)),a(He,1,l(n.settingHeader)),a(Vr,1,l(n.settingName)),a(Or,1,l(n.settingIcon)),a(Ws,1,l(v(Et)?"⏳ Проверка версий...":"🗂️ Версии сущностей")),a(Ur,1,l(n.settingDescription)),a(Ye,1,l(n.settingActions)),a(Pr,1,l(n.settingSection)),a(Cr,1,l(n.sectionTitle)),a(Nr,1,l(n.settingItem)),a(Qe,1,l(n.settingHeader)),a(jr,1,l(n.settingName)),a(Ks,1,l(n.settingIcon)),a(Br,1,l(n.settingDescription)),a(Lr,1,l(n.settingActions))},[()=>u.toUpperCase()],tt),$(s,he),Zr(),r()}function Cn(s){vo(s,{title:"СИСТЕМА_НАСТРОЕК",subtitle:"КОНФИГУРАЦИЯ_И_УПРАВЛЕНИЕ_СИСТЕМОЙ",pageName:"SettingsPage",children:(t,e)=>{Vn(t,{})},$$slots:{default:!0}})}export{Cn as default};
