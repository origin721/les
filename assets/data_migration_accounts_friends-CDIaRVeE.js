import{av as r,aw as h,ax as x,q as d,ay as v}from"./index-CtQuueis.js";async function m(c){await r.ready;const n=r.randombytes_buf(16),t=r.from_string(c),s=r.crypto_generichash(32,t),i=r.crypto_scalarmult_base(s),e=r.crypto_scalarmult_base(i);return{privateKey:r.to_hex(i),publicKey:r.to_hex(e),salt:r.to_hex(n)}}async function P({pass:c,message:n}){try{await r.ready;const{publicKey:t}=await m(c),s=typeof t=="string"?r.from_hex(t):t,i=r.from_string(n),e=r.crypto_box_seal(i,s);return r.to_hex(e)}catch{return null}}async function S({cipherText:c,pass:n}){try{await r.ready;const{privateKey:t,publicKey:s}=await m(n),i=typeof t=="string"?r.from_hex(t):t,e=typeof s=="string"?r.from_hex(s):s,a=typeof c=="string"?r.from_hex(c):c,o=r.crypto_box_seal_open(a,e,i);return h(o)}catch{return null}}function w(c){const n=new Promise((t,s)=>{const i=a=>{t(a)},e=a=>{s(a)};x(a=>{n.finally(a);let o=indexedDB.open("store_v3",1);o.onupgradeneeded=function(u){const y=o.result,f=u.oldVersion??0,l=u.newVersion??1;d("üîÑ IndexDB onupgradeneeded:",{oldVersion:f,newVersion:l,existingStores:Array.from(y.objectStoreNames)});try{f===0&&l>=1&&(d("üì¶ –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å –±–∞–∑–æ–≤—ã–º–∏ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞–º–∏"),y.objectStoreNames.contains("accounts")||(y.createObjectStore("accounts",{keyPath:"id"}),d("‚úÖ –•—Ä–∞–Ω–∏–ª–∏—â–µ accounts —Å–æ–∑–¥–∞–Ω–æ")),y.objectStoreNames.contains("friends")||(y.createObjectStore("friends",{keyPath:"id"}),d("‚úÖ –•—Ä–∞–Ω–∏–ª–∏—â–µ friends —Å–æ–∑–¥–∞–Ω–æ"))),d("üèÅ IndexDB –º–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –§–∏–Ω–∞–ª—å–Ω—ã–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞:",Array.from(y.objectStoreNames))}catch(_){throw console.error("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –º–∏–≥—Ä–∞—Ü–∏–∏ IndexedDB:",_),_}},o.onerror=function(){console.error("Error",o.error),e(o.error)},o.onsuccess=function(){let u=o.result;c(u).then(()=>{u.close(),i(void 0)}).catch(e),u.onversionchange=function(){u.close()}},o.onblocked=function(){v("–°–æ–±—ã—Ç–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã–ª–æ —Å—Ä–∞–±–æ—Ç–∞—Ç—å"),e(new Error("Database connection blocked"))}})});return n}const g={accounts_by_id:{},friendsLibp2p:{},friends_by_account:{}};function K(){return new Promise((c,n)=>{w(t=>new Promise((s,i)=>{const o=t.transaction(["accounts"],"readwrite").objectStore("accounts").openCursor(),u=[];o.onsuccess=async function(y){const f=y.target.result;if(f){try{const l=new Set;for(let _ of Object.values(g.accounts_by_id))l.add(_.pass);for(let _ of l){const p=await S({pass:_,cipherText:f.value.data}),b=p?JSON.parse(p):null;b&&u.push(b)}}catch{}f.continue()}else c(u),s()}}))})}async function B(){return d("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—è friendsByIds"),w(async c=>{try{const n=await K();let t=0;if(n.length===0){d("‚úÖ –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏");return}const s=c.transaction(["accounts"],"readwrite"),i=s.objectStore("accounts");for(const e of n){if(e.friendsByIds!==void 0){d(`‚è≠Ô∏è –ê–∫–∫–∞—É–Ω—Ç ${e.id} —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–ª–µ friendsByIds, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º`);continue}d(`üîÑ –ú–∏–≥—Ä–∏—Ä—É–µ–º –∞–∫–∫–∞—É–Ω—Ç ${e.id} (${e.namePub})`);const a={...e,friendsByIds:[],date_updated:new Date},o=await P({pass:e.pass,message:JSON.stringify(a)});i.put({id:e.id,data:o}),g.accounts_by_id[e.id]=a,t++}return new Promise((e,a)=>{s.oncomplete=function(){d(`‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –û–±–Ω–æ–≤–ª–µ–Ω–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤: ${t}`),e()},s.onerror=function(o){console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤:",o),a(new Error(`–û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: ${JSON.stringify(o)}`))}})}catch(n){throw console.error("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ dataMigrationAccountsFriends:",n),n}})}export{B as default};
