import{A as s,P as a,Y as c,M as n,ar as o}from"./index-DVnLH0gg.js";const A={async getList(){return await s.fetch({path:a.GET_FRIENDS})},async getByAccountId(t){return await s.fetch({path:a.GET_FRIENDS_BY_ACCOUNT_ID,body:{myAccId:t}})},async getById(t){return await s.fetch({path:a.GET_FRIEND_BY_ID,body:{friendId:t}})},async add(t){c("🌐 API friends.add СТАРТ:",t);const r=Date.now();try{let e;Array.isArray(t)?(e={path:a.ADD_FRIENDS,body:{list:t}},c("🌐 API friends.add: используем старый формат (массив)")):(e={path:a.ADD_FRIENDS,body:{list:t.friends,myAccId:t.myAccId}},c("🌐 API friends.add: используем новый формат с myAccId:",t.myAccId)),c("🌐 API friends.add: вызываем shared_worker_store.fetch с параметрами:",e);const d=await s.fetch(e);return c("✅ API friends.add УСПЕХ за",Date.now()-r,"мс, результат:",d),d}catch(e){throw n("❌ API friends.add ОШИБКА за",Date.now()-r,"мс:",e),c("❌ API friends.add полная ошибка:",e==null?void 0:e.stack),e}},async delete(t){await s.fetch({path:a.DELETE_FRIENDS,body:{ids:t}})},async put(t){await s.fetch({path:a.PUT_FRIENDS,body:{list:t}})}},I={subscribeActiveTabsCount(t){return s.subscribeWorker({reqParam:{path:a.GET_ACTIVE_TABS_COUNT},utils:{callback:r=>t(r.count)}})}},h={friends:A,accounts:o,tabs:I};export{h as s};
