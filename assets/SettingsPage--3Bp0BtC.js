const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/-1_tmp_test-D7uO3Bh6.js","assets/index-BnSUTard.js","assets/index-D6sU3GtJ.css","assets/0_initialization-DWxrVXNT.js","assets/1_accounts_friends-Cy5PYJNe.js","assets/decrypt_curve25519_from_pass-9Z-R_TMX.js","assets/2_accounts_versioning-D6Y67slL.js","assets/3_rooms_versioning-BlV7SvmQ.js","assets/4_accounts_room_ids-CPFFB_I4.js","assets/5_entities_version_fields-pKc-0tfL.js"])))=>i.map(i=>d[i]);
var Fs=Object.defineProperty;var Hs=(s,t,e)=>t in s?Fs(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e;var Cr=(s,t,e)=>Hs(s,typeof t!="symbol"?t+"":t,e);import{H as b,I as g,J as Lr,_ as G,K as Ys,u as Ye,f as O,L as W,s as d,a as R,b as $,j as c,k as S,o as v,n as a,p as qr,M as zr,e as kt,i as Wr,y as Gr,B as Y,N as Qs,t as B,E as Xe,g as l,O as tt,m as Pt,P as Ks,Q as Fr,S as Js,r as V,T as Z,U as Qe,R as Ke,V as Nr,W as Xs,D as Zs,z as Ut,X as ie}from"./index-BnSUTard.js";import{B as to}from"./BasePage-B-WiQ-tW.js";import{s as jr}from"./index-BMi-wgPL.js";const Hr=(s,t,e)=>{const r=s[t];return r?typeof r=="function"?r():Promise.resolve(r):new Promise((o,n)=>{(typeof queueMicrotask=="function"?queueMicrotask:setTimeout)(n.bind(null,new Error("Unknown variable dynamic import: "+t+(t.split("/").length!==e?". Note that variables only represent file names one level deep.":""))))})},Lt={0:"0_initialization",1:"1_accounts_friends",2:"2_accounts_versioning",3:"3_rooms_versioning",4:"4_accounts_room_ids",5:"5_entities_version_fields"},Br=0,le={MAIN_LES_STORE_V1:"main_les_store_v1",DB_STATE_MANAGER_V1:"db_state_manager_v1",ENTITY_VERSIONS_V1:"entity_versions_v1"},bt={IDLE:"idle",UPDATE_STARTED:"update_started",UPDATE_SUCCESS:"update_success",UPDATE_FAILED:"update_failed",CORRUPTED:"corrupted"},eo=1;function Ze(){return new Promise((s,t)=>{const e=indexedDB.open(le.DB_STATE_MANAGER_V1,eo);e.onupgradeneeded=r=>{const o=e.result;o.objectStoreNames.contains("db_states")||(o.createObjectStore("db_states",{keyPath:"id"}),g("✅ Создано хранилище db_states"))},e.onsuccess=()=>{s(e.result)},e.onerror=()=>{b("❌ Ошибка открытия базы состояний:",e.error),t(e.error)}})}async function vt(s){try{const t=await Ze();return new Promise((e,r)=>{const o=t.transaction(["db_states"],"readonly"),u=o.objectStore("db_states").get(s);u.onsuccess=()=>{e(u.result||null)},u.onerror=()=>{r(u.error)},o.oncomplete=()=>{t.close()}})}catch(t){return b("❌ Ошибка получения состояния БД:",t),null}}async function te(s){try{const t=await Ze();return new Promise((e,r)=>{const o=t.transaction(["db_states"],"readwrite"),n=o.objectStore("db_states");s.lastUpdated=Date.now();const u=n.put(s);u.onsuccess=()=>{g("✅ Состояние БД обновлено:",{dbName:s.dbName,version:s.version,status:s.status}),e()},u.onerror=()=>{b("❌ Ошибка обновления состояния БД:",u.error),r(u.error)},o.oncomplete=()=>{t.close()}})}catch(t){throw b("❌ Критическая ошибка обновления состояния БД:",t),t}}async function Zt(s,t,e,r,o){try{let n=await vt(s);n?(n.status=t,e!==void 0&&(n.version=e),r!==void 0&&(n.targetVersion=r),o!==void 0&&(n.errorMessage=o)):n={id:s,dbName:s,version:e||0,status:t,lastUpdated:Date.now()},await te(n)}catch(n){throw b("❌ Ошибка установки статуса обновления:",n),n}}async function Yr(s){const t=await vt(s);return(t==null?void 0:t.version)||0}async function Qr(s){const t=await vt(s);return t?t.status!==bt.UPDATE_STARTED:!0}async function ae(){try{const s=await Ze();return new Promise((t,e)=>{const r=s.transaction(["db_states"],"readonly"),n=r.objectStore("db_states").getAll();n.onsuccess=()=>{t(n.result)},n.onerror=()=>{e(n.error)},r.oncomplete=()=>{s.close()}})}catch(s){return b("❌ Ошибка получения всех состояний БД:",s),[]}}async function Kr(s,t,e){try{let r=await vt(s);r||(r={id:s,dbName:s,version:t,status:bt.UPDATE_STARTED,lastUpdated:Date.now()}),r.migrationStartTime=Date.now(),r.targetVersion=e,r.executedMigrations=[],r.migratedTables=[],await te(r),g("⏱️ Начат таймер миграции:",{dbName:s,fromVersion:t,toVersion:e})}catch(r){throw b("❌ Ошибка записи начала миграции:",r),r}}async function Jr(s){try{const t=await vt(s);if(!t||!t.migrationStartTime){b("❌ Не найдено начало миграции для расчета времени:",s);return}const e=Date.now();t.migrationEndTime=e,t.migrationDurationMs=e-t.migrationStartTime,await te(t),g("✅ Завершен таймер миграции:",{dbName:s,durationMs:t.migrationDurationMs,durationSec:Math.round(t.migrationDurationMs/1e3)})}catch(t){throw b("❌ Ошибка записи окончания миграции:",t),t}}async function Ct(s){try{const t=await vt(s);if(!t||t.status!==bt.UPDATE_STARTED)return!1;const e=10*60*1e3,r=Date.now(),o=t.migrationStartTime?r-t.migrationStartTime:r-t.lastUpdated,n=o>e;return n&&g("⚠️ Обнаружена зависшая миграция:",{dbName:s,ageMinutes:Math.round(o/6e4),lastUpdated:new Date(t.lastUpdated).toISOString()}),n}catch(t){return b("❌ Ошибка проверки зависших миграций:",t),!1}}async function Nt(s){try{const t=await vt(s);if(!t){g("ℹ️ Состояние БД не найдено, сброс не требуется:",s);return}t.status=bt.IDLE,t.errorMessage="Миграция была сброшена из-за зависания",delete t.migrationStartTime,delete t.migrationEndTime,delete t.migrationDurationMs,delete t.targetVersion,await te(t),g("🔄 Сброшена зависшая миграция:",s)}catch(t){throw b("❌ Ошибка сброса зависшей миграции:",t),t}}async function Xr(s){try{const t=await vt(s);return t?{totalDuration:t.migrationDurationMs||0,lastMigrationDate:t.migrationEndTime?new Date(t.migrationEndTime):null,executedMigrations:t.executedMigrations||[]}:{totalDuration:0,lastMigrationDate:null,executedMigrations:[]}}catch(t){return b("❌ Ошибка получения статистики миграций:",t),{totalDuration:0,lastMigrationDate:null,executedMigrations:[]}}}const ro=Object.freeze(Object.defineProperty({__proto__:null,canStartUpdate:Qr,detectStuckMigrations:Ct,endMigrationTimer:Jr,getAllDbStates:ae,getDbState:vt,getMigrationStats:Xr,getPreviousDbVersion:Yr,resetStuckMigration:Nt,setUpdateStatus:Zt,startMigrationTimer:Kr,updateDbState:te},Symbol.toStringTag,{value:"Module"}));class so{static async addVersionToAllRecords(t,e,r){return new Promise((o,n)=>{try{g(`🔄 Добавление версии ${r} ко всем записям в ${e}...`);const u=t.transaction([e],"readwrite"),_=u.objectStore(e);let m=0,p=0;const f=_.getAll();f.onsuccess=()=>{const y=f.result;if(m=y.length,y.length===0){g(`✅ Store ${e} пуст, версионирование не требуется`),o();return}let E=0;y.forEach(A=>{if(!A.hasOwnProperty("version")){A.version=r,E++;const T=_.put(A);T.onsuccess=()=>{p++,E--,E===0&&(g(`✅ Версионирование ${e} завершено:`,{processed:m,updated:p,version:r}),o())},T.onerror=()=>{b(`❌ Ошибка обновления записи в ${e}:`,T.error),n(T.error)}}}),E===0&&(g(`✅ Все записи в ${e} уже имеют версию`),o())},f.onerror=()=>{b(`❌ Ошибка получения записей из ${e}:`,f.error),n(f.error)},u.onerror=()=>{b(`❌ Ошибка транзакции версионирования ${e}:`,u.error),n(u.error)}}catch(u){b(`❌ Критическая ошибка версионирования ${e}:`,u),n(u)}})}static async validateRecordVersions(t,e){try{g(`🔍 Проверка версий записей, ожидаемая версия: ${e}`);const r=Array.from(t.objectStoreNames);let o=!0;const n=[];for(const u of r){const _=await this.validateStoreVersions(t,u,e);n.push(_),_.isValid||(o=!1)}return o?g("✅ Все записи имеют корректные версии"):g("⚠️ Обнаружены записи с некорректными версиями:",n),o}catch(r){return b("❌ Ошибка проверки версий записей:",r),!1}}static async validateStoreVersions(t,e,r){return new Promise((o,n)=>{try{const m=t.transaction([e],"readonly").objectStore(e).getAll();m.onsuccess=()=>{const p=m.result;let f=0,y=0;p.forEach(A=>{A.hasOwnProperty("version")?A.version<r&&y++:f++});const E=f===0&&y===0;o({storeName:e,totalRecords:p.length,recordsWithoutVersion:f,recordsWithOldVersion:y,isValid:E})},m.onerror=()=>{n(m.error)}}catch(u){n(u)}})}static async updateAllStoresVersions(t,e,r){try{const o=r||Array.from(t.objectStoreNames);g(`🔄 Массовое обновление версий до ${e} в stores:`,o);for(const n of o)await this.addVersionToAllRecords(t,n,e);g(`✅ Массовое обновление версий завершено для ${o.length} stores`)}catch(o){throw b("❌ Ошибка массового обновления версий:",o),o}}static async getVersionStats(t){try{const e=Array.from(t.objectStoreNames),r=[];let o=0,n=0;for(const u of e){const _=await this.getStoreVersionStats(t,u);r.push(_),o+=_.totalRecords,n+=_.recordsWithoutVersion}return{stores:r,summary:{totalStores:e.length,totalRecords:o,totalWithoutVersion:n}}}catch(e){return b("❌ Ошибка получения статистики версий:",e),{stores:[],summary:{totalStores:0,totalRecords:0,totalWithoutVersion:0}}}}static async getStoreVersionStats(t,e){return new Promise((r,o)=>{try{const _=t.transaction([e],"readonly").objectStore(e).getAll();_.onsuccess=()=>{const m=_.result,p={};let f=0;m.forEach(y=>{if(!y.hasOwnProperty("version"))f++;else{const E=String(y.version);p[E]=(p[E]||0)+1}}),r({name:e,totalRecords:m.length,versionsDistribution:p,recordsWithoutVersion:f})},_.onerror=()=>{o(_.error)}}catch(n){o(n)}})}static async removeVersionFromAllRecords(t,e){return new Promise((r,o)=>{try{g(`🔄 Удаление поля version из всех записей в ${e}...`);const u=t.transaction([e],"readwrite").objectStore(e),_=u.getAll();_.onsuccess=()=>{const m=_.result;let p=0,f=0;if(m.length===0){g(`✅ Store ${e} пуст`),r();return}m.forEach(y=>{if(y.hasOwnProperty("version")){delete y.version;const E=u.put(y);E.onsuccess=()=>{f++,p++,p===m.length&&(g(`✅ Удаление версий из ${e} завершено:`,{updated:f}),r())},E.onerror=()=>{o(E.error)}}else p++,p===m.length&&r()})},_.onerror=()=>{o(_.error)}}catch(n){o(n)}})}}const Zr=Object.freeze(["accounts","friends","rooms"]),oo=Object.freeze(Object.defineProperty({__proto__:null,REQUIRED_STORES:Zr},Symbol.toStringTag,{value:"Module"}));async function no(){try{Lr("🔄 Загружаем legacy реестр миграций...");const s=await G(()=>import("./LEGASY_MIGRATIONS_REGISTRY-D-EDVjfO.js"),[]);if(!s.LEGACY_MIGRATIONS_REGISTRY)throw new Error("Legacy реестр не содержит LEGACY_MIGRATIONS_REGISTRY");return g("✅ Legacy реестр миграций загружен успешно"),s.LEGACY_MIGRATIONS_REGISTRY}catch(s){throw b("❌ Ошибка загрузки legacy реестра миграций:",s),s}}async function io(s,t){if(!(s<Br))return g("🚀 Используем только основной реестр миграций (legacy не требуется)"),{...Lt};g("📦 Требуются legacy миграции, загружаем объединенный реестр:",{oldVersion:s,newVersion:t,minCurrentVersion:Br});const r=await no(),o={...r,...Lt};return g("✅ Объединенный реестр создан:",{legacyCount:Object.keys(r).length,currentCount:Object.keys(Lt).length,totalCount:Object.keys(o).length}),o}async function ce(s){return new Promise((t,e)=>{try{const r=indexedDB.open(s);r.onsuccess=()=>{const o=r.result.version;r.result.close(),t(o)},r.onerror=()=>{e(r.error)},r.onupgradeneeded=()=>{r.result.close(),t(0)}}catch(r){e(r)}})}async function ao(s,t){const e=t[s];if(!e)throw new Error(`Миграция для версии ${s} не найдена в объединенном реестре`);try{Lr(`🔄 Загружаем модуль миграции: ${e}`);const r=await Hr(Object.assign({"./combined/-1_tmp_test.ts":()=>G(()=>import("./-1_tmp_test-D7uO3Bh6.js"),__vite__mapDeps([0,1,2])),"./combined/0_initialization.ts":()=>G(()=>import("./0_initialization-DWxrVXNT.js"),__vite__mapDeps([3,1,2])),"./combined/1_accounts_friends.ts":()=>G(()=>import("./1_accounts_friends-Cy5PYJNe.js"),__vite__mapDeps([4,1,2,5])),"./combined/2_accounts_versioning.ts":()=>G(()=>import("./2_accounts_versioning-D6Y67slL.js"),__vite__mapDeps([6,1,2,5])),"./combined/3_rooms_versioning.ts":()=>G(()=>import("./3_rooms_versioning-BlV7SvmQ.js"),__vite__mapDeps([7,1,2,5])),"./combined/4_accounts_room_ids.ts":()=>G(()=>import("./4_accounts_room_ids-CPFFB_I4.js"),__vite__mapDeps([8,1,2,5])),"./combined/5_entities_version_fields.ts":()=>G(()=>import("./5_entities_version_fields-pKc-0tfL.js"),__vite__mapDeps([9,1,2,5]))}),`./combined/${e}.ts`,3);if(!r.migrationInfo||!r.migrationScheme||!r.migrationData)throw new Error(`Модуль миграции ${e} не содержит необходимые экспорты (migrationInfo, migrationScheme, migrationData)`);return g(`✅ Модуль миграции ${e} загружен успешно`),r}catch(r){throw b(`❌ Ошибка загрузки модуля миграции ${e}:`,r),r}}async function co(s,t){const e=new Map;g("🔄 Предварительная загрузка модулей миграций:",{oldVersion:s,newVersion:t});try{const r=await io(s,t);for(let o=s;o<t;o++){const n=await ao(o,r);e.set(o,n)}return g(`✅ Предварительно загружено ${e.size} модулей миграций`),e}catch(r){throw b("❌ Ошибка предварительной загрузки миграций:",r),r}}function de(){const s=Object.keys(Lt).map(Number);return s.length>0?Math.max(...s)+1:1}function lo({db:s,realOldVersion:t,newVersion:e}){g("🚨 Экстренное выполнение встроенных миграций схемы");for(let r=0;r<e;r++)r===0&&t<=0&&(g("📦 Экстренная миграция схемы 0: Создание базовых хранилищ"),s.objectStoreNames.contains("accounts")||(s.createObjectStore("accounts",{keyPath:"id"}),g("✅ Хранилище accounts создано")),s.objectStoreNames.contains("friends")||(s.createObjectStore("friends",{keyPath:"id"}),g("✅ Хранилище friends создано")),s.objectStoreNames.contains("rooms")||(s.createObjectStore("rooms",{keyPath:"id"}),g("✅ Хранилище rooms создано")),g("✅ Экстренная миграция схемы 0 завершена")),r===1&&t<=1&&(g("📦 Экстренная миграция схемы 1: Добавление индексов"),g("✅ Экстренная миграция схемы 1 завершена"));g("🔍 Дополнительная проверка наличия критических хранилищ..."),s.objectStoreNames.contains("accounts")||(s.createObjectStore("accounts",{keyPath:"id"}),g("✅ Дополнительно создано хранилище accounts")),s.objectStoreNames.contains("friends")||(s.createObjectStore("friends",{keyPath:"id"}),g("✅ Дополнительно создано хранилище friends")),s.objectStoreNames.contains("rooms")||(s.createObjectStore("rooms",{keyPath:"id"}),g("✅ Дополнительно создано хранилище rooms"))}class vo{static async checkOnAppStart(){try{g("🔍 Проверка состояния баз данных при старте...");const t=await ae();for(const e of t)await Ct(e.dbName)?(g("⚠️ Обнаружена зависшая миграция, попытка восстановления:",e.dbName),await this.recoverFromIncompleteUpdate(e.dbName)):await this.validateVersionConsistency(e.dbName);g("✅ Проверка состояния баз данных завершена")}catch(t){b("❌ Ошибка при проверке на старте приложения:",t)}}static async recoverFromIncompleteUpdate(t){try{g("🔄 Начало восстановления после некорректного завершения:",t);const e=await vt(t);if(!e){g("ℹ️ Состояние БД не найдено, восстановление не требуется:",t);return}if(!await Ct(t)){g("ℹ️ Миграция не зависла, восстановление не требуется:",t);return}const o=await ce(t);if(g("📊 Сравнение версий для восстановления:",{dbName:t,stateVersion:e.version,realDbVersion:o,targetVersion:e.targetVersion}),e.targetVersion&&o>=e.targetVersion){g("✅ Миграция была завершена успешно, обновляем статус:",t),await Nt(t);return}await Nt(t),g("🔄 Восстановление завершено, миграция сброшена:",t)}catch(e){b("❌ Ошибка при восстановлении после некорректного завершения:",e);try{await Nt(t),g("🔄 Принудительный сброс статуса выполнен:",t)}catch(r){b("❌ Критическая ошибка при принудительном сбросе:",r)}}}static async validateVersionConsistency(t){try{const e=await vt(t);if(!e)return!0;const r=await ce(t);return e.version!==r?(g("⚠️ Обнаружено рассогласование версий:",{dbName:t,stateVersion:e.version,realDbVersion:r}),r>e.version&&(e.version=r,await G(async()=>{const{updateDbState:o}=await Promise.resolve().then(()=>ro);return{updateDbState:o}},void 0).then(({updateDbState:o})=>o(e)),g("✅ Версия в состоянии обновлена до реальной:",r)),!1):!0}catch(e){return b("❌ Ошибка проверки согласованности версий:",e),!1}}static async validateDataIntegrity(t){try{g("🔍 Проверка целостности данных БД:",t.name);const{REQUIRED_STORES:e}=await G(async()=>{const{REQUIRED_STORES:n}=await Promise.resolve().then(()=>oo);return{REQUIRED_STORES:n}},void 0),r=e.filter(n=>!t.objectStoreNames.contains(n));if(r.length>0)return b("❌ Отсутствуют обязательные object stores:",r),!1;let o=!0;for(const n of e)try{const m=t.transaction([n],"readonly").objectStore(n).count();await new Promise((p,f)=>{m.onsuccess=()=>p(m.result),m.onerror=()=>f(m.error)})}catch(u){b(`❌ Ошибка доступа к store ${n}:`,u),o=!1}return o?g("✅ Проверка целостности данных пройдена:",t.name):b("❌ Обнаружены проблемы целостности данных:",t.name),o}catch(e){return b("❌ Ошибка при проверке целостности данных:",e),!1}}static async forceResetAllStuckMigrations(){try{g("🚨 Принудительный сброс всех зависших миграций...");const t=await ae();let e=0;for(const r of t)await Ct(r.dbName)&&(await Nt(r.dbName),e++);g(`✅ Принудительно сброшено миграций: ${e}`)}catch(t){b("❌ Ошибка при принудительном сбросе всех миграций:",t)}}static async getDiagnosticInfo(){try{const t=await ae(),e=[];let r=0,o=0;for(const n of t){const u=await Ct(n.dbName),_=await ce(n.dbName),m=n.version===_;u&&r++,m||o++,e.push({name:n.dbName,stateVersion:n.version,realVersion:_,isStuck:u,versionConsistent:m})}return{databases:e,summary:{total:e.length,stuck:r,inconsistent:o}}}catch(t){return b("❌ Ошибка получения диагностической информации:",t),{databases:[],summary:{total:0,stuck:0,inconsistent:0}}}}}const rt={DB_NAME:"DB_STATE_MANAGER_V2",STORE_NAME:"user_migration_states",VERSION:1};class K{static async getDatabase(){return this.dbPromise||(this.dbPromise=new Promise((t,e)=>{const r=indexedDB.open(rt.DB_NAME,rt.VERSION);r.onupgradeneeded=o=>{const n=o.target.result;if(!n.objectStoreNames.contains(rt.STORE_NAME)){const u=n.createObjectStore(rt.STORE_NAME,{keyPath:"userId"});u.createIndex("userId","userId",{unique:!0}),u.createIndex("currentVersion","currentVersion",{unique:!1})}},r.onsuccess=()=>t(r.result),r.onerror=()=>e(r.error)})),this.dbPromise}static async getUserState(t){const e=await this.getDatabase();return new Promise((r,o)=>{const _=e.transaction([rt.STORE_NAME],"readonly").objectStore(rt.STORE_NAME).get(t);_.onsuccess=()=>r(_.result||null),_.onerror=()=>o(_.error)})}static async updateUserState(t,e){const r=await this.getDatabase(),n={...await this.getUserState(t)||{userId:t,currentVersion:0,completedMigrations:[],migrationHistory:[]},...e};return new Promise((u,_)=>{const f=r.transaction([rt.STORE_NAME],"readwrite").objectStore(rt.STORE_NAME).put(n);f.onsuccess=()=>u(),f.onerror=()=>_(f.error)})}static async getUsersCompletedVersion(t){const e=await this.getDatabase();return new Promise((r,o)=>{const _=e.transaction([rt.STORE_NAME],"readonly").objectStore(rt.STORE_NAME).getAll();_.onsuccess=()=>{const p=_.result.filter(f=>f.completedMigrations.includes(t)).map(f=>f.userId);r(p)},_.onerror=()=>o(_.error)})}static async getAllSystemUserIds(){const t=await this.getDatabase();return new Promise((e,r)=>{const u=t.transaction([rt.STORE_NAME],"readonly").objectStore(rt.STORE_NAME).getAllKeys();u.onsuccess=()=>e(u.result),u.onerror=()=>r(u.error)})}}Cr(K,"dbPromise",null);class uo{static async loadMigrationModule(t){const e=Lt[t];if(!e)throw new Error(`Миграция для версии ${t} не найдена в реестре`);try{console.log(`🔄 Загружаем модуль миграции: ${e}`);const r=await Hr(Object.assign({"./migrations/combined/-1_tmp_test.ts":()=>G(()=>import("./-1_tmp_test-D7uO3Bh6.js"),__vite__mapDeps([0,1,2])),"./migrations/combined/0_initialization.ts":()=>G(()=>import("./0_initialization-DWxrVXNT.js"),__vite__mapDeps([3,1,2])),"./migrations/combined/1_accounts_friends.ts":()=>G(()=>import("./1_accounts_friends-Cy5PYJNe.js"),__vite__mapDeps([4,1,2,5])),"./migrations/combined/2_accounts_versioning.ts":()=>G(()=>import("./2_accounts_versioning-D6Y67slL.js"),__vite__mapDeps([6,1,2,5])),"./migrations/combined/3_rooms_versioning.ts":()=>G(()=>import("./3_rooms_versioning-BlV7SvmQ.js"),__vite__mapDeps([7,1,2,5])),"./migrations/combined/4_accounts_room_ids.ts":()=>G(()=>import("./4_accounts_room_ids-CPFFB_I4.js"),__vite__mapDeps([8,1,2,5])),"./migrations/combined/5_entities_version_fields.ts":()=>G(()=>import("./5_entities_version_fields-pKc-0tfL.js"),__vite__mapDeps([9,1,2,5]))}),`./migrations/combined/${e}.ts`,4);if(!r.migrationInfo)throw new Error(`Модуль миграции ${e} не содержит migrationInfo`);return console.log(`✅ Модуль миграции ${e} загружен успешно`),r}catch(r){throw console.error(`❌ Ошибка загрузки модуля миграции ${e}:`,r),r}}static async getAllMigrations(){const t=[];for(const e of Object.keys(Lt).map(Number))try{const r=await this.loadMigrationModule(e);t.push({...r,version:e+1})}catch(r){console.error(`Не удалось загрузить миграцию версии ${e}:`,r)}return t.sort((e,r)=>e.version-r.version)}static async checkUserMigrations(t){var u;const e=await K.getUserState(t),r=(e==null?void 0:e.currentVersion)||0,o=de(),n=[];for(let _=r+1;_<=o;_++)(u=e==null?void 0:e.completedMigrations)!=null&&u.includes(_)||n.push(_);return n}static async migrateUser(t){const{currentUser:e,db:r,oldVersion:o,newVersion:n}=t,u=e.id;console.log(`🔄 Начинаем миграцию пользователя ${u} с версии ${o} до ${n}`),await K.updateUserState(u,{migrationStartTime:Date.now(),currentVersion:o});try{const _=await this.checkUserMigrations(u);for(const m of _){if(m>n)break;await this.executeUserMigration(t,m);const p=await K.getUserState(u)||{userId:u,currentVersion:o,completedMigrations:[],migrationHistory:[]};await K.updateUserState(u,{currentVersion:m,completedMigrations:[...p.completedMigrations,m]})}await K.updateUserState(u,{migrationEndTime:Date.now(),currentVersion:n}),console.log(`✅ Миграция пользователя ${u} завершена успешно`)}catch(_){throw console.error(`❌ Ошибка миграции пользователя ${u}:`,_),await K.updateUserState(u,{migrationEndTime:Date.now(),errorMessage:_ instanceof Error?_.message:"Unknown error"}),_}}static async executeUserMigration(t,e){var f;const{currentUser:r}=t;console.log(`📦 Выполняем миграцию версии ${e} для пользователя ${r.id}`);const o=Date.now(),n=e-1,u=await this.loadMigrationModule(n);if(!u)throw new Error(`Миграция версии ${e} не найдена`);u.migrationData&&await u.migrationData(t);const _=Date.now(),m=_-o;console.log(`✅ Миграция версии ${e} для пользователя ${r.id} завершена за ${m}мс`);const p=await K.getUserState(r.id);if(p){const y={version:e,fileName:((f=u.migrationInfo)==null?void 0:f.fileName)||`migration_${e}`,schemaDuration:0,dataDuration:m,startTime:o,endTime:_};await K.updateUserState(r.id,{migrationHistory:[...p.migrationHistory,y]})}}static async allUsersCompletedVersion(t,e){const r=await this.scanAllUserIds(t),o=new Set(await K.getUsersCompletedVersion(e));return r.size===o.size&&[...r].every(n=>o.has(n))}static async scanAllUserIds(t){return new Promise((e,r)=>{const u=t.transaction(["accounts"],"readonly").objectStore("accounts").getAll();u.onsuccess=()=>{const _=u.result,m=new Set(_.map(p=>p.id));console.log(`📊 Найдено ${m.size} пользователей в системе:`,[...m]),e(m)},u.onerror=()=>{console.error("❌ Ошибка сканирования accounts для получения userIds:",u.error),r(u.error)}})}static async getUserMigrationStats(t){return await K.getUserState(t)}}class jt{static async scanAllUserIds(t){return new Promise((e,r)=>{const u=t.transaction(["accounts"],"readonly").objectStore("accounts").getAll();u.onsuccess=()=>{const _=u.result,m=new Set(_.map(p=>p.id));e(m)},u.onerror=()=>r(u.error)})}static async allUsersReady(t,e){try{const r=await this.scanAllUserIds(t),o=new Set(await K.getUsersCompletedVersion(e)),n=r.size===o.size&&[...r].every(u=>o.has(u));return console.log(`🔍 Проверка готовности всех пользователей для версии ${e}:`),console.log(`   - Всего пользователей в системе: ${r.size}`),console.log(`   - Завершивших миграцию: ${o.size}`),console.log(`   - Результат: ${n?"✅ Все готовы":"⏳ Ожидание"}`),n}catch(r){return console.error("❌ Ошибка при проверке готовности пользователей:",r),!1}}static async getPendingUsers(t,e){const r=await this.scanAllUserIds(t),o=new Set(await K.getUsersCompletedVersion(e));return[...r].filter(n=>!o.has(n))}static async getUserReadinessStats(t,e){try{const r=await this.scanAllUserIds(t),o=new Set(await K.getUsersCompletedVersion(e)),n=[...r].filter(f=>!o.has(f)),u=r.size,_=o.size,m=u>0?Math.round(_/u*100):100,p=u===_&&u>0;return{totalUsers:u,completedUsers:_,pendingUsers:n,completionPercentage:m,isReady:p}}catch(r){return console.error("❌ Ошибка получения статистики готовности пользователей:",r),{totalUsers:0,completedUsers:0,pendingUsers:[],completionPercentage:0,isReady:!1}}}}let H=null,dt=null,z=null,gt=!1,mt=0;const _o=5*60*1e3;class ft{static async getConnection(){if(await ft.checkAndRecoverFromFailures(),H&&!gt)return H;if(dt)return dt;dt=ft.createNewConnection();try{const t=await dt;return H=t,ft.setupConnectionHandlers(t),t}catch(t){throw dt=null,t}}static async checkAndRecoverFromFailures(){try{const t=le.MAIN_LES_STORE_V1;await Ct(t)&&(g("🔧 Обнаружена зависшая миграция, выполняем восстановление..."),await ft.resetStuckMigration(t)),await vo.checkOnAppStart()}catch(t){b("❌ Ошибка при проверке состояния БД:",t)}}static async resetStuckMigration(t){try{await Nt(t),H&&(H.close(),H=null),dt=null,g("✅ Заблокированная миграция сброшена")}catch(e){throw b("❌ Ошибка сброса заблокированной миграции:",e),e}}static async createNewConnection(){return new Promise(async(t,e)=>{try{const r=le.MAIN_LES_STORE_V1;if(!await Qr(r))throw new Error("База данных уже обновляется. Дождитесь завершения текущего обновления.");const n=await ce(r),u=await Yr(r),_=de();g("📊 Информация о версиях БД:",{currentVersion:n,previousStateVersion:u,targetVersion:_,needsMigration:n<_});const m=Math.max(n,u);m<_&&(await Zt(r,bt.UPDATE_STARTED,m,_),await Kr(r,m,_));let p=new Map;if(m<_){const E=Date.now();g("🔄 Предварительная загрузка модулей миграций c версии:",m),p=await co(m,_);const A=Date.now()-E;g(`✅ Предзагрузка завершена за ${A}мс`)}let f=indexedDB.open(r,_),y=n;f.onupgradeneeded=function(E){const A=f.result,T=E.oldVersion??0,st=E.newVersion??_;if(y=T,g("🔄 IndexDB onupgradeneeded:",{oldVersion:T,newVersion:st,existingStores:Array.from(A.objectStoreNames),detectedCurrentVersion:n,usingRealOldVersion:T}),T!==n&&(g("⚠️ Обнаружена рассинхронизация версий, сбрасываем предзагруженные миграции:",{detectedVersion:n,realVersion:T}),p=new Map),T<st)try{p.size===0?lo({db:A,realOldVersion:T,newVersion:st}):ft.runSchemaMigrationsWithTiming(A,T,st,p,r)}catch(J){throw b("Критическая ошибка во время миграции схемы IndexedDB:",J),J}},f.onerror=async function(){var E;b("IndexDB openRequest error:",f.error),await Zt(r,bt.UPDATE_FAILED,void 0,void 0,(E=f.error)==null?void 0:E.message),e(f.error)},f.onsuccess=async function(){let E=f.result;g("✅ IndexDB соединение установлено, версия БД:",E.version);try{const A=Zr.filter(T=>!E.objectStoreNames.contains(T));if(A.length>0){b("🚨 Обнаружены отсутствующие object stores:",A),g("🔄 Принудительное пересоздание базы данных..."),E.close();const T=indexedDB.deleteDatabase(r);T.onsuccess=()=>{g("✅ Поврежденная база удалена"),setTimeout(()=>{g("🔄 Перезапуск создания базы..."),ft.createNewConnection().then(t).catch(e)},100)},T.onerror=()=>{b("❌ Ошибка удаления поврежденной базы:",T.error),e(T.error)};return}g("✅ Миграции схемы выполнены, БД готова к использованию"),g("ℹ️ Миграции данных будут выполнены при авторизации пользователей"),await Zt(r,bt.UPDATE_SUCCESS,E.version),await Jr(r),t(E)}catch(A){b("Ошибка при выполнении миграций данных:",A);const T=A instanceof Error?A.message:String(A);await Zt(r,bt.UPDATE_FAILED,void 0,void 0,T),E.close(),e(A)}},f.onblocked=function(){Ys("Database connection blocked"),e(new Error("Database connection blocked"))}}catch(r){b("Ошибка при инициализации IndexDB:",r),e(r)}})}static runSchemaMigrationsWithTiming(t,e,r,o,n){var u,_;g("🚀 Начинаем выполнение миграций схемы IndexedDB:",{oldVersion:e,newVersion:r,existingStores:Array.from(t.objectStoreNames)});try{for(let m=e;m<r;m++){const p=m+1;g(`📋 Выполняем миграцию схемы с версии ${m} до ${p}`);const f=o.get(m);if(!f)throw new Error(`Предварительно загруженная миграция для версии ${m} не найдена`);const y=Date.now();f.migrationScheme(t);const E=Date.now()-y;g(`✅ Миграция схемы ${f.migrationInfo.fileName} выполнена за ${E}мс`);try{f&&typeof f=="object"&&Object.defineProperty(f,"_schemaDuration",{value:E,writable:!0,configurable:!0})}catch(A){const T=A instanceof Error?A.message:String(A);console.warn(`Cannot set _schemaDuration on migration module ${(u=f.migrationInfo)==null?void 0:u.fileName}:`,T),g(`⚠️ Время выполнения схемы ${(_=f.migrationInfo)==null?void 0:_.fileName}: ${E}мс (сохранено только в логах)`)}}g("🏁 Все миграции схемы IndexedDB выполнены успешно. Финальные хранилища:",Array.from(t.objectStoreNames))}catch(m){throw b("❌ Критическая ошибка во время выполнения миграций схемы IndexedDB:",m),m}}static setupConnectionHandlers(t){t.onversionchange=function(){g("🔄 Принудительное закрытие соединения IndexDB (version change)"),z&&(clearTimeout(z),z=null),gt=!0,mt=0,t.close(),H=null,dt=null,gt=!1},t.onclose=function(){g("🔒 Соединение IndexDB закрыто"),z&&(clearTimeout(z),z=null),mt=0,H=null,dt=null,gt=!1}}static incrementActiveRequests(){mt++,z&&(clearTimeout(z),z=null)}static decrementActiveRequests(){mt=Math.max(0,mt-1),mt===0&&ft.startCloseTimer()}static startCloseTimer(){z&&clearTimeout(z),z=setTimeout(()=>{H&&!gt&&mt===0&&(g(`🔒 Закрытие соединения IndexDB по таймауту (5 минут после завершения всех запросов). Активных запросов: ${mt}`),gt=!0,H.close(),H=null,dt=null,z=null,gt=!1)},_o)}static forceCloseConnection(){H&&(g("🔒 Принудительное закрытие соединения IndexDB"),z&&(clearTimeout(z),z=null),gt=!0,mt=0,H.close(),H=null,dt=null,gt=!1)}static getConnectionInfo(){return{hasConnection:!!H,isClosing:gt,activeRequestsCount:mt,hasCloseTimer:!!z,connectionPromiseActive:!!dt}}static async checkMigrationReadiness(){try{const t=await this.getConnection(),e=de(),r=await jt.allUsersReady(t,e),o=await jt.getPendingUsers(t,e);return{isReady:r,pendingUsers:o,systemStatus:r?"ready":o.length>0?"partial":"blocked"}}catch(t){return console.error("❌ Ошибка проверки готовности миграций:",t),{isReady:!1,pendingUsers:[],systemStatus:"blocked"}}}static async getUsersMigrationSummary(){try{const t=await this.getConnection(),e=de(),r=await jt.getUserReadinessStats(t,e),o=await jt.scanAllUserIds(t),n=[];for(const u of o){const _=await uo.getUserMigrationStats(u);n.push({userId:u,currentVersion:(_==null?void 0:_.currentVersion)||0,completedMigrations:(_==null?void 0:_.completedMigrations)||[],isReady:(_==null?void 0:_.currentVersion)===e})}return{totalUsers:r.totalUsers,completedUsers:r.completedUsers,pendingUsers:r.pendingUsers,completionPercentage:r.completionPercentage,userDetails:n}}catch(t){return console.error("❌ Ошибка получения статистики пользователей:",t),{totalUsers:0,completedUsers:0,pendingUsers:[],completionPercentage:0,userDetails:[]}}}}const lt={accounts_by_id:{},friends_by_id:{},rooms_by_id:{}};var go=O('<span class="status-text svelte-4jntj4"> </span>'),mo=O('<div><span class="status-dot svelte-4jntj4"></span> <!></div>');function fo(s,t){let e=Ye(t,"size",3,"md"),r=Ye(t,"animated",3,!0),o=Ye(t,"className",3,"");const n=()=>{let p=["status-indicator",`status-${t.status}`,`size-${e()}`];return r()&&p.push("animated"),o()&&p.push(o()),p.join(" ")};var u=mo(),_=d(c(u),2);{var m=p=>{var f=go(),y=c(f);R(()=>S(y,t.text)),$(p,f)};W(_,p=>{t.text&&p(m)})}R(p=>a(u,1,p,"svelte-4jntj4"),[()=>v(n())]),$(s,u)}var ho=O('<div><div class="theme-preview svelte-gyqbuc"><span class="theme-icon svelte-gyqbuc"> </span> <div class="theme-info svelte-gyqbuc"><div class="theme-name svelte-gyqbuc"> </div> <div class="theme-description svelte-gyqbuc"> </div></div></div> <div class="theme-actions svelte-gyqbuc"><!></div></div>'),po=O('<div class="theme-selector svelte-gyqbuc"><div class="themes-grid svelte-gyqbuc"></div></div>');function So(s,t){qr(t,!1);const[e,r]=Gr(),o=()=>Xe(Fr,"$theme",e),n={cyberpunk:"🌆",watchdogs:"🔍",pixel:"🎮",terminal:"💻",arabic:"🕌"},u={cyberpunk:"Темная киберпанк тема с неоновыми акцентами",watchdogs:"Стиль в духе хакерских фильмов",pixel:"Ретро пиксельная графика",terminal:"Классический терминальный интерфейс",arabic:"Традиционный арабский стиль"};zr();var _=po(),m=c(_);kt(m,5,()=>Ks,Pt,(p,f)=>{var y=ho();let E;var A=c(y),T=c(A),st=c(T),J=d(T,2),It=c(J),Et=c(It),D=d(It,2),ve=c(D),ue=d(A,2),_e=c(ue);const ge=tt(()=>o()===l(f)?"primary":"outline"),me=tt(()=>o()===l(f));Y(_e,{get variant(){return l(ge)},size:"sm",onclick:()=>Qs(l(f)),get disabled(){return l(me)},children:(qt,ee)=>{var re=B();R(()=>S(re,o()===l(f)?"✓ Активна":"Применить")),$(qt,re)},$$slots:{default:!0}}),R((qt,ee)=>{E=a(y,1,"theme-option svelte-gyqbuc",null,E,qt),S(st,n[l(f)]||"🎨"),S(Et,ee),S(ve,u[l(f)])},[()=>({active:o()===l(f)}),()=>l(f).toUpperCase()],tt),$(p,y)}),$(s,_),Wr(),r()}async function ts(){try{if("databases"in indexedDB){const s=await indexedDB.databases();console.log(`Found ${s.length} IndexedDB database(s) to delete`);for(const t of s)if(t.name)try{const e=indexedDB.deleteDatabase(t.name);await new Promise((r,o)=>{e.onsuccess=()=>{console.log(`✓ IndexedDB database deleted: ${t.name}`),r()},e.onerror=n=>{console.error(`Error deleting IndexedDB database: ${t.name}`,n),o(new Error(`Failed to delete database: ${t.name}`))},e.onblocked=()=>{console.warn(`IndexedDB database deletion blocked: ${t.name}`),r()}})}catch(e){console.error(`Error deleting IndexedDB database: ${t.name}`,e)}}else{console.log("Modern databases() API not available, using fallback method");const s=["store_v3","store_v2","store_v1","store"];for(const t of s)try{const e=indexedDB.deleteDatabase(t);await new Promise((r,o)=>{e.onsuccess=()=>{console.log(`✓ IndexedDB database deleted: ${t}`),r()},e.onerror=()=>{console.log(`IndexedDB database not found or already deleted: ${t}`),r()},e.onblocked=()=>{console.warn(`IndexedDB database deletion blocked: ${t}`),r()}})}catch(e){console.error(`Error deleting IndexedDB database: ${t}`,e)}}console.log("✓ IndexedDB databases cleared")}catch(s){throw console.error("Error clearing IndexedDB databases:",s),s}}async function yo(){try{if(localStorage.clear(),console.log("✓ localStorage cleared"),sessionStorage.clear(),console.log("✓ sessionStorage cleared"),"serviceWorker"in navigator){const s=await navigator.serviceWorker.getRegistrations();if(s.length>0){console.log(`Found ${s.length} service worker(s) to unregister`);for(const t of s)try{await t.unregister(),console.log("✓ Service worker unregistered:",t.scope)}catch(e){console.error("Error unregistering service worker:",e)}}else console.log("No service workers found")}else console.log("Service Workers not supported in this browser");if("indexedDB"in window)try{await ts()}catch(s){console.error("Error clearing IndexedDB:",s)}if("caches"in window)try{const s=await caches.keys();if(s.length>0){console.log(`Found ${s.length} cache(s) to delete`);for(const t of s)await caches.delete(t),console.log("✓ Cache deleted:",t)}else console.log("No caches found")}catch(s){console.error("Error clearing caches:",s)}console.log("🧹 App data clearing completed"),alert("Все данные приложения очищены! Страница будет перезагружена."),window.location.reload()}catch(s){console.error("Error during app data clearing:",s),alert("Ошибка при очистке данных: "+(s instanceof Error?s.message:String(s)))}}async function wo(){try{if("serviceWorker"in navigator){const s=await navigator.serviceWorker.getRegistrations();if(s.length>0){console.log(`Found ${s.length} service worker(s) to unregister`);for(const t of s)try{await t.unregister(),console.log("✓ Service worker unregistered:",t.scope)}catch(e){console.error("Error unregistering service worker:",e)}alert("Service Workers очищены! Страница будет перезагружена."),window.location.reload()}else alert("Service Workers не найдены")}else alert("Service Workers не поддерживаются в этом браузере")}catch(s){console.error("Error clearing service workers:",s),alert("Ошибка при очистке Service Workers: "+(s instanceof Error?s.message:String(s)))}}function $o(){try{localStorage.clear(),sessionStorage.clear(),console.log("✓ Storage cleared"),alert("Локальное хранилище очищено!")}catch(s){console.error("Error clearing storage:",s),alert("Ошибка при очистке хранилища: "+(s instanceof Error?s.message:String(s)))}}async function bo(){try{"indexedDB"in window?(await ts(),alert("IndexedDB базы данных очищены!")):alert("IndexedDB не поддерживается в этом браузере")}catch(s){console.error("Error clearing IndexedDB:",s),alert("Ошибка при очистке IndexedDB: "+(s instanceof Error?s.message:String(s)))}}const Bt={DB_NAME:"ENTITY_VERSIONS_V1",VERSION:1,STORES:{ENTITY_VERSIONS:"entity_versions"}};function Io(s,t){return`${s}_${t}`}function Eo(){return new Promise((s,t)=>{const e=indexedDB.open(Bt.DB_NAME,Bt.VERSION);e.onupgradeneeded=r=>{const o=e.result;o.objectStoreNames.contains(Bt.STORES.ENTITY_VERSIONS)||(o.createObjectStore(Bt.STORES.ENTITY_VERSIONS,{keyPath:"id"}).createIndex("userId","userId",{unique:!1}),g("✅ Создано хранилище entity_versions"))},e.onsuccess=()=>{s(e.result)},e.onerror=()=>{t(e.error)}})}async function Je(s,t){try{const o=(await Eo()).transaction([Bt.STORES.ENTITY_VERSIONS],"readonly").objectStore(Bt.STORES.ENTITY_VERSIONS),n=Io(s,t),u=o.get(n);return new Promise((_,m)=>{u.onsuccess=()=>{const p=u.result;_((p==null?void 0:p.lastVersion)||0)},u.onerror=()=>{m(u.error)}})}catch(e){return b("❌ Ошибка получения версии сущности:",{userId:s,entityType:t,error:e}),0}}async function Do(s){try{const[t,e,r]=await Promise.all([Je(s,"accounts"),Je(s,"rooms"),Je(s,"friends")]);return{accounts:t,rooms:e,friends:r}}catch(t){return b("❌ Ошибка получения сводки версий:",{userId:s,error:t}),{accounts:0,rooms:0,friends:0}}}function Ao(){try{const s=new Map;for(const o of Object.values(lt.accounts_by_id)){const n=o.version||0;s.set(n,(s.get(n)||0)+1)}const t=new Map;for(const o of Object.values(lt.rooms_by_id)){const n=o.version||0;t.set(n,(t.get(n)||0)+1)}const e=new Map;for(const o of Object.values(lt.friends_by_id)){const n=o.version||0;e.set(n,(e.get(n)||0)+1)}const r={accounts:Array.from(s.entries()).map(([o,n])=>({version:o,count:n})).sort((o,n)=>o.version-n.version),rooms:Array.from(t.entries()).map(([o,n])=>({version:o,count:n})).sort((o,n)=>o.version-n.version),friends:Array.from(e.entries()).map(([o,n])=>({version:o,count:n})).sort((o,n)=>o.version-n.version)};return g("📊 Анализ версий сущностей завершен:",{accountsTotal:Object.keys(lt.accounts_by_id).length,roomsTotal:Object.keys(lt.rooms_by_id).length,friendsTotal:Object.keys(lt.friends_by_id).length,result:r}),r}catch(s){return b("❌ Ошибка анализа версий сущностей:",s),{accounts:[],rooms:[],friends:[]}}}const To="_settingsContainer_1p21f_1",Ro="_settingsGrid_1p21f_10",xo="_settingSection_1p21f_16",Mo="_sectionTitle_1p21f_22",Vo="_settingItem_1p21f_33",Oo="_settingHeader_1p21f_50",Uo="_settingName_1p21f_57",ko="_settingIcon_1p21f_66",Po="_settingDescription_1p21f_70",Co="_settingActions_1p21f_77",No="_statusIndicator_1p21f_99",jo="_statusActive_1p21f_110",Bo="_themeSelector_1p21f_122",Lo="_clearOptions_1p21f_126",qo="_versionResults_1p21f_180",zo="_userList_1p21f_187",Wo="_userItem_1p21f_193",Go="_statsGrid_1p21f_199",Fo="_errorMessage_1p21f_206",Ho="_authRequired_1p21f_214",Yo="_authMessage_1p21f_222",Qo="_authDescription_1p21f_228",Ko="_authActions_1p21f_233",Jo="_emptyMessage_1p21f_238",Xo="_migrationList_1p21f_245",Zo="_migrationItem_1p21f_254",tn="_migrationHeader_1p21f_267",en="_migrationDetails_1p21f_274",i={settingsContainer:To,settingsGrid:Ro,settingSection:xo,sectionTitle:Mo,settingItem:Vo,settingHeader:Oo,settingName:Uo,settingIcon:ko,settingDescription:Po,settingActions:Co,statusIndicator:No,statusActive:jo,themeSelector:Bo,clearOptions:Lo,versionResults:qo,userList:zo,userItem:Wo,statsGrid:Go,errorMessage:Fo,authRequired:Ho,authMessage:Yo,authDescription:Qo,authActions:Ko,emptyMessage:Jo,migrationList:Xo,migrationItem:Zo,migrationHeader:tn,migrationDetails:en};var rn=O("<div><!> <!> <!> <!></div>"),sn=O("<div><div><strong> </strong></div> <div><span> </span> <span> </span> <span> </span> <span> </span></div></div>"),on=O("<h4>🔍 Детализация по миграциям</h4> <div></div>",1),nn=O("<div><h4>📋 Общая информация</h4> <div><div><strong>Общее время:</strong> </div> <div><strong>Последняя миграция:</strong> </div> <div><strong>Выполнено миграций:</strong> </div></div> <!></div>"),an=O("<div> </div>"),cn=O(`<div><div>🔐 Для просмотра версий необходимо авторизоваться</div> <div>Данные версий зашифрованы и требуют авторизации для
                            доступа.</div> <div><!></div></div>`),dn=O("<div>База данных пуста</div>"),ln=O("<div> </div>"),vn=O("<div><h4>👥 Пользователи в системе:</h4> <div><!></div> <h4>📈 Статистика пользователей:</h4> <div><div> </div> <div> </div> <div> </div></div> <h4>👥 Статистика Friends (в памяти):</h4> <div><div> </div> <div> </div> <div> </div> <div> </div></div> <h4>🏠 Статистика Rooms (в памяти):</h4> <div><div> </div> <div> </div> <div> </div> <div> </div></div></div>"),un=O("<div><div>Для проверки версий сущностей требуется авторизация</div> <div>Авторизуйтесь для просмотра версий ваших данных</div> <div><!></div></div>"),_n=O("<div>Нет записей аккаунтов</div>"),gn=O("<div><strong> </strong> <!></div>"),mn=O("<div>Нет записей комнат</div>"),fn=O("<div><strong> </strong> <!></div>"),hn=O("<div>Нет записей друзей</div>"),pn=O("<div><strong> </strong> <!></div>"),Sn=O("<h4>📈 Детальная статистика по версиям</h4> <div><h5>🏠 Accounts - распределение по версиям:</h5> <div><!></div></div> <div><h5>💬 Rooms - распределение по версиям:</h5> <div><!></div></div> <div><h5>👥 Friends - распределение по версиям:</h5> <div><!></div></div>",1),yn=O("<div><h4>📊 Статистика версий сущностей</h4> <h4>🔢 Количество сущностей</h4> <div><div><strong>🏠 Accounts:</strong> </div> <div><strong>💬 Rooms:</strong> </div> <div><strong>👥 Friends:</strong> </div></div> <h4>📝 Версии сущностей</h4> <div><div><strong>🏠 Accounts version:</strong> </div> <div><strong>💬 Rooms version:</strong> </div> <div><strong>👥 Friends version:</strong> </div></div> <h4>✅ Записи с версиями</h4> <div><div><strong>🏠 Accounts с версиями:</strong> </div> <div><strong>💬 Rooms с версиями:</strong> </div> <div><strong>👥 Friends с версиями:</strong> </div></div> <!></div>"),wn=O(`<div><div><div><h2>🔧 Системные настройки</h2> <div><div><div><span>🎨</span> Темы интерфейса</div> <!></div> <div>Выберите тему интерфейса для персонализации внешнего вида
                    приложения. Изменения применяются мгновенно.</div> <div><!></div></div> <div><div><div><span>⚡</span> Статус системы</div> <span> </span></div> <div>Система работает в штатном режиме. Все модули функционируют
                    корректно.</div> <div><!></div></div></div> <div><h2>💾 Управление данными</h2> <div><div><div><span>💽</span> Очистка данных</div> <span>● ДОСТУПНО</span></div> <div>Управление локальными данными приложения, включая настройки,
                    кэш и пользовательские данные.</div> <div><!></div> <!></div></div> <div><h2>🗂️ Управление вкладками</h2> <div><div><div><span>📊</span> Мониторинг активных вкладок</div> <span> </span></div> <div>Отслеживание количества активных вкладок приложения в
                    реальном времени через SharedWorker. Счетчик автоматически
                    обновляется при открытии/закрытии вкладок.</div></div> <div><div><div><span>🚪</span> Закрытие вкладок</div> <span>● ДОСТУПНО</span></div> <div>Управление открытыми вкладками приложения через broadcast
                    сообщения. Позволяет закрывать вкладки синхронно через все
                    экземпляры приложения.</div> <div><!> <!></div> <div style="margin-top: 8px; font-size: 0.9em; color: var(--color-text-secondary);">⚠️ "Закрыть остальные вкладки" - закроет все вкладки кроме
                    текущей<br/> ⚠️ "Закрыть все вкладки" - закроет включая текущую вкладку</div></div></div> <div><h2>⏱️ Статистика миграций</h2> <div><div><div><span>📊</span> Время выполнения миграций</div> <span>● ДОСТУПНО</span></div> <div>Детальная информация о времени выполнения миграций базы
                    данных. Показывает продолжительность каждой миграции и общее
                    время.</div> <div><!></div> <!></div></div> <div><h2>🔍 Диагностика версий</h2> <div><div><div><span>📊</span> Проверка версий сущностей</div> <span>● ДОСТУПНО</span></div> <div>Проверка версий всех пользователей и сущностей в базе
                    данных. Показывает ID пользователей и их текущие версии.</div> <div><!></div> <!> <!> <!></div></div> <div><h2>🔢 ВЕРСИИ СУЩНОСТЕЙ</h2> <div><div><div><span>🗂️</span> <span>Версии сущностей</span></div></div> <div>Отображает текущие версии сущностей для отладки и
                    мониторинга миграций</div> <div><!></div> <!> <!></div></div> <div><h2>🧭 Навигация</h2> <div><div><div><span>🏠</span> Главная страница</div></div> <div>Вернуться на главную страницу приложения.</div> <div><!></div></div></div></div></div>`);function $n(s,t){qr(t,!1);const[e,r]=Gr(),o=()=>Xe(Zs,"$appAuthStore",e),n=()=>Xe(Fr,"$theme",e);let u="operational",_=Z(!1),m=Z(0),p=Z(!1),f=Z(!1),y=Z(null),E=Z(null),A=Z(!1),T=Z(!1),st=Z(!1),J=Z(null),It=Z(!1),Et=Z(!1),D=Z(null);Js(()=>jr.tabs.subscribeActiveTabsCount(I=>{V(m,I)}));function ve(){V(_,!l(_))}async function ue(){confirm("Вы уверены, что хотите очистить ВСЕ данные приложения? Это действие нельзя отменить.")&&await yo()}async function _e(){confirm("Очистить только Service Workers?")&&await wo()}function ge(){confirm("Очистить только локальное хранилище?")&&$o()}async function me(){confirm("Очистить только IndexedDB базы данных?")&&await bo()}const qt=()=>{alert("Диагностика системы будет реализована в следующих версиях")};function ee(){confirm("Закрыть все остальные вкладки приложения? Текущая вкладка останется открытой.")&&Nr.closeAllOtherTabs()}function re(){confirm("Закрыть ВСЕ вкладки приложения включая текущую? Это действие закроет все открытые вкладки приложения.")&&Nr.closeAllTabsIncludingCurrent()}async function es(){V(f,!0),V(E,null),V(y,null),V(A,!1);try{const h=o();if(Object.keys(h.byId).length===0){V(A,!0),V(p,!0);return}const w=await ft.getConnection(),M=await jt.getUserReadinessStats(w,2),U=await so.getVersionStats(w),L=await jt.scanAllUserIds(w),x=Object.values(lt.friends_by_id),j=Object.values(lt.rooms_by_id),k={total:x.length,withVersion:x.filter(C=>C.version!==void 0).length,withoutVersion:x.filter(C=>C.version===void 0).length},Q={total:j.length,withVersion:j.filter(C=>C.version!==void 0).length,withoutVersion:j.filter(C=>C.version===void 0).length};V(y,{userStats:M,versionStats:U,allUserIds:Array.from(L),entitiesStats:{friends:k,rooms:Q}}),V(p,!0)}catch(h){V(E,h instanceof Error?h.message:String(h))}finally{V(f,!1)}}async function rs(){V(st,!0);try{const h=await Xr(le.MAIN_LES_STORE_V1);V(J,h),V(T,!0)}catch(h){console.error("Ошибка получения статистики миграций:",h),alert("Не удалось загрузить статистику миграций")}finally{V(st,!1)}}async function ss(){V(Et,!0);try{const h=o(),I=Object.keys(h.byId);if(I.length===0){V(A,!0),V(It,!0);return}const w=I[0];V(A,!1),console.log("📊 Загрузка данных в back_store..."),await jr.friends.getList(),await Xs.fetch({path:"GET_ROOMS"}),console.log("✅ Данные загружены в back_store");const M=Ao(),U=await Do(w),L=Object.keys(lt.accounts_by_id).length,x=Object.keys(lt.rooms_by_id).length,j=Object.keys(lt.friends_by_id).length,k=M.accounts.filter(P=>P.version>0).reduce((P,F)=>P+F.count,0),Q=M.rooms.filter(P=>P.version>0).reduce((P,F)=>P+F.count,0),C=M.friends.filter(P=>P.version>0).reduce((P,F)=>P+F.count,0);V(D,{accounts:U.accounts,rooms:U.rooms,friends:U.friends,accountsCount:L,roomsCount:x,friendsCount:j,accountsWithVersion:k,roomsWithVersion:Q,friendsWithVersion:C,versionsAnalysis:M}),V(It,!0)}catch(h){console.error("Ошибка получения версий сущностей:",h),alert("Не удалось загрузить версии сущностей")}finally{V(Et,!1)}}function se(h){return h<1e3?`${h}мс`:h<6e4?`${(h/1e3).toFixed(1)}с`:`${(h/6e4).toFixed(1)}мин`}zr();var fe=wn(),tr=c(fe),he=c(tr),er=c(he),pe=d(er,2),Se=c(pe),ye=c(Se),os=c(ye),ns=d(ye,2);const is=tt(()=>n().toUpperCase()),as=tt(()=>`${i.statusIndicator} ${i.statusActive}`);fo(ns,{status:"active",get text(){return l(is)},get className(){return l(as)}});var rr=d(Se,2),sr=d(rr,2),cs=c(sr);So(cs,{});var or=d(pe,2),we=c(or),$e=c(we),ds=c($e),nr=d($e,2),ls=c(nr),ir=d(we,2),ar=d(ir,2),vs=c(ar);Y(vs,{variant:"outline",size:"sm",onclick:qt,children:(h,I)=>{var w=B("🔍 Диагностика");$(h,w)},$$slots:{default:!0}});var be=d(he,2),cr=c(be),dr=d(cr,2),Ie=c(dr),Ee=c(Ie),us=c(Ee),_s=d(Ee,2),lr=d(Ie,2),De=d(lr,2),gs=c(De);Y(gs,{variant:"outline",size:"sm",onclick:ve,children:(h,I)=>{var w=B();R(()=>S(w,l(_)?"Скрыть опции":"Показать опции очистки")),$(h,w)},$$slots:{default:!0}});var ms=d(De,2);{var fs=h=>{var I=rn(),w=c(I);Y(w,{variant:"danger",size:"sm",onclick:ue,children:(x,j)=>{var k=B("🗑️ Очистить все данные");$(x,k)},$$slots:{default:!0}});var M=d(w,2);Y(M,{variant:"outline",size:"sm",onclick:_e,children:(x,j)=>{var k=B("🔧 Очистить Service Workers");$(x,k)},$$slots:{default:!0}});var U=d(M,2);Y(U,{variant:"outline",size:"sm",onclick:ge,children:(x,j)=>{var k=B("💾 Очистить локальное хранилище");$(x,k)},$$slots:{default:!0}});var L=d(U,2);Y(L,{variant:"outline",size:"sm",onclick:me,children:(x,j)=>{var k=B("🗄️ Очистить IndexedDB");$(x,k)},$$slots:{default:!0}}),R(()=>a(I,1,v(i.clearOptions))),$(h,I)};W(ms,h=>{l(_)&&h(fs)})}var Ae=d(be,2),vr=c(Ae),Te=d(vr,2),Re=c(Te),xe=c(Re),hs=c(xe),ur=d(xe,2),ps=c(ur),Ss=d(Re,2),_r=d(Te,2),Me=c(_r),Ve=c(Me),ys=c(Ve),ws=d(Ve,2),gr=d(Me,2),Oe=d(gr,2),mr=c(Oe);Y(mr,{variant:"outline",size:"sm",onclick:ee,children:(h,I)=>{var w=B("🗂️ Закрыть остальные вкладки");$(h,w)},$$slots:{default:!0}});var $s=d(mr,2);Y($s,{variant:"danger",size:"sm",onclick:re,children:(h,I)=>{var w=B("❌ Закрыть все вкладки");$(h,w)},$$slots:{default:!0}});var bs=d(Oe,2),Ue=d(Ae,2),fr=c(Ue),hr=d(fr,2),ke=c(hr),Pe=c(ke),Is=c(Pe),Es=d(Pe,2),pr=d(ke,2),Ce=d(pr,2),Ds=c(Ce);Y(Ds,{variant:"outline",size:"sm",onclick:rs,get disabled(){return l(st)},children:(h,I)=>{var w=B();R(()=>S(w,l(st)?"🔄 Загрузка...":"📈 Показать статистику")),$(h,w)},$$slots:{default:!0}});var As=d(Ce,2);{var Ts=h=>{var I=nn(),w=d(c(I),2),M=c(w),U=d(c(M)),L=d(M,2),x=d(c(L)),j=d(L,2),k=d(c(j)),Q=d(w,2);{var C=P=>{var F=on(),ht=d(Ut(F),2);kt(ht,5,()=>l(J).executedMigrations,Pt,(At,ot)=>{var ut=sn(),pt=c(ut),Tt=c(pt),Rt=c(Tt),xt=d(pt,2),Mt=c(xt),Vt=c(Mt),Dt=d(Mt,2),zt=c(Dt),nt=d(Dt,2),St=c(nt),_t=d(nt,2),Ot=c(_t);R((Wt,Gt,et,X)=>{a(ut,1,v(i.migrationItem)),a(pt,1,v(i.migrationHeader)),S(Rt,`v${l(ot).version??""} - ${l(ot).fileName??""}`),a(xt,1,v(i.migrationDetails)),S(Vt,`Схема: ${Wt??""}`),S(zt,`Данные: ${Gt??""}`),S(St,`Общее: ${et??""}`),S(Ot,`Завершена: ${X??""}`)},[()=>se(l(ot).schemaDuration),()=>se(l(ot).dataDuration),()=>se(l(ot).schemaDuration+l(ot).dataDuration),()=>new Date(l(ot).endTime).toLocaleTimeString()],tt),$(At,ut)}),R(()=>a(ht,1,v(i.migrationList))),$(P,F)};W(Q,P=>{l(J).executedMigrations.length>0&&P(C)})}R((P,F)=>{a(I,1,v(i.versionResults)),a(w,1,v(i.statsGrid)),S(U,` ${P??""}`),S(x,` ${F??""}`),S(k,` ${l(J).executedMigrations.length??""}`)},[()=>se(l(J).totalDuration),()=>l(J).lastMigrationDate?l(J).lastMigrationDate.toLocaleString():"Не выполнялась"],tt),$(h,I)};W(As,h=>{l(T)&&l(J)&&h(Ts)})}var Ne=d(Ue,2),Sr=c(Ne),yr=d(Sr,2),je=c(yr),Be=c(je),Rs=c(Be),xs=d(Be,2),wr=d(je,2),Le=d(wr,2),Ms=c(Le);Y(Ms,{variant:"outline",size:"sm",onclick:es,get disabled(){return l(f)},children:(h,I)=>{var w=B();R(()=>S(w,l(f)?"⏳ Проверка...":"🔍 Проверить версии")),$(h,w)},$$slots:{default:!0}});var $r=d(Le,2);{var Vs=h=>{var I=an(),w=c(I);R(()=>{a(I,1,v(i.errorMessage)),S(w,`❌ Ошибка: ${l(E)??""}`)}),$(h,I)};W($r,h=>{l(E)&&h(Vs)})}var br=d($r,2);{var Os=h=>{var I=cn(),w=c(I),M=d(w,2),U=d(M,2),L=c(U);Qe(L,{get href(){return Ke.AUTH},children:(x,j)=>{Y(x,{variant:"primary",size:"sm",children:(k,Q)=>{var C=B("Перейти к авторизации");$(k,C)},$$slots:{default:!0}})},$$slots:{default:!0}}),R(()=>{a(I,1,v(i.authRequired)),a(w,1,v(i.authMessage)),a(M,1,v(i.authDescription)),a(U,1,v(i.authActions))}),$(h,I)};W(br,h=>{l(p)&&l(A)&&h(Os)})}var Us=d(br,2);{var ks=h=>{var I=vn(),w=d(c(I),2),M=c(w);{var U=et=>{var X=dn();R(()=>a(X,1,v(i.emptyMessage))),$(et,X)},L=et=>{var X=ie(),oe=Ut(X);kt(oe,1,()=>l(y).allUserIds,Pt,(Fe,He)=>{var Ft=ln(),ne=c(Ft);R(()=>{a(Ft,1,v(i.userItem)),S(ne,`User ID: ${l(He)??""} | Version: ${l(y).userStats.completedUsers>0?"2":"1"}`)}),$(Fe,Ft)}),$(et,X)};W(M,et=>{l(y).allUserIds.length===0?et(U):et(L,!1)})}var x=d(w,4),j=c(x),k=c(j),Q=d(j,2),C=c(Q),P=d(Q,2),F=c(P),ht=d(x,4),At=c(ht),ot=c(At),ut=d(At,2),pt=c(ut),Tt=d(ut,2),Rt=c(Tt),xt=d(Tt,2),Mt=c(xt),Vt=d(ht,4),Dt=c(Vt),zt=c(Dt),nt=d(Dt,2),St=c(nt),_t=d(nt,2),Ot=c(_t),Wt=d(_t,2),Gt=c(Wt);R((et,X)=>{a(I,1,v(i.versionResults)),a(w,1,v(i.userList)),a(x,1,v(i.statsGrid)),S(k,`Всего пользователей: ${l(y).userStats.totalUsers??""}`),S(C,`Завершили миграцию: ${l(y).userStats.completedUsers??""}`),S(F,`Готовность: ${l(y).userStats.completionPercentage??""}%`),a(ht,1,v(i.statsGrid)),S(ot,`Всего friends: ${l(y).entitiesStats.friends.total??""}`),S(pt,`С версией: ${l(y).entitiesStats.friends.withVersion??""}`),S(Rt,`Без версии: ${l(y).entitiesStats.friends.withoutVersion??""}`),S(Mt,`Готовность: ${et??""}%`),a(Vt,1,v(i.statsGrid)),S(zt,`Всего rooms: ${l(y).entitiesStats.rooms.total??""}`),S(St,`С версией: ${l(y).entitiesStats.rooms.withVersion??""}`),S(Ot,`Без версии: ${l(y).entitiesStats.rooms.withoutVersion??""}`),S(Gt,`Готовность: ${X??""}%`)},[()=>l(y).entitiesStats.friends.total>0?Math.round(l(y).entitiesStats.friends.withVersion/l(y).entitiesStats.friends.total*100):100,()=>l(y).entitiesStats.rooms.total>0?Math.round(l(y).entitiesStats.rooms.withVersion/l(y).entitiesStats.rooms.total*100):100],tt),$(h,I)};W(Us,h=>{l(p)&&l(y)&&!l(A)&&h(ks)})}var qe=d(Ne,2),Ir=c(qe),Er=d(Ir,2),ze=c(Er),Dr=c(ze),Ar=c(Dr),Ps=d(Ar,2),Tr=d(ze,2),We=d(Tr,2),Cs=c(We);Y(Cs,{variant:"outline",size:"sm",get disabled(){return l(Et)},onclick:ss,children:(h,I)=>{var w=B();R(()=>S(w,l(Et)?"⏳ Проверка...":"🔍 Проверить версии")),$(h,w)},$$slots:{default:!0}});var Rr=d(We,2);{var Ns=h=>{var I=un(),w=c(I),M=d(w,2),U=d(M,2),L=c(U);Qe(L,{get href(){return Ke.AUTH},children:(x,j)=>{Y(x,{variant:"primary",size:"sm",children:(k,Q)=>{var C=B("🔑 Авторизоваться");$(k,C)},$$slots:{default:!0}})},$$slots:{default:!0}}),R(()=>{a(I,1,v(i.authRequired)),a(w,1,v(i.authMessage)),a(M,1,v(i.authDescription)),a(U,1,v(i.authActions))}),$(h,I)};W(Rr,h=>{l(It)&&l(A)&&h(Ns)})}var js=d(Rr,2);{var Bs=h=>{var I=yn(),w=d(c(I),4),M=c(w),U=d(c(M)),L=d(M,2),x=d(c(L)),j=d(L,2),k=d(c(j)),Q=d(w,4),C=c(Q),P=d(c(C)),F=d(C,2),ht=d(c(F)),At=d(F,2),ot=d(c(At)),ut=d(Q,4),pt=c(ut),Tt=d(c(pt)),Rt=d(pt,2),xt=d(c(Rt)),Mt=d(Rt,2),Vt=d(c(Mt)),Dt=d(ut,2);{var zt=nt=>{var St=Sn(),_t=d(Ut(St),2),Ot=d(c(_t),2),Wt=c(Ot);{var Gt=N=>{var q=_n();R(()=>a(q,1,v(i.emptyMessage))),$(N,q)},et=N=>{var q=ie(),Ht=Ut(q);kt(Ht,1,()=>l(D).versionsAnalysis.accounts,Pt,(Yt,it)=>{var at=gn(),yt=c(at),Qt=c(yt),wt=d(yt),Kt=d(wt);{var Jt=ct=>{var $t=B();R(Xt=>S($t,`(${Xt??""}%)`),[()=>(l(it).count/l(D).accountsCount*100).toFixed(1)],tt),$(ct,$t)};W(Kt,ct=>{l(D).accountsCount>0&&ct(Jt)})}R(()=>{a(at,1,v(i.versionItem)),S(Qt,`Версия ${l(it).version??""}:`),S(wt,` ${l(it).count??""} записей `)}),$(Yt,at)}),$(N,q)};W(Wt,N=>{l(D).versionsAnalysis.accounts.length===0?N(Gt):N(et,!1)})}var X=d(_t,2),oe=d(c(X),2),Fe=c(oe);{var He=N=>{var q=mn();R(()=>a(q,1,v(i.emptyMessage))),$(N,q)},Ft=N=>{var q=ie(),Ht=Ut(q);kt(Ht,1,()=>l(D).versionsAnalysis.rooms,Pt,(Yt,it)=>{var at=fn(),yt=c(at),Qt=c(yt),wt=d(yt),Kt=d(wt);{var Jt=ct=>{var $t=B();R(Xt=>S($t,`(${Xt??""}%)`),[()=>(l(it).count/l(D).roomsCount*100).toFixed(1)],tt),$(ct,$t)};W(Kt,ct=>{l(D).roomsCount>0&&ct(Jt)})}R(()=>{a(at,1,v(i.versionItem)),S(Qt,`Версия ${l(it).version??""}:`),S(wt,` ${l(it).count??""} записей `)}),$(Yt,at)}),$(N,q)};W(Fe,N=>{l(D).versionsAnalysis.rooms.length===0?N(He):N(Ft,!1)})}var ne=d(X,2),Pr=d(c(ne),2),zs=c(Pr);{var Ws=N=>{var q=hn();R(()=>a(q,1,v(i.emptyMessage))),$(N,q)},Gs=N=>{var q=ie(),Ht=Ut(q);kt(Ht,1,()=>l(D).versionsAnalysis.friends,Pt,(Yt,it)=>{var at=pn(),yt=c(at),Qt=c(yt),wt=d(yt),Kt=d(wt);{var Jt=ct=>{var $t=B();R(Xt=>S($t,`(${Xt??""}%)`),[()=>(l(it).count/l(D).friendsCount*100).toFixed(1)],tt),$(ct,$t)};W(Kt,ct=>{l(D).friendsCount>0&&ct(Jt)})}R(()=>{a(at,1,v(i.versionItem)),S(Qt,`Версия ${l(it).version??""}:`),S(wt,` ${l(it).count??""} записей `)}),$(Yt,at)}),$(N,q)};W(zs,N=>{l(D).versionsAnalysis.friends.length===0?N(Ws):N(Gs,!1)})}R(()=>{a(_t,1,v(i.versionDetailSection)),a(Ot,1,v(i.versionStats)),a(X,1,v(i.versionDetailSection)),a(oe,1,v(i.versionStats)),a(ne,1,v(i.versionDetailSection)),a(Pr,1,v(i.versionStats))}),$(nt,St)};W(Dt,nt=>{l(D).versionsAnalysis&&nt(zt)})}R((nt,St,_t)=>{a(I,1,v(i.versionResults)),a(w,1,v(i.statsGrid)),S(U,` ${l(D).accountsCount??""} записей`),S(x,` ${l(D).roomsCount??""} записей`),S(k,` ${l(D).friendsCount??""} записей`),a(Q,1,v(i.statsGrid)),S(P,` ${l(D).accounts??""}`),S(ht,` ${l(D).rooms??""}`),S(ot,` ${l(D).friends??""}`),a(ut,1,v(i.statsGrid)),S(Tt,` ${l(D).accountsWithVersion??""} из ${l(D).accountsCount??""}
                                (${nt??""}%)`),S(xt,` ${l(D).roomsWithVersion??""} из ${l(D).roomsCount??""}
                                (${St??""}%)`),S(Vt,` ${l(D).friendsWithVersion??""} из ${l(D).friendsCount??""}
                                (${_t??""}%)`)},[()=>l(D).accountsCount>0?(l(D).accountsWithVersion/l(D).accountsCount*100).toFixed(1):0,()=>l(D).roomsCount>0?(l(D).roomsWithVersion/l(D).roomsCount*100).toFixed(1):0,()=>l(D).friendsCount>0?(l(D).friendsWithVersion/l(D).friendsCount*100).toFixed(1):0],tt),$(h,I)};W(js,h=>{l(It)&&l(D)&&!l(A)&&h(Bs)})}var xr=d(qe,2),Mr=c(xr),Vr=d(Mr,2),Ge=c(Vr),Or=c(Ge),Ls=c(Or),Ur=d(Ge,2),kr=d(Ur,2),qs=c(kr);Qe(qs,{get href(){return Ke.HOME},children:(h,I)=>{Y(h,{variant:"outline",size:"sm",children:(w,M)=>{var U=B("Перейти на главную");$(w,U)},$$slots:{default:!0}})},$$slots:{default:!0}}),R(h=>{a(fe,1,v(i.settingsContainer)),a(tr,1,v(i.settingsGrid)),a(he,1,v(i.settingSection)),a(er,1,v(i.sectionTitle)),a(pe,1,v(i.settingItem)),a(Se,1,v(i.settingHeader)),a(ye,1,v(i.settingName)),a(os,1,v(i.settingIcon)),a(rr,1,v(i.settingDescription)),a(sr,1,v(i.themeSelector)),a(or,1,v(i.settingItem)),a(we,1,v(i.settingHeader)),a($e,1,v(i.settingName)),a(ds,1,v(i.settingIcon)),a(nr,1,`${i.statusIndicator} ${i.statusActive}`),S(ls,`● ${h??""}`),a(ir,1,v(i.settingDescription)),a(ar,1,v(i.settingActions)),a(be,1,v(i.settingSection)),a(cr,1,v(i.sectionTitle)),a(dr,1,v(i.settingItem)),a(Ie,1,v(i.settingHeader)),a(Ee,1,v(i.settingName)),a(us,1,v(i.settingIcon)),a(_s,1,`${i.statusIndicator} ${i.statusActive}`),a(lr,1,v(i.settingDescription)),a(De,1,v(i.settingActions)),a(Ae,1,v(i.settingSection)),a(vr,1,v(i.sectionTitle)),a(Te,1,v(i.settingItem)),a(Re,1,v(i.settingHeader)),a(xe,1,v(i.settingName)),a(hs,1,v(i.settingIcon)),a(ur,1,`${i.statusIndicator} ${i.statusActive}`),S(ps,`● ${l(m)??""} АКТИВНЫХ`),a(Ss,1,v(i.settingDescription)),a(_r,1,v(i.settingItem)),a(Me,1,v(i.settingHeader)),a(Ve,1,v(i.settingName)),a(ys,1,v(i.settingIcon)),a(ws,1,`${i.statusIndicator} ${i.statusActive}`),a(gr,1,v(i.settingDescription)),a(Oe,1,v(i.settingActions)),a(bs,1,v(i.settingDescription)),a(Ue,1,v(i.settingSection)),a(fr,1,v(i.sectionTitle)),a(hr,1,v(i.settingItem)),a(ke,1,v(i.settingHeader)),a(Pe,1,v(i.settingName)),a(Is,1,v(i.settingIcon)),a(Es,1,`${i.statusIndicator} ${i.statusActive}`),a(pr,1,v(i.settingDescription)),a(Ce,1,v(i.settingActions)),a(Ne,1,v(i.settingSection)),a(Sr,1,v(i.sectionTitle)),a(yr,1,v(i.settingItem)),a(je,1,v(i.settingHeader)),a(Be,1,v(i.settingName)),a(Rs,1,v(i.settingIcon)),a(xs,1,`${i.statusIndicator} ${i.statusActive}`),a(wr,1,v(i.settingDescription)),a(Le,1,v(i.settingActions)),a(qe,1,v(i.settingSection)),a(Ir,1,v(i.sectionTitle)),a(Er,1,v(i.settingItem)),a(ze,1,v(i.settingHeader)),a(Dr,1,v(i.settingName)),a(Ar,1,v(i.settingIcon)),a(Ps,1,v(l(Et)?"⏳ Проверка версий...":"🗂️ Версии сущностей")),a(Tr,1,v(i.settingDescription)),a(We,1,v(i.settingActions)),a(xr,1,v(i.settingSection)),a(Mr,1,v(i.sectionTitle)),a(Vr,1,v(i.settingItem)),a(Ge,1,v(i.settingHeader)),a(Or,1,v(i.settingName)),a(Ls,1,v(i.settingIcon)),a(Ur,1,v(i.settingDescription)),a(kr,1,v(i.settingActions))},[()=>u.toUpperCase()],tt),$(s,fe),Wr(),r()}function An(s){to(s,{title:"СИСТЕМА_НАСТРОЕК",subtitle:"КОНФИГУРАЦИЯ_И_УПРАВЛЕНИЕ_СИСТЕМОЙ",pageName:"SettingsPage",children:(t,e)=>{$n(t,{})},$$slots:{default:!0}})}export{An as default};
