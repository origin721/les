import{W as s,af as a,at as r,H as o,ax as n}from"./index-RWYpteh1.js";const i={async getList(){return await s.fetch({path:a.GET_FRIENDS})},async getByAccountId(t){return await s.fetch({path:a.GET_FRIENDS_BY_ACCOUNT_ID,body:{myAccId:t}})},async getById(t){return await s.fetch({path:a.GET_FRIEND_BY_ID,body:{friendId:t}})},async add(t){r("üåê API friends.add –°–¢–ê–†–¢:",t);const c=Date.now();try{let e;Array.isArray(t)?(e={path:a.ADD_FRIENDS,body:{list:t}},r("üåê API friends.add: –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç (–º–∞—Å—Å–∏–≤)")):(e={path:a.ADD_FRIENDS,body:{list:t.friends,myAccId:t.myAccId}},r("üåê API friends.add: –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç —Å myAccId:",t.myAccId)),r("üåê API friends.add: –≤—ã–∑—ã–≤–∞–µ–º shared_worker_store.fetch —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:",e);const d=await s.fetch(e);return r("‚úÖ API friends.add –£–°–ü–ï–• –∑–∞",Date.now()-c,"–º—Å, —Ä–µ–∑—É–ª—å—Ç–∞—Ç:",d),d}catch(e){throw o("‚ùå API friends.add –û–®–ò–ë–ö–ê –∑–∞",Date.now()-c,"–º—Å:",e),r("‚ùå API friends.add –ø–æ–ª–Ω–∞—è –æ—à–∏–±–∫–∞:",e==null?void 0:e.stack),e}},async delete(t){await s.fetch({path:a.DELETE_FRIENDS,body:{ids:t}})},async put(t){await s.fetch({path:a.PUT_FRIENDS,body:{list:t}})}},u={async login(t){await s.fetch({path:a.LOGIN,body:{pass:t}})},async getList(){return await s.fetch({path:a.GET_ACCOUNTS})}},A={subscribeActiveTabsCount(t){return n("tabs.subscribeActiveTabsCount –í–´–ó–û–í"),s.subscribeToWorker({payload:{path:a.GET_ACTIVE_TABS_COUNT},callback:c=>{n("tabs.subscribeActiveTabsCount –ø–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ:",c),t(c.count)}})}},y={friends:i,accounts:u,tabs:A};export{y as s};
